WEBVTT

NOTE duration:"01:20:24"

NOTE recognizability:0.769

NOTE language:en-us

NOTE Confidence: 0.73782863

b8d86eac-fccc-4fa1-a3df-8ebf2066650a
00:00:10.340 --> 00:00:13.340
Hi and welcome back to another VC libraries.

NOTE Confidence: 0.73782863

25207a0a-d653-49db-9469-89bd9ece42b2
00:00:13.340 --> 00:00:14.180
Open code review.

NOTE Confidence: 0.73782863

535df3c7-c25d-4fa1-a1c2-5ca6da2bdb85
00:00:14.180 --> 00:00:16.140
Today we'll be looking at a PR,

NOTE Confidence: 0.73782863

4fbb51a0-6e10-4500-9559-2481c982f137
00:00:16.140 --> 00:00:19.122
a very large one from Casey Carter

NOTE Confidence: 0.73782863

9ba86591-0ac5-4dda-8f34-d2fee6340be5
00:00:19.122 --> 00:00:22.311
and the PR will be number 2806

NOTE Confidence: 0.73782863

0d2406b4-da7e-4b6b-b7b0-170cf7680428
00:00:22.311 --> 00:00:25.257
implementing paper P 1206 R 7

NOTE Confidence: 0.73782863

a7ec5547-21b7-4e8e-a830-dd63ee99339d
00:00:25.257 --> 00:00:27.999
conversions from ranges to containers.

NOTE Confidence: 0.73782863

a385e703-0d58-4a8e-b194-5ea2994a7826
00:00:28.000 --> 00:00:31.656
Let me go ahead and share my screen.

NOTE Confidence: 0.73782863

1e856994-663e-46c2-9137-72a39118102e
00:00:31.660 --> 00:00:34.796
So here is the PR we'll be

NOTE Confidence: 0.73782863

c0895be0-9df8-4445-98ed-00bb13c5e473
00:00:34.796 --> 00:00:37.220
looking at 2806 UM, as usual, uh,

NOTE Confidence: 0.73782863

c96d8f1a-f315-432d-a094-dd5088acba3f
00:00:37.220 --> 00:00:41.336
we have a tracking issue that's this

NOTE Confidence: 0.73782863

a0b08b4c-e9ab-47ce-a89d-f85ec30b1f54
00:00:41.340 --> 00:00:43.909
12532 that links to the paper itself

NOTE Confidence: 0.73782863

617691c1-a165-4b6f-aa7e-4f6090ac694d
00:00:43.909 --> 00:00:46.283
and mentions the feature test macro

NOTE Confidence: 0.73782863

243c04bb-b2a2-45ad-8521-e90e8c6a2398
00:00:46.283 --> 00:00:48.288
values as we're finally decided

NOTE Confidence: 0.73782863

3eaae63f-b31b-4bdc-8291-1f110ff67721
00:00:48.288 --> 00:00:50.861
for the CPS working paper and I

NOTE Confidence: 0.73782863

51eef84e-b425-4355-8cb5-1869e25a39b5
00:00:50.861 --> 00:00:53.053
have brought up the paper itself.

NOTE Confidence: 0.73782863

d9524399-be97-4797-a95f-836e68debe52
00:00:53.053 --> 00:00:56.997
Some context here is we are trying to

NOTE Confidence: 0.73782863

a108d3c7-4957-496b-b351-2350ba22ed42
00:00:56.997 --> 00:00:59.242
implement all of the C23 papers that

NOTE Confidence: 0.73782863

0f27065e-1ccb-4ee0-a93d-5619e89643b9
00:00:59.242 --> 00:01:01.839
have been voted in so far to the standard.

NOTE Confidence: 0.73782863

cf599d7e-0cc0-4afc-a75b-954c7bc9757b
00:01:01.840 --> 00:01:03.096
Here's our status chart.

NOTE Confidence: 0.73782863

4083a278-61ac-416c-86e4-7fdece85b98a
00:01:03.096 --> 00:01:05.589
This is since we went open source or

NOTE Confidence: 0.73782863

8ace4fa0-861a-4e2c-a8d2-428f38568e3b
00:01:05.589 --> 00:01:07.757
I can click on more history to get

NOTE Confidence: 0.73782863

439ad877-0fcc-443e-b45d-72d8fd10aedf
00:01:07.823 --> 00:01:09.965
the entire recorded history since mid

NOTE Confidence: 0.73782863

16e605d3-1d7b-4161-9bd3-a5f4ecbc52df
00:01:09.965 --> 00:01:12.188
2017 when we started keeping track.

NOTE Confidence: 0.73782863

b483ff2e-3fa4-44bd-86d2-7328f599f104
00:01:12.188 --> 00:01:16.531
So currently we are at six C + + 23

NOTE Confidence: 0.73782863

7cedc22a-958e-48df-89db-0f164a476b6f
00:01:16.531 --> 00:01:19.819
library features remaining to be implemented.

NOTE Confidence: 0.73782863

7ca9dbf5-1d44-4c3e-aeb8-0aa9f3fac572
00:01:19.820 --> 00:01:21.440
And once we get this, uh,

NOTE Confidence: 0.73782863

7fa1c4f8-0d39-43cb-8da5-b55d98b98f6c
00:01:21.440 --> 00:01:23.330
paper merged, we'll be down to five.

NOTE Confidence: 0.73782863

365e7eaa-53be-4fb3-a1a0-0600ad798be1
00:01:23.330 --> 00:01:24.974
So every time this line ticks

NOTE Confidence: 0.73782863

1d247e1f-b066-4e27-9b20-d224e2f0deb7
00:01:24.974 --> 00:01:27.067
down from 6 to 5 and so forth,

NOTE Confidence: 0.73782863

8099a3d6-c750-4975-ac57-32696842a8e3
00:01:27.070 --> 00:01:28.402
that's a major accomplishment.

NOTE Confidence: 0.73782863

9558dd16-2efa-470a-8b17-d508be631dc2
00:01:28.402 --> 00:01:30.400
Even though it looks like it's

NOTE Confidence: 0.73782863

39b091cb-a211-4b4f-9648-3e6667632dc9
00:01:30.454 --> 00:01:32.400
just a very small amount and we're

NOTE Confidence: 0.73782863

6f187059-55f1-4a7a-b78e-ce503f7ffdfa
00:01:32.400 --> 00:01:33.620
trying to remain clean.

NOTE Confidence: 0.73782863

14358d4a-8cb3-4a17-856d-fe0956008c8c
00:01:33.620 --> 00:01:34.838
You can see this sort of zigzag,

NOTE Confidence: 0.73782863

37887999-2af5-473e-b717-97ea151fe4f6
00:01:34.840 --> 00:01:39.214
especially if I focus on just C + 23.

NOTE Confidence: 0.73782863

67f9d1bb-6000-4f64-982d-d629efabe825
00:01:39.220 --> 00:01:40.762
This sort of sawtooth pattern every

NOTE Confidence: 0.73782863

d9f1d32c-8310-46d8-868d-425b4df590d8
00:01:40.762 --> 00:01:42.270
time the committee votes and stuff,

NOTE Confidence: 0.73782863

c364c969-35d5-4096-ad03-b257b043bd80
00:01:42.270 --> 00:01:44.340
we go and implement it merge a lot of

NOTE Confidence: 0.73782863

24a70583-f3e6-4fb1-bcd7-d6cdbdf73747
00:01:44.340 --> 00:01:46.187
things for our from our contributors,

NOTE Confidence: 0.73782863

ec3db41e-8197-4e04-9e64-7f2f55363c52
00:01:46.190 --> 00:01:48.024
then the committee votes and more stuff.

NOTE Confidence: 0.73782863

2cc88b4f-61ac-4308-b8b0-d279e03f8b53
00:01:48.030 --> 00:01:49.990
And by trying to remain clean and

NOTE Confidence: 0.73782863

f5dfa40c-54a4-4223-a247-58ae22451ca9
00:01:49.990 --> 00:01:52.168
getting down to close to zero before

NOTE Confidence: 0.73782863

01714ee9-3014-46d8-879b-2fae3fa230e5
00:01:52.168 --> 00:01:54.088
the committee votes and more stuff,

NOTE Confidence: 0.73782863

090bb7d7-dbb8-4a96-9c8a-13e272fc2f6b
00:01:54.090 --> 00:01:56.010
we don't develop a huge backlog,

NOTE Confidence: 0.73782863

720ab209-7df6-4b79-a0dd-21906963396f
00:01:56.010 --> 00:01:57.920
which is what happened during

NOTE Confidence: 0.73782863

3eb9f96e-e8b8-4b02-ac03-507cec3f86ee
00:01:57.920 --> 00:01:59.830
the CS plus 20 era,

NOTE Confidence: 0.73782863

dc3e9e30-19fe-4ecd-be73-d9f9a46b8ced
00:01:59.830 --> 00:02:02.566
as we're getting better and better

NOTE Confidence: 0.73782863

3a613e67-3576-4d5d-9e47-b3e58285e846
00:02:02.566 --> 00:02:04.390
at implementing features rapidly.

NOTE Confidence: 0.73782863

010e063c-c189-46bb-a3db-93292689a4df
00:02:04.390 --> 00:02:06.590
So it's great to see that Casey has

NOTE Confidence: 0.73782863

5189868b-ac9d-41e8-9044-75649dd12978
00:02:06.590 --> 00:02:08.569
implemented this paper that he Co authored.

NOTE Confidence: 0.73782863

ae3788d8-af95-4f10-b2ae-df44f16ef4de
00:02:08.570 --> 00:02:09.452
It is however.

NOTE Confidence: 0.73782863

1078eedb-b5b1-4bfd-bbdf-6f40e12cb28f
00:02:09.452 --> 00:02:12.450
A very large PR and a very large paper.

NOTE Confidence: 0.73782863

5f7772cf-d3de-49bb-8156-3657fd98cb9d
00:02:12.450 --> 00:02:12.728
Uh,

NOTE Confidence: 0.73782863

4dbbfbf9-0c9c-40cc-b40c-ac7c452ae178
00:02:12.728 --> 00:02:15.730
if we look at the PR it's over 7000 lines.

NOTE Confidence: 0.73782863

d6df495a-377c-4c79-91bb-9b3d5f1810da
00:02:15.730 --> 00:02:16.888
A lot of its test code,

NOTE Confidence: 0.73782863

5d2f2265-f6f2-4f42-86f0-5231f518699a
00:02:16.890 --> 00:02:19.005
but it's not entirely test

NOTE Confidence: 0.73782863

83122581-316a-47c4-b383-1d8e3a842812
00:02:19.005 --> 00:02:20.802
code and the feature itself.

NOTE Confidence: 0.73782863

e844c308-996d-4962-af5c-e25721f7333f
00:02:20.802 --> 00:02:23.222
I was just scrolling down to the

NOTE Confidence: 0.73782863

721f9299-40c6-47e8-8927-d40a0d4c3ca2
00:02:23.222 --> 00:02:25.566
bottom and this is an 86 page paper,

NOTE Confidence: 0.73782863

b589807b-bc39-4a65-8221-ba8556ce55b1
00:02:25.570 --> 00:02:28.384
so this is actually a relatively large

NOTE Confidence: 0.73782863

95ba7994-49cd-46c4-9a73-f1e93b00594f
00:02:28.384 --> 00:02:31.322
feature authored by quarantine jabat,

NOTE Confidence: 0.73782863

5efede62-2a53-4cf4-9fc6-52ade47b2f23
00:02:31.322 --> 00:02:34.487
Eric Niebler and Casey Carter,

NOTE Confidence: 0.73782863

1723ac0f-6a10-4b97-98cf-f69d0b9d5430
00:02:34.490 --> 00:02:35.840
and I am vaguely familiar

NOTE Confidence: 0.73782863

87f5c578-ba25-4108-a619-ab8df17a4c66
00:02:35.840 --> 00:02:37.590
with what the paper is doing,

NOTE Confidence: 0.73782863

c2b3b595-517b-4efb-99fc-1d31e2effbd9
00:02:37.590 --> 00:02:38.517
but not entirely,

NOTE Confidence: 0.73782863

fddeba87-8d7a-450a-92b7-e17d49b191bf
00:02:38.517 --> 00:02:41.239
so I'll be spending a little bit of time.

NOTE Confidence: 0.73782863

41157b0f-04a6-44ba-a292-6cada9421726
00:02:41.240 --> 00:02:44.544
Reading this paper uh on the video code

NOTE Confidence: 0.73782863

ac973e7c-408e-430e-a3d3-7d225899131d
00:02:44.544 --> 00:02:46.875
review and mentioning my thoughts before

NOTE Confidence: 0.73782863

60553d23-5341-4658-9077-4fd700818551
00:02:46.875 --> 00:02:49.748
we delve into the code and so forth.

NOTE Confidence: 0.73782863

228c8dde-32c9-45b8-96c9-c11cfe7e0e0b
00:02:49.750 --> 00:02:53.612
Uh, OK, so to start with Umm, let's see.

NOTE Confidence: 0.73782863

e8b9d08e-68db-42b5-8877-d43cfc89576d
00:02:53.612 --> 00:02:55.208
I think this is big enough.

NOTE Confidence: 0.73782863

d89c07ae-9a4a-42d6-b030-38180044d78f
00:02:55.210 --> 00:02:56.362
I'm at 1:50.

NOTE Confidence: 0.73782863

3ea39d65-e16c-4765-94fc-c50b3fcb98a5
00:02:56.362 --> 00:02:59.510
Zoom Casey has an excellent change log here.

NOTE Confidence: 0.73782863

4100dbd3-10a4-4722-85f2-e94dd403bb24
00:02:59.510 --> 00:03:02.662
This is something that's

NOTE Confidence: 0.73782863

e206f6d6-945a-43b5-9bde-f34390fc0dfd
00:03:02.662 --> 00:03:05.206
greatly appreciated in PQRS,

NOTE Confidence: 0.73782863

4906d076-a051-4d48-b398-f08354b55702
00:03:05.210 --> 00:03:07.198
where you know we have the tracking

NOTE Confidence: 0.73782863

5aa4b800-a955-49ed-82ad-f8e2013307a4
00:03:07.198 --> 00:03:09.530
issues so we can see what it's doing.

NOTE Confidence: 0.73782863

0870a399-9d3b-4792-8b51-36a147674dde
00:03:09.530 --> 00:03:11.366
But it's also helpful to have

NOTE Confidence: 0.73782863

3340bbfb-c523-4efe-a00a-968de7905bd1
00:03:11.366 --> 00:03:12.590
a guide to what

NOTE Confidence: 0.867040930714286

a403d3d9-69a9-415d-8dad-e5c95f0f2aa4
00:03:12.658 --> 00:03:14.290
files are being changed.

NOTE Confidence: 0.867040930714286

4d98abc3-61d3-4dad-b4e9-d58b77c37e00
00:03:14.290 --> 00:03:16.691
So here Casey's broken it up by

NOTE Confidence: 0.867040930714286

edc63f68-8f12-4967-8d29-d457ac3700c8
00:03:16.691 --> 00:03:18.150
each individual header that's

NOTE Confidence: 0.867040930714286

1c2a3e20-7ad8-4ee2-9d11-e978352bdeba
00:03:18.150 --> 00:03:20.328
being modified and the test that.

NOTE Confidence: 0.867040930714286

b3d83528-741a-444b-94d0-459ab1e039b0
00:03:20.330 --> 00:03:22.157
That are being modified and so forth.

NOTE Confidence: 0.867040930714286

e1c675fa-a1ce-4d73-a0f9-638acbcb7cc2
00:03:22.160 --> 00:03:23.852
So if I'm ever confused about

NOTE Confidence: 0.867040930714286

87ba0d48-2846-4bc7-8a44-6603178df2bf
00:03:23.852 --> 00:03:25.600
like why changes are happening,

NOTE Confidence: 0.867040930714286

4babb392-7838-4770-b776-354f1baff3df
00:03:25.600 --> 00:03:28.048
especially changes to internal

NOTE Confidence: 0.867040930714286

4189a197-1a09-4e36-acc8-7af6bc6c68ba
00:03:28.048 --> 00:03:30.168
machinery that should be answered

NOTE Confidence: 0.867040930714286

fabea06b-f08c-4d15-906c-afb9af37a6d0
00:03:30.168 --> 00:03:32.053
by this change log here,

NOTE Confidence: 0.867040930714286

4c8590a4-972b-4978-ba61-f655521c0bc2
00:03:32.060 --> 00:03:34.340
so I won't go ahead and read all of this,

NOTE Confidence: 0.867040930714286

66bd0c98-53b4-4611-98e3-c6f405a68b93
00:03:34.340 --> 00:03:36.118
but I will consult this if necessary.

NOTE Confidence: 0.867040930714286

4ed976bc-1d7b-4d24-98ac-01f086e00f76
00:03:36.120 --> 00:03:37.392
If I'm wondering, hey,

NOTE Confidence: 0.867040930714286

c2821c06-0821-4bda-a8e0-5bd46a3e1a3a
00:03:37.392 --> 00:03:39.820
you know why is this being changed

NOTE Confidence: 0.867040930714286

37839e1f-e238-4531-a6e5-90ce105e2b0f
00:03:39.820 --> 00:03:41.476
or you know was something missing?

NOTE Confidence: 0.867040930714286

e06e3064-5e33-4d1f-9473-be2ade2af508
00:03:41.480 --> 00:03:43.797
I can go back and check this.

NOTE Confidence: 0.867040930714286

aa0a04d7-5607-425c-b10b-bd243d34e6f0
00:03:43.800 --> 00:03:45.268
There's even notes about.

NOTE Confidence: 0.79039466

0ded0dd7-b56d-4820-b1d3-9fc49351e5c7
00:03:47.360 --> 00:03:48.624
Proposed resolutions for library

NOTE Confidence: 0.79039466

48f8367c-b158-4d78-b3a0-43786003439d
00:03:48.624 --> 00:03:50.520
working group issues that have been

NOTE Confidence: 0.79039466

386ed034-4534-40b2-96be-7c1a6cb3bc46
00:03:50.566 --> 00:03:51.754
implemented because our general

NOTE Confidence: 0.79039466

6bd0bf23-1d52-4100-9f3d-0dc146b9ef43
00:03:51.754 --> 00:03:53.536
rule is we implement what's been

NOTE Confidence: 0.79039466

72e82c80-24c8-472e-895e-955943779095
00:03:53.587 --> 00:03:55.260
voted into the C Plus working paper.

NOTE Confidence: 0.79039466

a4d84582-0c03-499e-8946-2bb5f1175638
00:03:55.260 --> 00:03:57.300
But if we do anything that's not yet

NOTE Confidence: 0.79039466

08d23988-2cea-4038-8c65-3bd0dcba20a2
00:03:57.300 --> 00:03:59.246
official, it is very helpful to know

NOTE Confidence: 0.79039466

6cdbfb51-2309-47fc-82ba-6438b501dbfe
00:03:59.246 --> 00:04:01.240
that that's being done intentionally,

NOTE Confidence: 0.79039466

2dda98d6-0d86-42b8-9200-df0d177b7b7b
00:04:01.240 --> 00:04:04.471
rather than just going off and doing a bunch

NOTE Confidence: 0.79039466

b3ceb46b-695b-4128-a9c2-b0a5d9a5e2dc
00:04:04.471 --> 00:04:07.896
of wild stuff because we think it's right.

NOTE Confidence: 0.79039466

b02b1cab-d72d-47ac-839a-784765ffc1cc
00:04:07.900 --> 00:04:10.996
OK, so let's quickly read the paper and

NOTE Confidence: 0.79039466

5a2479d6-44b5-482c-b3e4-6694eba597c8
00:04:10.996 --> 00:04:14.202
then I will actually start looking at

NOTE Confidence: 0.79039466

11ea793a-7f59-4377-a692-15e834c5ff5a
00:04:14.202 --> 00:04:17.786
the code so the structure of a paper.

NOTE Confidence: 0.79039466

509d2c67-e262-4a3f-a14a-f4b65ef6d05a
00:04:17.790 --> 00:04:18.870
In case you're not familiar,

NOTE Confidence: 0.79039466

07c22eba-095e-4dcd-b38d-7919de483782
00:04:18.870 --> 00:04:20.445
it UM often has a change log

NOTE Confidence: 0.79039466

f1565668-c366-4c26-a0ea-1764796703c1
00:04:20.445 --> 00:04:21.550
for the paper itself,

NOTE Confidence: 0.79039466

abef3712-dce9-49af-a668-02ecaef49de1
00:04:21.550 --> 00:04:24.820
as the paper is revised.

NOTE Confidence: 0.79039466

e7067726-4bd0-43f6-897e-1ca015f0c0e0
00:04:24.820 --> 00:04:26.997
And I will Scroll down here past

NOTE Confidence: 0.79039466

4524aa98-820a-4344-8ae1-d5ca41fee37e
00:04:26.997 --> 00:04:27.930
that change log.

NOTE Confidence: 0.79039466

7524eeae-8ff2-4a1e-97a5-ba1224284e65
00:04:27.930 --> 00:04:30.300
There's a very convenient overview.

NOTE Confidence: 0.79039466

9d2eec2a-5fba-491f-af4a-a9e76b04238c
00:04:30.300 --> 00:04:33.546
I guess I'm highlighting here that

NOTE Confidence: 0.79039466

78b84fd7-1b0b-4a4d-9eab-99a1fdcc55e3
00:04:33.546 --> 00:04:35.976
explains what this is adding,

NOTE Confidence: 0.79039466

35e52b4f-f9fb-4f29-bedb-fe3c77608bca
00:04:35.980 --> 00:04:38.143
so there's going to be a function

NOTE Confidence: 0.79039466

66ffc7b7-54d0-4c6d-bd1a-71900a223791
00:04:38.143 --> 00:04:40.556
ranges 2 and it will take a range,

NOTE Confidence: 0.79039466

df9c22eb-af75-46bc-b900-c228fa1dffa1
00:04:40.560 --> 00:04:43.674
which is that stuff that was added in C

NOTE Confidence: 0.79039466

76e1aa34-e679-4417-bb31-3cb1a462ea2a
00:04:43.674 --> 00:04:46.219
+ 20 and we'll turn it into a container.

NOTE Confidence: 0.79039466

d34dc0ba-5db6-4ae9-a7e8-09e302b0e6ad
00:04:46.220 --> 00:04:48.248
It'll materialize it as a container

NOTE Confidence: 0.79039466

60de07f4-3bdd-4a76-b6c2-03ba066a3c3c
00:04:48.248 --> 00:04:50.677
and it'll work with non standard

NOTE Confidence: 0.79039466

25b484a2-af80-4e36-ba96-9062138abbc3
00:04:50.677 --> 00:04:52.689
containers and recursive containers.

NOTE Confidence: 0.79039466

51f44cc9-43ee-4152-9be9-66d414cd8b84
00:04:52.690 --> 00:04:53.740
I don't know those are yet,

NOTE Confidence: 0.79039466

b7bf30df-eba1-4e8a-aab1-489c023fa560
00:04:53.740 --> 00:04:55.708
but we'll see below.

NOTE Confidence: 0.79039466

aff14c63-2107-432b-a62b-f62259ada300
00:04:55.708 --> 00:04:56.200
Hopefully,

NOTE Confidence: 0.79039466

3a5c3bbf-c40c-4418-988b-38c5caa3a24a
00:04:56.200 --> 00:04:58.377
and it also adds tagged constructors and

NOTE Confidence: 0.79039466

7c70c0a5-8ebf-429c-87b0-014d3fc3a8ca
00:04:58.377 --> 00:05:00.159
assert and assigned member functions

NOTE Confidence: 0.79039466

470f3931-e389-4dfa-b958-2c4fccef9eaf
00:05:00.159 --> 00:05:02.154
for standard containers and strength.

NOTE Confidence: 0.79039466

4f78ebac-cfcd-413b-9134-e12376c517c6
00:05:02.160 --> 00:05:04.560
So there's a bunch of example usage here.

NOTE Confidence: 0.79039466

0da9b2df-d1af-4a8d-bba2-dc970337efe9
00:05:04.560 --> 00:05:06.416
This might be a little small to see.

NOTE Confidence: 0.79039466

68b7be7d-dbe8-487d-9411-c71a6a726be8
00:05:06.420 --> 00:05:09.066
Maybe I can step zoom one.

NOTE Confidence: 0.79039466

670c3673-0f76-4fc4-b9f9-79c63f30561b
00:05:09.070 --> 00:05:11.342
OK, here we go.

NOTE Confidence: 0.79039466

b0d99bab-9448-45db-a184-d66d949fe6c2
00:05:11.342 --> 00:05:13.810
So here's a nice motivating example.

NOTE Confidence: 0.79039466

88f31bf3-ac33-4d7a-9a1d-561a8bec6164
00:05:13.810 --> 00:05:16.650
We've got stood views IOTA one through 10,

NOTE Confidence: 0.79039466

afd84cac-2c51-49a4-afe8-098033e2844f
00:05:16.650 --> 00:05:19.314
so this is gonna count the

NOTE Confidence: 0.79039466

263bd3fb-0b50-4cfb-be9d-463a9055fa02
00:05:19.314 --> 00:05:21.090
numbers one through 10.

NOTE Confidence: 0.79039466

b717f98b-f67f-402c-8b80-59c2e5a2eb42
00:05:21.090 --> 00:05:24.696
I believe that is inclusive here.

NOTE Confidence: 0.79039466

54073a00-9f4f-4d30-9ab9-289b0a77edb6
00:05:24.700 --> 00:05:27.724
And this range can then be fed

NOTE Confidence: 0.79039466

0ce43983-c3b4-4f56-b57a-518de8b97408
00:05:27.724 --> 00:05:29.890
to other algorithms or views,

NOTE Confidence: 0.79039466

db096b79-e41b-467b-840a-ee71f1606523
00:05:29.890 --> 00:05:31.636
and we can operate on that.

NOTE Confidence: 0.79039466

f7715ae7-6460-47d7-8af3-6ee5db005f37
00:05:31.640 --> 00:05:33.789
But this iota view does not actually

NOTE Confidence: 0.79039466

2c99a1cc-106e-4344-9475-9ab64ab13ec8
00:05:33.789 --> 00:05:35.420
physically store the numbers one

NOTE Confidence: 0.79039466

372d588e-c201-4de9-a22d-bb9a2bdfc33e
00:05:35.420 --> 00:05:37.040
through 10 anywhere in memory.

NOTE Confidence: 0.79039466

fd669638-8beb-4c67-8f3e-9e23dee75296
00:05:37.040 --> 00:05:38.734
It's sort of generating them on demand,

NOTE Confidence: 0.79039466

24aa481b-16f5-4311-bd09-330bb1d48898
00:05:38.740 --> 00:05:40.204
as I understand it.

NOTE Confidence: 0.79039466

0d355328-7520-49cd-957a-0bedd350b9eb
00:05:40.204 --> 00:05:43.738
So if we actually want a vector of this,

NOTE Confidence: 0.79039466

bc5b24fe-159a-4a6c-887a-5c6aca6edfc2
00:05:43.740 --> 00:05:45.220
we will now be able,

NOTE Confidence: 0.79039466

d589f565-6180-4773-81d5-d64420a32650
00:05:45.220 --> 00:05:48.620
and C + 23 to say ranges 2 stood for

NOTE Confidence: 0.79039466

241c864e-a5be-4fb4-9f9d-ad18871619ad
00:05:48.716 --> 00:05:51.988
int and that will turn it into a

NOTE Confidence: 0.79039466

1072459b-6cd6-49b9-b044-e679558dad1e
00:05:51.988 --> 00:05:54.969
vector and a bunch of other examples here.

NOTE Confidence: 0.79039466

0e386656-f32c-40a2-975f-7949e9b28129
00:05:54.970 --> 00:05:56.638
I can Scroll down,

NOTE Confidence: 0.79039466

e43ead4c-8077-4f2c-843a-3a0f1481eb7e
00:05:56.638 --> 00:05:59.674
UM ohh I see nested ranges like

NOTE Confidence: 0.79039466

48a21383-7b2c-4569-b89b-8b450cc86b55
00:05:59.674 --> 00:06:01.839
a list of forward list.

NOTE Confidence: 0.79039466

e97cbb91-0f73-4304-b806-7128e3761544
00:06:01.840 --> 00:06:04.234
So if I have a list of forward list

NOTE Confidence: 0.79039466

52c4b522-ce23-48c2-8e5c-85091676061f
00:06:04.234 --> 00:06:06.779
I can convert that into a vector

NOTE Confidence: 0.79039466

adbf248d-3a3c-45d3-b9f5-a0db3c688fd5
00:06:06.779 --> 00:06:08.970
vector int by saying ranges 2.

NOTE Confidence: 0.79039466

66683d70-c092-490b-8adb-52c488d3b33a
00:06:08.970 --> 00:06:09.618
This is cool.

NOTE Confidence: 0.79039466

f20c0e9d-6f9e-455a-bcf2-4b84f152ac13
00:06:09.618 --> 00:06:11.130
We didn't used to be able to

NOTE Confidence: 0.79039466

ab2f25b7-287f-47ee-ac21-a54b3ddfb7ff
00:06:11.184 --> 00:06:12.060
do this directly.

NOTE Confidence: 0.79039466

9737d53e-db78-451f-b120-29dadce50b85
00:06:12.060 --> 00:06:14.676
You could do one level by range constructing

NOTE Confidence: 0.79039466

b8c033d5-9eba-4598-92e9-efad7d708899
00:06:14.676 --> 00:06:17.310
a vector using first and last iterators,

NOTE Confidence: 0.79039466

bf56057f-a7bf-4ec8-aa73-081d09f6d512
00:06:17.310 --> 00:06:19.550
but converting multiple levels was

NOTE Confidence: 0.79039466

c061df0a-20e1-4d14-ac99-17838a71ebbc
00:06:19.550 --> 00:06:21.342
not possible this conveniently,

NOTE Confidence: 0.79039466

13e44b40-044f-4bf7-8bde-864028c8e1b2
00:06:21.350 --> 00:06:23.390
so that's quite nice.

NOTE Confidence: 0.79039466

d0913067-1a64-4e22-93ce-9448a7232d18
00:06:23.390 --> 00:06:23.900
Umm,

NOTE Confidence: 0.79039466

703f36c3-3b84-406a-a4d3-ce7e11455d24
00:06:23.900 --> 00:06:25.680
these before and after tables.

NOTE Confidence: 0.79039466

7c065bcc-92dc-45e5-aab1-4a48c473accc
00:06:25.680 --> 00:06:27.577
We should really not be called Tony

NOTE Confidence: 0.79039466

c4130e2f-b1fc-45df-aa0c-be5b837d1cc9
00:06:27.577 --> 00:06:29.690
tables because that's a bit of W 21

NOTE Confidence: 0.79039466

f540d545-0af8-41d8-8ed4-6da341e9c7af
00:06:29.690 --> 00:06:32.735
insider jargon name for Tony Van Eerd,

NOTE Confidence: 0.79039466

ef89634e-1fe3-46be-82a8-82662f12aa6a
00:06:32.740 --> 00:06:34.308
who's a committee member?

NOTE Confidence: 0.79039466

0d5103dc-ff41-4777-bf28-b1bc7d1d02bf
00:06:34.308 --> 00:06:35.876
Who's popularized these very

NOTE Confidence: 0.79039466

8da208c8-b06f-4890-9535-da2936576026
00:06:35.876 --> 00:06:37.664
useful before and after tables

NOTE Confidence: 0.79039466

b854e97d-6baa-46c8-8903-aa819f289226
00:06:37.664 --> 00:06:39.548
is just the name is inscrutable,

NOTE Confidence: 0.79039466

93933edc-dd87-4b0a-9ff7-db8928f041dc
00:06:39.550 --> 00:06:40.915
and then some design notes

NOTE Confidence: 0.79039466

8f3d8e6b-baa7-4363-acd6-c28422999af4
00:06:40.915 --> 00:06:42.280
on why this is designed.

NOTE Confidence: 0.79039466

1a350b38-42d9-4d00-84b4-23cf05c972d8
00:06:42.280 --> 00:06:43.780
So if you've never read

NOTE Confidence: 0.79039466

84ae21f8-b408-4b8d-bbaa-0993c3cf4fef
00:06:43.780 --> 00:06:44.980
a standard paper before,

NOTE Confidence: 0.79039466

d0c4f4a5-2e86-4e2f-bf04-8e70265a9bc9
00:06:44.980 --> 00:06:47.005
this is actually quite useful

NOTE Confidence: 0.79039466

aa523312-c211-4365-a8ef-86d73501a820
00:06:47.005 --> 00:06:49.030
to understand why a feature

NOTE Confidence: 0.901969474166667

7cb9f63d-20f4-4dc6-bbb5-0ee12b983231
00:06:49.110 --> 00:06:51.800
has been proposed the way it has,

NOTE Confidence: 0.901969474166667

15c0f945-22d0-43fd-8c06-29152ea2677c
00:06:51.800 --> 00:06:54.470
and I will skip over this.

NOTE Confidence: 0.901969474166667

8930a0dc-4983-48d9-abc4-6fe58dc7d566
00:06:54.470 --> 00:06:55.778
Since I've got at least a

NOTE Confidence: 0.901969474166667

ebebd32a-f3d6-4ca7-b46b-942446ad4030
00:06:55.778 --> 00:06:57.129
basic idea of what's going on,

NOTE Confidence: 0.901969474166667

c4340c1a-f445-4995-acaa-715c9863db49
00:06:57.130 --> 00:07:00.118
I did want to jump here I'm talking about.

NOTE Confidence: 0.690638567714286

92ad61fc-f6a8-4d0b-8032-1a78ff8d3da4
00:07:02.240 --> 00:07:06.800
Why the constructors and the Member

NOTE Confidence: 0.690638567714286

820a2fb7-3240-4bbe-982c-6efc4b69a44d
00:07:06.800 --> 00:07:10.936
functions have tax A tag type is an empty.

NOTE Confidence: 0.690638567714286

a3028f6a-561f-4b90-8528-bf3e5f35eb9b
00:07:10.940 --> 00:07:14.748
I guess I can open my editor here.

NOTE Confidence: 0.690638567714286

30922d3c-6dda-4426-a18d-24850cbc15e0
00:07:14.750 --> 00:07:18.353
So. Close this, actually,

NOTE Confidence: 0.690638567714286

2a9991cd-41ba-4cc2-a17c-d5e9724d1b4a
00:07:18.353 --> 00:07:22.240
I guess actually I can even show you

NOTE Confidence: 0.690638567714286

2e31c937-b75f-49d5-953a-3a739187d8d8
00:07:22.240 --> 00:07:25.085
CP reference on piecewise construct.

NOTE Confidence: 0.690638567714286

6b990c22-a3b0-4712-ac5d-0ccfe14271b6
00:07:25.090 --> 00:07:29.248
Here we go. OK, so piecewise construct,

NOTE Confidence: 0.690638567714286

7fd9da72-fe8b-4771-9f89-64aad4154c5e
00:07:29.248 --> 00:07:33.301
which goes back to C + 11 is an

NOTE Confidence: 0.690638567714286

02a33031-f53d-4415-9e8e-baf66e74100b
00:07:33.301 --> 00:07:35.737
example of a standard tag type.

NOTE Confidence: 0.690638567714286

01b738bf-9560-42c8-81a1-6877d074f606
00:07:35.740 --> 00:07:40.510
The the C + 9803 had some tags like uh.

NOTE Confidence: 0.690638567714286

881b509b-f482-4cf8-a5a8-80697c8f246c
00:07:40.510 --> 00:07:42.130
Input iterator tag forward iterator

NOTE Confidence: 0.690638567714286

659a626c-1d58-4f56-a9b4-16d4ec193e86
00:07:42.130 --> 00:07:44.560
tag that we used for tag dispatch.

NOTE Confidence: 0.690638567714286

548c05e1-eed3-49d9-860d-6f527cfb2a86
00:07:44.560 --> 00:07:46.648
Piecewise construct is a little bit

NOTE Confidence: 0.690638567714286

ec81008c-5d78-48b3-97de-4b8dd055dd71
00:07:46.648 --> 00:07:48.040
different because it's actually

NOTE Confidence: 0.690638567714286

f05f19f3-f96c-4881-b46e-a7eebf2d5e6e
00:07:48.092 --> 00:07:49.648
used for actual constructions.

NOTE Confidence: 0.690638567714286

80ad9b4c-5056-4b9c-bef3-7f1525a40529
00:07:49.650 --> 00:07:52.482
You can take a pair and say I

NOTE Confidence: 0.690638567714286

190aa121-0dea-4da5-a3e7-6e4c8a1b3289
00:07:52.482 --> 00:07:55.624
have a pair of A&amp;amp;BI would like to

NOTE Confidence: 0.690638567714286

943d5d06-6452-403f-b41d-63bef027bdb7
00:07:55.624 --> 00:07:58.202
construct the A&amp;amp;B elements of this

NOTE Confidence: 0.690638567714286

6df1f6f3-cf08-42c2-839d-9671d34e2ff1
00:07:58.202 --> 00:08:00.830
pair in place from arbitrary stuff.

NOTE Confidence: 0.690638567714286

fd9d466b-841a-4b41-8f52-a965c1e88294
00:08:00.830 --> 00:08:04.036
Piecewise construct is a tie or piecewise

NOTE Confidence: 0.690638567714286

c3bd4154-2f28-4bda-8607-703d25ff7bc3
00:08:04.036 --> 00:08:07.490
construct is an object of a type

NOTE Confidence: 0.690638567714286

639f31d5-fbab-4403-8bd5-835512ca2698
00:08:07.490 --> 00:08:09.990
piecewise construct and it's stateless.

NOTE Confidence: 0.690638567714286

90d401e8-8372-4348-b04b-108fdbb4a7b5
00:08:09.990 --> 00:08:11.106
It has no.

NOTE Confidence: 0.690638567714286

792e5469-37de-4ea2-8d72-712004875417
00:08:11.106 --> 00:08:12.594
Actual use at runtime.

NOTE Confidence: 0.690638567714286

0c7c27de-71da-416d-ad8b-f58b22a7e481
00:08:12.600 --> 00:08:14.635
It exists only to select

NOTE Confidence: 0.690638567714286

a81d9248-b9c8-4e1e-a8ff-4cd4b3dc2fa0
00:08:14.635 --> 00:08:15.856
a certain constructor,

NOTE Confidence: 0.690638567714286

af45554c-7c5e-42f1-b9d8-f9370989d9ce
00:08:15.860 --> 00:08:17.640
because constructors can't have names.

NOTE Confidence: 0.690638567714286

f9f01c16-0d99-4525-ba68-41649630c981
00:08:17.640 --> 00:08:20.088
But if you have a constructor

NOTE Confidence: 0.690638567714286

3ff4c374-e09a-47db-806e-1b2dfb7e4864
00:08:20.088 --> 00:08:21.720
taking this empty type,

NOTE Confidence: 0.690638567714286

b46e5276-32f0-4525-99b3-3fca3ad03758
00:08:21.720 --> 00:08:23.418
that's like giving it a name.

NOTE Confidence: 0.690638567714286

df3dfff9-bb2b-4bcd-be43-f4684e85de49
00:08:23.420 --> 00:08:25.140
It's A tag constructor.

NOTE Confidence: 0.690638567714286

2cfabf92-2545-440a-863f-95385d5f2707
00:08:25.140 --> 00:08:28.239
That's the unofficial way to refer to it.

NOTE Confidence: 0.690638567714286

06b3712b-23b7-4c25-a63c-dcadd4ad8076
00:08:28.240 --> 00:08:30.220
So, piecewise construct lets you say,

NOTE Confidence: 0.690638567714286

f1ab8bc7-0570-431d-b5ac-01750c021664
00:08:30.220 --> 00:08:31.460
hey, I want to call.

NOTE Confidence: 0.690638567714286

04c18d19-2bd4-4bd9-ae7c-7c5f43ae716f
00:08:31.460 --> 00:08:33.388
I want to construct a pair from a

NOTE Confidence: 0.690638567714286

8ff9b9d3-0317-4418-829d-96793cd76a9f
00:08:33.388 --> 00:08:35.361
couple of tuples and then crack open

NOTE Confidence: 0.690638567714286

d823c49c-3f4c-4244-9662-f860037b21b6
00:08:35.361 --> 00:08:37.693
the tuples and use their arguments to

NOTE Confidence: 0.690638567714286

d7e59ac8-3298-4b19-a3e3-4c8bad85a162
00:08:37.693 --> 00:08:38.956
individually individually construct

NOTE Confidence: 0.690638567714286

43d844bb-7c93-4f11-8189-3956bb439e79
00:08:38.956 --> 00:08:40.990
the A&amp;amp;B and we have to do that.

NOTE Confidence: 0.690638567714286

46f799d2-91d5-46b5-8eb6-8598df89885b
00:08:40.990 --> 00:08:41.695
And construction time.

NOTE Confidence: 0.690638567714286

961f67cf-d043-4050-8a7d-6b36d237c229
00:08:41.695 --> 00:08:43.650
We don't want to go assign them later,

NOTE Confidence: 0.690638567714286

37321a0c-b5c6-4417-b3fd-8de0c5231578
00:08:43.650 --> 00:08:45.168
so that's what piecewise construct does.

NOTE Confidence: 0.690638567714286

1421bd2a-2cbe-4b30-b5db-3dc4298bfbb9
00:08:45.170 --> 00:08:46.898
There's other tag types that have

NOTE Confidence: 0.690638567714286

753bf097-c5fe-4473-b0bf-9fb35efcfe72
00:08:46.898 --> 00:08:48.929
been added to cplus over the years.

NOTE Confidence: 0.690638567714286

7d6b1429-5867-4672-9fc8-8eeea61eab3d
00:08:48.930 --> 00:08:52.318
A couple more I can think of

NOTE Confidence: 0.690638567714286

1ab1137b-c697-481f-a440-c6dd383e2685
00:08:52.318 --> 00:08:55.790
are was it in place index and T?

NOTE Confidence: 0.690638567714286

c4d25f1a-c3e8-436e-b83c-3d9a8b83b7db
00:08:55.790 --> 00:08:57.290
And there's also in place.

NOTE Confidence: 0.690638567714286

7357af98-1349-4247-b2a6-dc445cb18a5d
00:08:57.290 --> 00:08:58.466
T Yeah,

NOTE Confidence: 0.690638567714286

26de57c8-8d9b-4ad5-93bb-e8dfd8e0c5a0
00:08:58.466 --> 00:09:01.994
so if you're constructing an optional

NOTE Confidence: 0.690638567714286

c79abf2e-fe04-4b23-9097-a5fe9ebb54e3
00:09:01.994 --> 00:09:04.890
variant or any you can use in place

NOTE Confidence: 0.690638567714286

05de8524-abb9-469f-9ca8-b3475e73cbb8
00:09:04.890 --> 00:09:07.211
in place type or in place index to

NOTE Confidence: 0.690638567714286

c58e2207-6729-4a79-9a58-b30467f4d716
00:09:07.211 --> 00:09:09.437
say I want to construct this thing

NOTE Confidence: 0.690638567714286

8dde8c00-f1ab-4a89-a7a9-d4dc0e257f0c
00:09:09.509 --> 00:09:11.455
at this index or of this type.

NOTE Confidence: 0.690638567714286

0d1af6f0-4a7a-468e-ad70-dc486b793b05
00:09:11.460 --> 00:09:13.616
And the tag not only tells you,

NOTE Confidence: 0.690638567714286

8857b7e3-eb51-4549-af2c-90069ffccaf3
00:09:13.620 --> 00:09:15.220
it tells the library which

NOTE Confidence: 0.690638567714286

2daf9da4-b099-434d-887b-2976d6b3d18c
00:09:15.220 --> 00:09:16.180
constructor you want,

NOTE Confidence: 0.690638567714286

7c273616-c88c-4ca6-bce6-e7d2d3147ab0
00:09:16.180 --> 00:09:18.350
but it can also provide additional like

NOTE Confidence: 0.690638567714286

6d24e13e-2c63-4c40-b119-f9831bc3678c
00:09:18.350 --> 00:09:20.280
type information or index information.

NOTE Confidence: 0.690638567714286

914b54d2-c31d-435c-b232-2c5d58de7e2f
00:09:20.280 --> 00:09:23.248
So we're sort of retrofitting kind of

NOTE Confidence: 0.690638567714286

b83b63d9-0a50-4c4a-9fb7-1f628c1c9646
00:09:23.248 --> 00:09:25.740
constructor names through this tag machine,

NOTE Confidence: 0.690638567714286

f5fa43cd-179b-4c30-b95c-86c76d76f6c5
00:09:25.740 --> 00:09:29.478
so going back to 1206 revision 7,

NOTE Confidence: 0.690638567714286

0e38495c-76d5-4af9-8d4e-e6efaa7e1fbb
00:09:29.480 --> 00:09:30.768
this is talking about why do we

NOTE Confidence: 0.690638567714286

f574d64d-20c0-4dff-9545-91d0adcbbd58
00:09:30.768 --> 00:09:32.380
need A tag for these constructors?

NOTE Confidence: 0.690638567714286

840da302-601d-4b2c-b714-f11596d6c06e
00:09:32.380 --> 00:09:35.350
So let's see the answer.

NOTE Confidence: 0.690638567714286

acaba6ac-f74a-4fc1-b2e5-c1fbef4a8633
00:09:35.350 --> 00:09:37.384
Here is an example class template

NOTE Confidence: 0.690638567714286

87ef66f6-4e93-45c6-a900-b9990390da12
00:09:37.384 --> 00:09:39.333
argument deduction if you have a

NOTE Confidence: 0.690638567714286

78cd0f67-5ff5-42f1-baec-d21c3e6f78d8
00:09:39.333 --> 00:09:41.209
list you try to construct a vector.

NOTE Confidence: 0.690638567714286

f5effa4a-89c0-4de2-b8cf-8c0a785a73ee
00:09:41.210 --> 00:09:44.320
Are you going to get a vector of list of int?

NOTE Confidence: 0.690638567714286

6fe26555-0064-47f7-bc14-bf8bfdb7dbab
00:09:44.320 --> 00:09:48.070
And that's what CTAD currently does.

NOTE Confidence: 0.690638567714286

f8d5726b-2200-4584-a53f-e5a023f1bf0c
00:09:48.070 --> 00:09:49.498
And if you use A tag,

NOTE Confidence: 0.690638567714286

e451d14b-5123-4570-b5a7-41162e40ce2b
00:09:49.500 --> 00:09:52.209
you'll be able to say I want to convert

NOTE Confidence: 0.690638567714286

cd33c8c9-de28-4440-8c61-eaa8fa48e0c3
00:09:52.209 --> 00:09:54.843
this list of int into a vector of int.

NOTE Confidence: 0.690638567714286

d28a649d-1615-469a-a6d8-8c3dc5d0a828
00:09:54.850 --> 00:09:59.458
Other examples where any absorbs types.

NOTE Confidence: 0.690638567714286

1f6640e2-43e0-45c3-b4f2-0c8f2d6f6b62
00:09:59.460 --> 00:10:01.596
And different names will

NOTE Confidence: 0.690638567714286

db0cb337-be93-41ce-a7f8-202b3a5716d8
00:10:01.596 --> 00:10:03.198
resolve ambiguities there,

NOTE Confidence: 0.690638567714286

0a09aab3-4d0c-4ad0-a8aa-406a6ccd53b3
00:10:03.200 --> 00:10:04.892
so that's why this has been

NOTE Confidence: 0.690638567714286

1b8a4f00-167c-494b-80c2-0d2734accfda
00:10:04.892 --> 00:10:06.620
designed the way it has been.

NOTE Confidence: 0.690638567714286

8431d06d-e681-4a28-90b6-5b23884cca5d
00:10:06.620 --> 00:10:06.987
OK,

NOTE Confidence: 0.690638567714286

0f4470e1-e67e-420f-8aca-28defbb193de
00:10:06.987 --> 00:10:09.556
so let me Scroll down to the

NOTE Confidence: 0.690638567714286

2b78a7bc-2110-4acf-b994-a5092d84ab63
00:10:09.556 --> 00:10:10.980
actual proposed wording.

NOTE Confidence: 0.690638567714286

7a31861c-2dfb-4969-a52c-0b56afec2de3
00:10:10.980 --> 00:10:12.324
There's benchmarks here,

NOTE Confidence: 0.690638567714286

f8de04c2-8dfe-4e2f-9c79-9598d3742f91
00:10:12.324 --> 00:10:15.460
and all sorts of things like that.

NOTE Confidence: 0.690638567714286

c50402ed-ac32-4102-beaf-4a4762536060
00:10:15.460 --> 00:10:16.512
Implementation experience I guess

NOTE Confidence: 0.690638567714286

d539a243-735f-422a-8c13-dc558d9bc445
00:10:16.512 --> 00:10:18.090
the paper is not actually 85

NOTE Confidence: 0.737470196923077

4912b4ba-8edc-4f4e-9a36-771252b9d66e
00:10:18.138 --> 00:10:18.858
pages of wording.

NOTE Confidence: 0.737470196923077

af34440c-b3a0-4a9e-a9ea-3dae83e2dc33
00:10:18.860 --> 00:10:21.485
It's only like 75 pages of wording.

NOTE Confidence: 0.737470196923077

90fdc270-0b24-48b0-aec8-99f92e854555
00:10:21.490 --> 00:10:23.809
Proposed wording OK.

NOTE Confidence: 0.737470196923077

e7e5f7e0-9bb2-46dc-a0b3-c773440d98d4
00:10:23.810 --> 00:10:25.890
So this is a guide to yeah Kate

NOTE Confidence: 0.737470196923077

87713640-2dba-4fcc-9c9f-27ce967a2140
00:10:25.890 --> 00:10:27.534
Casey's laughing because he's the one

NOTE Confidence: 0.737470196923077

d36df59e-2332-474f-b3f3-f3b9a176c728
00:10:27.534 --> 00:10:29.510
who helped write all of this stuff.

NOTE Confidence: 0.737470196923077

76ccff25-c8f6-4818-bad4-f0cdc9769da4
00:10:29.510 --> 00:10:31.805
I guess I should be happy that it is

NOTE Confidence: 0.737470196923077

473c9172-a0c2-42a5-af41-08183f2a52f5
00:10:31.805 --> 00:10:34.028
shorter than the original range proposal,

NOTE Confidence: 0.737470196923077

87302cb2-ffcf-4682-8371-9375fd5e724e
00:10:34.030 --> 00:10:37.038
so this wording is relative to a slightly

NOTE Confidence: 0.737470196923077

0e9a6e95-61bb-40c0-bf20-2c0b139b8e53
00:10:37.038 --> 00:10:39.835
older draft of the working paper and 4885.

NOTE Confidence: 0.737470196923077

d55619eb-e7fe-4b86-9b46-9a350137d315
00:10:39.835 --> 00:10:41.690
I do have the current one and

NOTE Confidence: 0.737470196923077

ed69f7aa-3079-4887-8601-c0d4c42e451a
00:10:41.690 --> 00:10:44.504
4910 since as far as I'm aware

NOTE Confidence: 0.737470196923077

bfa8bb7a-3256-4cf5-8ab1-2ce6f998159c
00:10:44.504 --> 00:10:47.768
this has not been further patched,

NOTE Confidence: 0.737470196923077

ed86560b-e82f-40e6-ace3-9b028f546e49
00:10:47.770 --> 00:10:49.750
at least significantly in 4910.

NOTE Confidence: 0.737470196923077

cd727213-a93d-4456-92ed-a0ce8b9a181c
00:10:49.750 --> 00:10:51.784
I am going to be just looking at the

NOTE Confidence: 0.737470196923077

930d72aa-fa1b-4d79-90fa-dccc9ab546e0
00:10:51.784 --> 00:10:53.378
original paper. This is because.

NOTE Confidence: 0.737470196923077

fa31dc73-e75e-47e2-aad0-23a87d224a8c
00:10:53.378 --> 00:10:56.200
It's updating a lot of wording in place,

NOTE Confidence: 0.737470196923077

ad2b4238-33b5-47a2-aa14-2499c02404d7
00:10:56.200 --> 00:10:58.825
so I can't just look at like

NOTE Confidence: 0.737470196923077

f70b0b54-98b8-4332-abf3-3d73483747d7
00:10:58.825 --> 00:11:00.760
a newly added section.

NOTE Confidence: 0.737470196923077

352c69c6-2212-4e8d-a303-f694c7ce0f13
00:11:00.760 --> 00:11:03.380
Excuse me in the standard.

NOTE Confidence: 0.737470196923077

c8054840-d332-4a8f-b0da-2fded055c8df
00:11:03.380 --> 00:11:03.892
For, uh,

NOTE Confidence: 0.737470196923077

070a6528-cfe6-4fbd-933b-507b195accf2
00:11:03.892 --> 00:11:05.940
what this is I could cross cross reference,

NOTE Confidence: 0.737470196923077

77f088a6-79d9-4918-8c71-be60e19b6755
00:11:05.940 --> 00:11:06.780
but that's a lot slower,

NOTE Confidence: 0.737470196923077

535b099a-94fe-4884-87a4-436f2992a31c
00:11:06.780 --> 00:11:08.013
so I'm just going to be looking at this,

NOTE Confidence: 0.737470196923077

905adeef-b2fd-4e68-8cc7-9a1f6f982507
00:11:08.020 --> 00:11:09.805
but keeping in mind that if anything

NOTE Confidence: 0.737470196923077

92271c2c-ab2c-4715-a673-f90fdfa52ae6
00:11:09.805 --> 00:11:11.398
has been patched in the standard,

NOTE Confidence: 0.737470196923077

63aaf149-2e0a-43b9-9691-58c3cf6ed92b
00:11:11.400 --> 00:11:13.416
that could be a potential bug.

NOTE Confidence: 0.737470196923077

b22f50ba-2d43-4164-b53b-69a8c4a3be20
00:11:13.420 --> 00:11:16.204
The nice thing about having a PR written

NOTE Confidence: 0.737470196923077

4cfb6718-ae71-4234-9da8-9388c7bd8914
00:11:16.204 --> 00:11:19.580
by a Co author of the paper is that

NOTE Confidence: 0.737470196923077

eba9c4ab-41f2-4308-906a-908ada0b16b3
00:11:19.580 --> 00:11:22.558
that author Casey is presumably aware of.

NOTE Confidence: 0.737470196923077

3da660b1-f37c-4a67-b707-c2523aacde5e
00:11:22.560 --> 00:11:24.317
If this wording has been patched later

NOTE Confidence: 0.737470196923077

218b9c56-9667-4779-b569-03069748f541
00:11:24.317 --> 00:11:25.979
and would have incorporated that,

NOTE Confidence: 0.737470196923077

d08f2a88-0247-48f2-848c-cab6a991b645
00:11:25.980 --> 00:11:28.381
so I'm not too concerned about missing

NOTE Confidence: 0.737470196923077

9a189a0b-ceb5-48e8-accf-11d725cc22b9
00:11:28.381 --> 00:11:30.837
last minute changes that have been applied,

NOTE Confidence: 0.737470196923077

ada5727a-25a3-4fbc-9885-283629c09496
00:11:30.840 --> 00:11:34.136
but if this PR were being authored by.

NOTE Confidence: 0.737470196923077

119b56a2-13e1-4ffb-af07-ee9eba92f866
00:11:34.140 --> 00:11:36.016
Somebody other than an original paper author,

NOTE Confidence: 0.737470196923077

517f276a-1236-464a-a3b0-4e7d86180c3f
00:11:36.020 --> 00:11:38.220
and if it had been a lot more time since

NOTE Confidence: 0.737470196923077

a95f3513-9304-4300-92a7-d7160f5528b7
00:11:38.278 --> 00:11:40.566
the PR had been merged into the working

NOTE Confidence: 0.737470196923077

ad48b5e9-cf13-410f-a9c0-9ba673a40d90
00:11:40.566 --> 00:11:42.628
paper versus when we were reviewing it,

NOTE Confidence: 0.737470196923077

a952548d-2c35-48f0-a823-c72ef76fc15a
00:11:42.630 --> 00:11:44.891
the chance for the chance for Divergance

NOTE Confidence: 0.737470196923077

629ad17a-a16b-490e-84d9-01fdf06ac6fc
00:11:44.891 --> 00:11:47.104
where the wording was further altered in

NOTE Confidence: 0.737470196923077

efe0f807-13a6-4ce5-8add-2c5a4355fae7
00:11:47.104 --> 00:11:49.330
the working draft and would be higher,

NOTE Confidence: 0.737470196923077

5865dd5e-2bd1-4e1e-8ab9-f7b6569ef17c
00:11:49.330 --> 00:11:51.418
and I would need to be much more

NOTE Confidence: 0.737470196923077

19992409-4de7-491b-a2ef-2897707467e4
00:11:51.418 --> 00:11:53.047
careful about double checking the

NOTE Confidence: 0.737470196923077

e1f805f6-fbec-4206-a8bc-28cbe1d779be
00:11:53.047 --> 00:11:54.782
latest working paper and making

NOTE Confidence: 0.737470196923077

ce70de88-b8c0-49da-8185-3486658ee02a
00:11:54.782 --> 00:11:56.988
sure that it's wording is actually

NOTE Confidence: 0.737470196923077

d0c5604d-a4f4-432c-b816-852a37e89f73
00:11:56.988 --> 00:11:58.440
what is being implemented.

NOTE Confidence: 0.737470196923077

073371f2-8ef3-48b1-b6c2-173c23078cfc
00:11:58.440 --> 00:12:01.147
OK, so that's enough preamble, uh,

NOTE Confidence: 0.737470196923077

04abea32-a2ab-406b-a99c-3a05876363c9
00:12:01.147 --> 00:12:04.696
let's go ahead and start reviewing this.

NOTE Confidence: 0.737470196923077

fb5f68bd-9cbf-404b-af30-c32fe3b44432
00:12:04.700 --> 00:12:07.262
I'll be mainly focusing on the

NOTE Confidence: 0.737470196923077

654bc69a-abe5-49d3-a33d-20de2eeb1e7d
00:12:07.262 --> 00:12:10.105
product code because the test code

NOTE Confidence: 0.737470196923077

5c2b4946-02ff-462a-9041-f32bd22b269a
00:12:10.105 --> 00:12:11.689
is extremely voluminous.

NOTE Confidence: 0.737470196923077

0ca25c55-194f-4025-9c39-218cf2597fea
00:12:11.690 --> 00:12:12.873
I might take a little bit look

NOTE Confidence: 0.737470196923077

b58f6cfb-753c-4991-9d65-82a1847645f5
00:12:12.873 --> 00:12:13.630
at the test code,

NOTE Confidence: 0.737470196923077

1ddf4a01-fbe0-40d6-9cde-1d29639fed3f
00:12:13.630 --> 00:12:17.392
so let's see if I can split these windows.

NOTE Confidence: 0.737470196923077

43da75ab-e2ee-4e36-ad7e-e7d271a86d99
00:12:17.400 --> 00:12:21.108
OK, let's get rid of this working draft here.

NOTE Confidence: 0.737470196923077

1fc44341-a32c-4831-8877-e22e626cbf87
00:12:21.110 --> 00:12:23.960
Let's move this over here, OK?

NOTE Confidence: 0.737470196923077

df0e479c-72cf-4872-b2c6-41f83c1a51bd
00:12:23.960 --> 00:12:27.680
Only 117 files changed.

NOTE Confidence: 0.737470196923077

df27e078-b301-4ecf-a991-7c8001c02f85
00:12:27.680 --> 00:12:31.456
OK alt Click to minimize all of the.

NOTE Confidence: 0.737470196923077

d7b0a050-dc6a-4627-8f8c-374eec48db3c
00:12:31.460 --> 00:12:33.420
Files that they'll cooperate.

NOTE Confidence: 0.737470196923077

b96fe98a-69bd-430d-ad8b-811a6f2bfce0
00:12:33.420 --> 00:12:33.910
OK,

NOTE Confidence: 0.737470196923077

5bff46a1-41cc-4e6d-80b2-0eac3df09e6b
00:12:33.910 --> 00:12:35.488
so the product code is not

NOTE Confidence: 0.737470196923077

d96dcf0b-54aa-42d6-a2d5-c9ed4133ed5f
00:12:35.488 --> 00:12:36.277
actually 7000 lines.

NOTE Confidence: 0.737470196923077

f1f0d16e-0f2c-4d3f-9039-2312488271c9
00:12:36.280 --> 00:12:39.106
UM, there is a lot of tests being added.

NOTE Confidence: 0.82296286

879e3321-4729-49bb-ab2f-34c204fe399d
00:12:41.620 --> 00:12:43.440
Push range from range and so forth,

NOTE Confidence: 0.82296286

dc26aa63-92fb-416a-8be6-84113168a9b8
00:12:43.440 --> 00:12:45.184
rather than just adding a single mega test.

NOTE Confidence: 0.84707627

3ce4dd52-2b7a-43aa-8cc4-3d95b755948f
00:12:48.350 --> 00:12:50.138
OK, excuse me wow that is.

NOTE Confidence: 0.83683676

8196207f-3afa-4759-83af-9bf0b166187e
00:12:52.260 --> 00:12:56.962
OK. So let me take a look at

NOTE Confidence: 0.83683676

0f435d3e-b045-4ba2-b7f3-ddec770f070a
00:12:56.962 --> 00:12:58.670
the centralized stuff first.

NOTE Confidence: 0.83683676

9b137ef7-b4cf-4d1e-9445-415318a9b732
00:12:58.670 --> 00:12:59.546
That is a lot of it.

NOTE Confidence: 0.83683676

dda20510-f10e-4924-884a-0aac3ce5e47c
00:12:59.550 --> 00:13:01.510
It's, uh, that's test.

NOTE Confidence: 0.83683676

fe4b7b8a-cb82-4962-a417-b48a38ebcdbb
00:13:01.510 --> 00:13:03.470
I'm looking at OK.

NOTE Confidence: 0.83683676

bf4e0799-89bb-42ae-b7e9-7114275b1fcf
00:13:03.470 --> 00:13:06.190
So we've got a new paper comment being

NOTE Confidence: 0.83683676

d4690402-fd03-4b55-aa8b-1bf66931a8e2
00:13:06.190 --> 00:13:10.026
added here because we record C + 23 features.

NOTE Confidence: 0.83683676

e66fe198-52ad-4f56-bfc2-a6e5b64d14ae
00:13:10.026 --> 00:13:13.475
This is indeed P 1206 R 7 conversions

NOTE Confidence: 0.83683676

3ca988de-4876-4459-bba9-10103d10f66b
00:13:13.475 --> 00:13:15.500
from ranges to containers matching

NOTE Confidence: 0.83683676

13d8c518-c2da-4a12-a290-9ae3e79129fd
00:13:15.571 --> 00:13:17.486
our cleaned up paper title.

NOTE Confidence: 0.83683676

cdbb5a0c-af30-4d8a-8305-da85e1b80d63
00:13:17.490 --> 00:13:20.528
It is in sorted order under 23.

NOTE Confidence: 0.83683676

00fc374b-37f1-4763-ae76-2f03c5e5d1e2
00:13:20.530 --> 00:13:22.994
That's good. We now have a little

NOTE Confidence: 0.83683676

ffd213ba-dfd6-4182-994a-10ae91e227cb
00:13:22.994 --> 00:13:25.890
bit of white space difference there.

NOTE Confidence: 0.83683676

06b9198c-bfa6-4c29-bf53-f1b0f5f68c12
00:13:25.890 --> 00:13:26.860
I could ignore white space.

NOTE Confidence: 0.83683676

86608d8e-320e-441f-92cd-0464d719f7a4
00:13:26.860 --> 00:13:27.720
Why don't I do that?

NOTE Confidence: 0.674167142571429

1e07cb91-4418-425c-92ca-595eb6af5ab1
00:13:29.990 --> 00:13:32.307
Gonna click on where is it file?

NOTE Confidence: 0.674167142571429

e815be2e-1436-479c-9281-a0c845395288
00:13:32.310 --> 00:13:33.430
No not file filter.

NOTE Confidence: 0.755415066666667

63740331-b7e0-40d5-81bd-0f00972b7d7d
00:13:39.100 --> 00:13:40.336
Is because my window is tiny.

NOTE Confidence: 0.755415066666667

c90b4d48-c6a4-4c70-b890-f6237242c3e4
00:13:40.340 --> 00:13:42.038
I think it's under the gear.

NOTE Confidence: 0.755415066666667

4daddbba-f3ff-4ee4-bd41-8c2d45d5669c
00:13:42.040 --> 00:13:44.160
Yeah, yeah, there you go.

NOTE Confidence: 0.755415066666667

1739bf35-05df-4184-8a16-c94c4c661ad8
00:13:44.160 --> 00:13:45.942
I was I was a little confused because the

NOTE Confidence: 0.755415066666667

c43b3dfd-acfc-4d01-9cbf-117d8c27840e
00:13:45.942 --> 00:13:47.598
window was tinier than I usually work in,

NOTE Confidence: 0.755415066666667

7b1a226e-922b-422e-b461-9f29de9c4111
00:13:47.600 --> 00:13:48.392
so it's like where?

NOTE Confidence: 0.755415066666667

400ee955-89f8-442b-b109-9a4db50fc8ea
00:13:48.392 --> 00:13:50.299
Where is the UI that I usually click?

NOTE Confidence: 0.755415066666667

dbccbee9-54d3-42bb-a5e0-ce82156a5c17
00:13:50.300 --> 00:13:51.740
OK, there we go.

NOTE Confidence: 0.755415066666667

e301f8e6-f148-4cf2-a609-87aa2cff94f0
00:13:51.740 --> 00:13:53.540
Now we're ignoring white space

NOTE Confidence: 0.755415066666667

d524934f-dc3c-4337-ae57-083f5b303458
00:13:53.540 --> 00:13:55.599
and I'll re minimize again.

NOTE Confidence: 0.755415066666667

d66b4e0c-1ba8-4bea-abfc-6f066664eb4f
00:13:55.600 --> 00:13:58.228
Why? Plus core great.

NOTE Confidence: 0.755415066666667

d3082679-fb8e-4872-9ef7-d7c50209cee7
00:13:58.230 --> 00:14:00.576
Still not realized. There we go.

NOTE Confidence: 0.755415066666667

9548c6d9-39ca-46e4-ac84-b6edf6a4c784
00:14:00.580 --> 00:14:03.268
Oops, I don't want to maximize everything.

NOTE Confidence: 0.755415066666667

ad20bd0d-9aac-4486-bdab-eb39e7229eb6
00:14:03.270 --> 00:14:05.082
OK, so probably six or seven

NOTE Confidence: 0.755415066666667

53091c1a-2c03-4611-965a-727353cd3e56
00:14:05.082 --> 00:14:06.290
conversions ranges to containers.

NOTE Confidence: 0.755415066666667

f9f3b2e6-2988-4136-8ad0-36dd58646e86
00:14:06.290 --> 00:14:08.570
UM, claim formats indenting expected,

NOTE Confidence: 0.755415066666667

dae16f85-106d-424a-91a5-a43618920b26
00:14:08.570 --> 00:14:11.126
which is the change I didn't want to see,

NOTE Confidence: 0.755415066666667

15242f00-fff3-486f-a963-39c4f0f27841
00:14:11.130 --> 00:14:14.600
so here.

NOTE Confidence: 0.755415066666667

fc1bb892-a582-41a0-be6d-5d40c8a66e5d
00:14:14.600 --> 00:14:16.430
We're adding one of the

NOTE Confidence: 0.755415066666667

851a34a1-7947-4d55-a6fb-6aa65fe06975
00:14:16.430 --> 00:14:17.894
new feature test macros,

NOTE Confidence: 0.755415066666667

bd048899-d0ea-453a-ab6e-2461cb12fa71
00:14:17.900 --> 00:14:19.268
CPP Lib containers ranges.

NOTE Confidence: 0.755415066666667

b372f146-b416-4cc6-864a-8b9a1df0e264
00:14:19.268 --> 00:14:20.978
These are separate because in

NOTE Confidence: 0.755415066666667

2b1701a7-d593-4dfe-a6ea-5b86b0dd600e
00:14:20.978 --> 00:14:22.613
theory they're like two different

NOTE Confidence: 0.755415066666667

8759892b-da48-4028-83e5-6f97c1c2f8f3
00:14:22.613 --> 00:14:24.800
things being added at the same time.

NOTE Confidence: 0.755415066666667

9e995e49-fd74-495a-9313-a6234a01d5c5
00:14:24.800 --> 00:14:26.100
They could also in theory

NOTE Confidence: 0.755415066666667

e4633ee2-442e-4a01-9a18-1f827b00ecc0
00:14:26.100 --> 00:14:26.880
be implemented separately,

NOTE Confidence: 0.755415066666667

c4dc86af-f76e-4c48-9bdc-a6e13ff3249e
00:14:26.880 --> 00:14:29.200
but they're being implemented simultaneously,

NOTE Confidence: 0.755415066666667

350f9376-ae90-4383-b717-3e73804fe210
00:14:29.200 --> 00:14:30.313
which is great.

NOTE Confidence: 0.755415066666667

d94bfc18-f36c-4e24-8f97-889adcc879d0
00:14:30.313 --> 00:14:33.440
So we've got the new feature test macro.

NOTE Confidence: 0.755415066666667

4fe1c8bd-b916-4fc2-85b8-f2aa53a29d5a
00:14:33.440 --> 00:14:36.752
It is this one is guarded by CPP

NOTE Confidence: 0.755415066666667

da60b552-f32f-4327-b5ae-fc3ba18cc902
00:14:36.752 --> 00:14:39.161
Lib concepts because ranges is

NOTE Confidence: 0.755415066666667

585232a9-dde4-4f51-be71-0f52de5e4ced
00:14:39.161 --> 00:14:41.269
typically constrained by concepts,

NOTE Confidence: 0.755415066666667

a1868777-217e-4487-84a9-f412be1407d1
00:14:41.270 --> 00:14:42.858
so that is expected.

NOTE Confidence: 0.755415066666667

20f405cb-c19a-4443-9b32-ed746e4e368e
00:14:42.858 --> 00:14:45.240
It has got the right spelling.

NOTE Confidence: 0.755415066666667

95697bb5-ed40-4c2a-9ca9-a96b62fd1fe9
00:14:45.240 --> 00:14:48.588
It's got the right value on February 2022,

NOTE Confidence: 0.755415066666667

d7fcfac0-2b17-4ec2-b96f-c782c3c27d1f
00:14:48.588 --> 00:14:50.534
which is when this was voted in

NOTE Confidence: 0.755415066666667

68fe81ec-45c4-43d7-a453-cf255131c7c2
00:14:50.534 --> 00:14:52.606
and then this is in sorted order.

NOTE Confidence: 0.755415066666667

13abec1c-3071-4e19-933a-20f37af716dd
00:14:52.610 --> 00:14:55.767
Con S followed by con T and

NOTE Confidence: 0.755415066666667

58f27dfb-7be4-4d95-99ad-55b2251dd3cc
00:14:55.767 --> 00:14:57.690
then expected that's good.

NOTE Confidence: 0.755415066666667

b2df920b-8bfa-4e90-91f7-359167d458f1
00:14:57.690 --> 00:14:59.766
And then the other one is

NOTE Confidence: 0.755415066666667

10bcc2fc-f466-4895-925c-079abca5e14a
00:14:59.766 --> 00:15:01.150
range is 2 container.

NOTE Confidence: 0.755415066666667

3c7905f9-43a8-4155-b758-38489064ca3d
00:15:01.150 --> 00:15:04.261
Yep also guarded by concepts S

NOTE Confidence: 0.755415066666667

604140eb-6eb4-443a-b5f2-b6c7ea4d264d
00:15:04.261 --> 00:15:07.567
before T good sorted order and.

NOTE Confidence: 0.755415066666667

72e3e0f2-5ba7-4c5b-bec5-a40d25c5e660
00:15:07.570 --> 00:15:08.509
Standard value yes,

NOTE Confidence: 0.755415066666667

4c998aca-7fd2-4a18-a17d-ce1ef4eafe74
00:15:08.509 --> 00:15:10.074
and nothing else needs to

NOTE Confidence: 0.755415066666667

ae6b99c7-5e27-4868-97b7-7767f30ca3da
00:15:10.074 --> 00:15:11.439
change in rivals core.

NOTE Confidence: 0.755415066666667

eeabda83-26c5-4b12-830c-b11b9c3a7e26
00:15:11.440 --> 00:15:12.895
We're not adding any deprecation

NOTE Confidence: 0.755415066666667

03ebc22d-d409-41c0-a5e0-dae365a7f5aa
00:15:12.895 --> 00:15:13.768
messages or anything.

NOTE Confidence: 0.755415066666667

17496796-8427-47a5-b99a-c52161cd1f30
00:15:13.770 --> 00:15:14.440
That's good.

NOTE Confidence: 0.755415066666667

7e623b46-f5c8-4c4c-b5fd-22813388f294
00:15:14.440 --> 00:15:16.785
We can also jump on over to

NOTE Confidence: 0.755415066666667

ba035664-3a48-4abe-b3b1-cea1421b6149
00:15:16.785 --> 00:15:19.028
the feature test macro test,

NOTE Confidence: 0.755415066666667

3fbd3907-cd57-4776-8d99-f65245408bf2
00:15:19.030 --> 00:15:20.566
get that out of the way.

NOTE Confidence: 0.358135

faee8f15-e2fc-460e-a279-125d167ea34d
00:15:24.220 --> 00:15:29.866
King spellings all of them are being updated.

NOTE Confidence: 0.358135

cb7a7e79-d2b7-43f9-abd9-38a264344a73
00:15:29.870 --> 00:15:31.388
They have the same value here.

NOTE Confidence: 0.358135

79b44fba-1c6c-4c14-8e79-4c532f5cb8b5
00:15:31.390 --> 00:15:35.000
So Yep, that's all good.

NOTE Confidence: 0.358135

6f50a4aa-63b0-413a-8aef-0cab58f258f9
00:15:35.000 --> 00:15:36.508
They are guarded here.

NOTE Confidence: 0.358135

60e38b32-0339-4130-b961-86a8d4a920b5
00:15:36.508 --> 00:15:39.116
I'm just checking with their guarded by

NOTE Confidence: 0.358135

74646e58-baec-493c-b0d9-8fa962f7d806
00:15:39.116 --> 00:15:41.645
their CSS 23 and not EDG because EDG does

NOTE Confidence: 0.358135

a14cd95d-bb84-4655-8464-7531ef02b081
00:15:41.711 --> 00:15:44.140
not yet fully support concepts for us.

NOTE Confidence: 0.358135

19c60b03-0903-4f77-a00f-8c6dd40d6297
00:15:44.140 --> 00:15:46.708
Yep, that's the right transition message.

NOTE Confidence: 0.358135

0eeee2df-32bd-41ca-8b86-3a186f1d5fb8
00:15:46.710 --> 00:15:50.070
These are also in sorted order

NOTE Confidence: 0.358135

38cfab8f-834e-4dcb-bacf-ebe544c90a17
00:15:50.070 --> 00:15:53.940
con escon T Co routine Yep.

NOTE Confidence: 0.358135

a7dc20ed-7b65-46b7-a320-c76729d0efed
00:15:53.940 --> 00:15:56.525
And then ranges 2 container ranges

NOTE Confidence: 0.358135

6922c3ac-b80a-4bfc-a878-9745bcca259a
00:15:56.525 --> 00:15:59.315
as ranges T raw memory algorithms.

NOTE Confidence: 0.358135

7b7c18d0-7ddb-4e7b-a786-4309ea35112e
00:15:59.320 --> 00:16:01.092
Yep, that looks good.

NOTE Confidence: 0.358135

d62841ed-0a3e-4705-8bb6-e9e9f468711a
00:16:01.092 --> 00:16:03.750
Feature test macro test is updated.

NOTE Confidence: 0.358135

10256725-a0cd-4a88-9311-36e3fdfc6974
00:16:03.750 --> 00:16:04.434
Uh, mentally thinking.

NOTE Confidence: 0.358135

666a1cf4-ede8-4f40-8abb-e7c9c549dfd1
00:16:04.434 --> 00:16:05.574
Is there anything else that

NOTE Confidence: 0.358135

5b82a5e3-37ac-4974-8444-af089812eeeb
00:16:05.574 --> 00:16:06.470
we need to update?

NOTE Confidence: 0.358135

24b947d6-256f-4775-be90-250c6c0fefa4
00:16:06.470 --> 00:16:07.650
No, because we're not adding

NOTE Confidence: 0.358135

b386dade-19a3-4e35-9a72-265293a7a7ec
00:16:07.650 --> 00:16:08.830
a new header or anything.

NOTE Confidence: 0.358135

f7553e4c-604e-4475-bcab-45b1af3e1cb1
00:16:08.830 --> 00:16:12.550
So in that respect this feature is simple.

NOTE Confidence: 0.358135

c4de8ed5-978b-4a4a-8cfb-a2d91b34e6db
00:16:12.550 --> 00:16:15.050
OK, so let's take a look at the product code.

NOTE Confidence: 0.816546363333333

31c8eb0c-1e9b-4ec0-9b46-ff8c32c54833
00:16:19.600 --> 00:16:21.316
OK, there's some changes to algorithm.

NOTE Confidence: 0.816546363333333

99f59ebc-b459-41d3-b67f-86658e2330e5
00:16:21.320 --> 00:16:22.950
I would actually like to

NOTE Confidence: 0.816546363333333

bfe7c7c2-6846-4030-a50c-8a34d5abe64b
00:16:22.950 --> 00:16:24.580
look at the description here.

NOTE Confidence: 0.72687642

4012d317-2b3c-49f6-8d0a-d9ac5f6c269f
00:16:27.440 --> 00:16:29.440
So in algorithm, UM.

NOTE Confidence: 0.739430597777778

59cec7ea-b925-4419-aa43-f20d495e47ce
00:16:32.240 --> 00:16:34.730
Promote get final iterator unwrapped

NOTE Confidence: 0.739430597777778

6ebd5f19-908d-418a-b78b-0c93e8e0c746
00:16:34.730 --> 00:16:37.660
to X utility from algorithm and

NOTE Confidence: 0.739430597777778

43914450-848b-4c79-8352-9823221306ed
00:16:37.660 --> 00:16:40.180
then add more stuff to X utility.

NOTE Confidence: 0.739430597777778

b3b08fcc-4832-4b73-8aa9-011b3eb3b19e
00:16:40.180 --> 00:16:42.916
OK so code is moving around.

NOTE Confidence: 0.739430597777778

e536ae0c-501e-4103-804a-dfe087b5cef9
00:16:42.920 --> 00:16:45.531
I love to double check code movements

NOTE Confidence: 0.739430597777778

bf678210-ca0e-4394-93fc-27f935fd4613
00:16:45.531 --> 00:16:47.944
because that is a wonderful time

NOTE Confidence: 0.739430597777778

915bdb6e-eb8b-466a-8070-39271e8f6078
00:16:47.944 --> 00:16:49.984
for things like merge conflicts

NOTE Confidence: 0.739430597777778

1167bb1d-e616-47e5-8926-0787a9a2f690
00:16:49.984 --> 00:16:52.420
and other bugs to be introduced.

NOTE Confidence: 0.739430597777778

8e60f9b2-d8d9-4d79-94c2-614e0152c7cc
00:16:52.420 --> 00:16:54.958
So algorithm simply removing this code.

NOTE Confidence: 0.739430597777778

d7a82eca-f42a-4a3b-ae23-1df0841f0a10
00:16:54.960 --> 00:16:57.168
What I'm going to do because the built

NOTE Confidence: 0.739430597777778

f67f4cb8-7abd-4a4c-ba86-8485b609d5da
00:16:57.168 --> 00:16:59.322
in Dev doesn't handle this is I'm

NOTE Confidence: 0.739430597777778

39f09ce2-d067-4eeb-a0ff-0ba9d79f56b4
00:16:59.322 --> 00:17:01.719
going to copy that over to my editor.

NOTE Confidence: 0.739430597777778

2edc90ca-31d0-48a0-a89b-c8d9db22eb8b
00:17:01.720 --> 00:17:03.720
And I will handle comments.

NOTE Confidence: 0.739430597777778

30faa7d8-d109-4343-8668-ffbeba0fdb08
00:17:03.720 --> 00:17:05.864
Remember what this is?

NOTE Confidence: 0.739430597777778

238f9b5d-c9ae-4c7e-8659-ed3962a38a51
00:17:05.864 --> 00:17:08.544
This is old from algorithm.

NOTE Confidence: 0.739430597777778

5b0c0ec8-b48d-4a73-a92a-05c1a4842588
00:17:08.550 --> 00:17:11.526
OK, then we're gonna go over since that's

NOTE Confidence: 0.739430597777778

153d4c56-e880-4761-962f-a81519b8af74
00:17:11.526 --> 00:17:14.359
the only change and check X utility.

NOTE Confidence: 0.739430597777778

90865a18-1152-4156-9494-09daee07f2f1
00:17:14.360 --> 00:17:17.330
And see if we can find the new code.

NOTE Confidence: 0.739430597777778

85732b61-2edc-4443-9b29-7b42ba2f59ed
00:17:17.330 --> 00:17:19.444
Uh, well it looks like it's here.

NOTE Confidence: 0.717788695

aa128711-d698-407c-9bd8-aeedff19e881
00:17:21.960 --> 00:17:26.104
OK, make sure the context is the same.

NOTE Confidence: 0.717788695

b508db3a-c8b1-449f-a5c7-9e3299e5a770
00:17:26.110 --> 00:17:27.495
We're clearly within 20 because

NOTE Confidence: 0.717788695

bf6d4086-c524-4153-89b8-6f8e3ae46408
00:17:27.495 --> 00:17:28.880
we're mentioning range of stuff,

NOTE Confidence: 0.717788695

9c880a84-b06a-4322-842d-3121d2df6ff0
00:17:28.880 --> 00:17:30.626
but we're not specifically within 23,

NOTE Confidence: 0.717788695

31eb5bd2-ee91-4279-88e0-999338d6a16e
00:17:30.630 --> 00:17:32.630
so the context is good.

NOTE Confidence: 0.717788695

85f5d1ea-7217-4c7d-912d-55ad3a264e63
00:17:32.630 --> 00:17:34.688
And let's copy paste over here.

NOTE Confidence: 0.717788695

bf94b5df-9d2f-4933-91a3-9ef5cc300fc5
00:17:34.690 --> 00:17:39.418
This is new from actually utility.

NOTE Confidence: 0.717788695

4f0e5395-5b2d-4838-a8b4-a42e838ae107
00:17:39.420 --> 00:17:40.866
There's the code is that the

NOTE Confidence: 0.717788695

22448388-d984-4842-a444-27c7b6f135e9
00:17:40.866 --> 00:17:43.087
same level of indent? It is OK?

NOTE Confidence: 0.717788695

bf4d970c-bc8d-458e-8d67-3e1df16f490d
00:17:43.087 --> 00:17:46.020
So then I'm just gonna dip them.

NOTE Confidence: 0.717788695

65fc011a-d233-4928-a8bb-9f14c0b65f67
00:17:46.020 --> 00:17:47.440
And there are no differences.

NOTE Confidence: 0.717788695

443c4f8e-423d-4a11-834e-302e1227f898
00:17:47.440 --> 00:17:48.976
Wonderful, so it's pure code movement,

NOTE Confidence: 0.717788695

dac40e33-f8cc-41f0-9474-2cfdced129a1
00:17:48.980 --> 00:17:51.350
nothing else being introduced, perfect.

NOTE Confidence: 0.8821367

94193070-4842-447e-a25e-a9c6660cf4c6
00:17:54.800 --> 00:17:59.020
OK. So I trust that edit.

NOTE Confidence: 0.8821367

1630b868-bb1a-434c-a0a8-42fe17860b91
00:17:59.020 --> 00:18:00.845
And we've got some other

NOTE Confidence: 0.8821367

9d8a3e8d-95a5-4984-8516-8e89b89d240f
00:18:00.845 --> 00:18:01.940
centralized changes here.

NOTE Confidence: 0.8821367

9c6bc871-ebd3-493c-93bc-f834ae8ea692
00:18:01.940 --> 00:18:04.260
I think I do want to review the

NOTE Confidence: 0.8821367

4739c605-05d4-46e8-80dd-bfd0d9783a04
00:18:04.260 --> 00:18:05.649
centralized changes before getting

NOTE Confidence: 0.8821367

730d3bfa-5447-4d79-9535-2a60c913d7f4
00:18:05.649 --> 00:18:07.519
into the per container changes,

NOTE Confidence: 0.8821367

8b45fb89-deac-4694-a891-ab72290c69fa
00:18:07.520 --> 00:18:11.980
so move this over here.

NOTE Confidence: 0.8821367

b6e4ddfe-360c-4899-a4a6-044e462f5ebd
00:18:11.980 --> 00:18:16.184
OK, so we're in X utility and X utility

NOTE Confidence: 0.8821367

da65b5c2-9de5-473f-b7be-f2005bc1f875
00:18:16.184 --> 00:18:19.180
in addition to promoting UM and copy

NOTE Confidence: 0.8821367

c7bec8f8-af2f-432d-9ec2-55d5fbb0078a
00:18:19.271 --> 00:18:22.097
memmove N and copy and unchecked.

NOTE Confidence: 0.8821367

082259fb-8ad7-495d-b3ff-18f94ffe6510
00:18:22.100 --> 00:18:25.019
Similar to copy memmove and copy unchecked,

NOTE Confidence: 0.8821367

912beae0-04bb-41c9-9445-68a55c9c6b4f
00:18:25.020 --> 00:18:27.756
but for counted ranges.

NOTE Confidence: 0.8821367

08404ae1-51cf-4d30-aba4-1768ea22ca76
00:18:27.756 --> 00:18:29.808
Generalized inter copycat

NOTE Confidence: 0.8821367

f0537b6c-92e2-452f-820d-906183219ed6
00:18:29.808 --> 00:18:31.860
to Sentinel copycat.

NOTE Confidence: 0.8821367

7a1de34e-079d-4304-8ae3-e7e4402cdb8c
00:18:31.860 --> 00:18:33.212
OK, so actually tility.

NOTE Confidence: 0.8821367

03689596-37dc-46a4-9855-c94f8ac01ea2
00:18:33.212 --> 00:18:35.809
We've got a drive by cleanup here

NOTE Confidence: 0.8821367

fccf63ce-2afc-4c4b-bd74-dacc0376e501
00:18:35.809 --> 00:18:37.789
fusing together namespace ranges.

NOTE Confidence: 0.8821367

c8c100ea-4dbe-4703-9f3a-8fe57635297c
00:18:37.790 --> 00:18:39.798
We were just closing it and reopening it.

NOTE Confidence: 0.8821367

1fb65a9b-452c-403f-9c72-34f49683cbb7
00:18:39.800 --> 00:18:41.174
That's totally fine.

NOTE Confidence: 0.8821367

8ece0ba2-f5a1-4b78-99a9-6baf0ed4570b
00:18:41.174 --> 00:18:44.380
We can handle a little bit of

NOTE Confidence: 0.8821367

c87aa1c0-6c35-451b-a65d-bb8c55228033
00:18:44.475 --> 00:18:47.499
drive by cleanup in feature work,

NOTE Confidence: 0.8821367

fb7dfa91-ef3b-4c39-885d-9822774252e6
00:18:47.500 --> 00:18:48.565
especially if it's innocuous like

NOTE Confidence: 0.8821367

2b3751c1-6366-4072-b834-9647f6711927
00:18:48.565 --> 00:18:50.019
that it was a larger I would

NOTE Confidence: 0.8821367

82c77576-50e0-47e8-b3c1-0363a66e0ee9
00:18:50.019 --> 00:18:51.216
ask for it to be separated out.

NOTE Confidence: 0.961093764

266b474c-5480-4bfb-9e5d-2174534131ab
00:18:53.460 --> 00:18:55.610
OK, so here is the.

NOTE Confidence: 0.961093764

727e50d0-a6b6-473c-bd64-1cedad44e97e
00:18:55.610 --> 00:18:59.306
Copying memmove N for counted ranges,

NOTE Confidence: 0.961093764

67cedacf-d7a2-4987-a17f-723015e8fb92
00:18:59.310 --> 00:19:00.860
so we need a contiguous

NOTE Confidence: 0.961093764

ea242d2b-cc53-4c5f-95a9-0ea89d72a0dc
00:19:00.860 --> 00:19:02.870
iterator and the size to count.

NOTE Confidence: 0.961093764

630d2947-8292-43b2-a45b-4d790ff8614d
00:19:02.870 --> 00:19:07.168
OK, so let's take a look here.

NOTE Confidence: 0.961093764

133ae66e-e049-4ebb-8d2b-77febbb52969
00:19:07.170 --> 00:19:09.508
In the context we can see we

NOTE Confidence: 0.961093764

5e225c61-e3a6-46e0-9b63-0e426c968578
00:19:09.508 --> 00:19:11.549
originally had a copy memmove,

NOTE Confidence: 0.961093764

916fc318-f0a4-45a4-be11-896102bf3705
00:19:11.550 --> 00:19:14.318
as I recall. I think it was our

NOTE Confidence: 0.961093764

9b85b3c3-476b-464c-9225-1e3a673569f4
00:19:14.318 --> 00:19:15.880
contributor Adam Busier who.

NOTE Confidence: 0.801514841428571

cc63095a-b212-476f-8761-778a8dd94f5d
00:19:18.010 --> 00:19:20.932
I extracted this and polished it up, uh,

NOTE Confidence: 0.801514841428571

0ef58243-deff-43bf-8e38-5181c3176838
00:19:20.932 --> 00:19:24.166
because previously we had a more like,

NOTE Confidence: 0.801514841428571

4f1cf28f-f7ef-4b73-83f2-b8cad1619c28
00:19:24.170 --> 00:19:26.810
uh or more special purpose version of this,

NOTE Confidence: 0.801514841428571

a7ff23c5-1360-4c2b-8a89-13c0779850dd
00:19:26.810 --> 00:19:29.030
and this is now appropriately generalized.

NOTE Confidence: 0.801514841428571

c8e1c746-03a0-4fde-b6b9-3a04fc37db00
00:19:29.030 --> 00:19:31.463
So that was a very nice clean up and

NOTE Confidence: 0.801514841428571

d7874e69-86ea-4513-ab8b-8d49bceda042
00:19:31.463 --> 00:19:33.327
we now need a different version of it,

NOTE Confidence: 0.801514841428571

ce3d1e63-e0fe-41de-9bbd-9cbbf87715e9
00:19:33.330 --> 00:19:35.930
because sometimes we have a

NOTE Confidence: 0.801514841428571

ce6cdeef-4b39-4d8a-b93e-73dd57263a02
00:19:35.930 --> 00:19:38.530
contiguous iterator and account but

NOTE Confidence: 0.801514841428571

2059e86b-2e9a-41aa-a2ed-f885a9d02b77
00:19:38.615 --> 00:19:41.340
not two contiguous iterators and.

NOTE Confidence: 0.801514841428571

a637e512-80e1-41ce-a2e5-6fecac11f1d6
00:19:41.340 --> 00:19:45.983
Why can't we simply synthesize a final one?

NOTE Confidence: 0.801514841428571

1eabcbf8-738d-4b57-9e8c-47ea254fa855
00:19:45.983 --> 00:19:49.229
Is it purely for micro optimization?

NOTE Confidence: 0.801514841428571

310f3556-0604-4365-b64f-b049babf9c6d
00:19:49.230 --> 00:19:51.687
Because if we if we believe that

NOTE Confidence: 0.801514841428571

90502249-6ec2-4fed-8ed8-9084f5d7b3fb
00:19:51.687 --> 00:19:53.500
we can do memmove.

NOTE Confidence: 0.801514841428571

7211e355-c681-4ace-b854-1c2bed7228c7
00:19:53.500 --> 00:19:56.410
And we can convert to addresses.

NOTE Confidence: 0.801514841428571

3ac73f9b-e3f5-41cc-9f85-5b43393dd1e3
00:19:56.410 --> 00:19:59.770
It really seems like.

NOTE Confidence: 0.801514841428571

b77434e9-8ae5-45e3-a3f1-1202de5c15e2
00:19:59.770 --> 00:20:01.485
We could implement one in terms of

NOTE Confidence: 0.801514841428571

ad8dc2c8-2a3e-43ac-861c-d360dd5b92c1
00:20:01.485 --> 00:20:03.261
the other if we weren't just calling

NOTE Confidence: 0.801514841428571

30a09c1e-af6f-4243-926e-fa512edcfa67
00:20:03.261 --> 00:20:05.210
like move and we had to do some,

NOTE Confidence: 0.801514841428571

1c70457d-008e-425e-b93f-d0ebbe2d09c3
00:20:05.210 --> 00:20:06.210
you know, arbitrary operation,

NOTE Confidence: 0.801514841428571

35867dd5-9c3a-4f6a-be00-65f56311f477
00:20:06.210 --> 00:20:07.979
then calling one in terms of the

NOTE Confidence: 0.801514841428571

52d40ca1-53b0-47f9-b01a-b6c52e719837
00:20:07.979 --> 00:20:09.109
other might not be possible.

NOTE Confidence: 0.801514841428571

c2ee96e7-c942-436c-8729-d1b8f45b1890
00:20:09.110 --> 00:20:10.630
It might not be efficient,

NOTE Confidence: 0.801514841428571

e2c80e18-d4fc-40e4-8f83-95781e568fa6
00:20:10.630 --> 00:20:13.186
so let's see if I can answer this myself.

NOTE Confidence: 0.801514841428571

6caab832-00e1-437a-b637-38073b6c7a2a
00:20:13.190 --> 00:20:14.798
We confirmed the address,

NOTE Confidence: 0.801514841428571

ee5856b2-7277-41ce-8904-1cb24dbc3c0d
00:20:14.798 --> 00:20:17.980
we do a bunch of cons casting.

NOTE Confidence: 0.801514841428571

6d96d05d-39a6-4f46-9b9a-02db6e2a840a
00:20:17.980 --> 00:20:20.717
OK, so the difference here is that

NOTE Confidence: 0.801514841428571

7e7ceba6-2504-414d-93a0-026afedf32b8
00:20:20.717 --> 00:20:24.447
we can get the byte count by just

NOTE Confidence: 0.801514841428571

bd27b646-4c86-4055-bbfd-1f3053653de9
00:20:24.447 --> 00:20:26.164
multiplying the count of elements.

NOTE Confidence: 0.801514841428571

89ae703b-af1f-4579-99b8-b11fe3966ee2
00:20:26.164 --> 00:20:28.634
We multiply that by the size of an

NOTE Confidence: 0.801514841428571

32446213-1b37-4b3f-8f72-6c1e98f05c6c
00:20:28.634 --> 00:20:30.326
element that gives us the number

NOTE Confidence: 0.801514841428571

b99f508c-a29d-47f5-9062-d86fea4bf6fb
00:20:30.326 --> 00:20:33.590
of bytes to mimic if we.

NOTE Confidence: 0.801514841428571

693cbcdd-294c-4319-923d-6d63b50144f5
00:20:33.590 --> 00:20:36.586
Implemented this in terms of copying memmove.

NOTE Confidence: 0.801514841428571

500ccc10-7004-45c0-8387-9331020a2dbb
00:20:36.590 --> 00:20:39.548
We would essentially be doing pointer

NOTE Confidence: 0.801514841428571

a098e3a0-596a-4271-b89f-4b3824c06760
00:20:39.548 --> 00:20:42.327
arithmetic or a multiplication and an

NOTE Confidence: 0.801514841428571

23cb9b5e-afbc-40d5-8b03-94b95fc111d5
00:20:42.327 --> 00:20:45.340
addition to get the last contiguous

NOTE Confidence: 0.801514841428571

54baa3ca-7fc2-4672-90c8-ddddfc1924c2
00:20:45.340 --> 00:20:48.587
iterator for pointer and then doing

NOTE Confidence: 0.801514841428571

f1e67e88-d93e-4ed2-86d5-04c3ba234450
00:20:48.587 --> 00:20:51.587
a subtraction to get the count.

NOTE Confidence: 0.801514841428571

9baf5d79-b3a8-48c6-bdec-0bf963500e39
00:20:51.590 --> 00:20:54.012
Here we can sort of bypass that

NOTE Confidence: 0.801514841428571

d8de0ed9-2d3d-47dd-ae44-cb32c155adff
00:20:54.012 --> 00:20:56.210
we still need to synthesize.

NOTE Confidence: 0.801514841428571

4032aea3-0379-4e8f-90d6-257f1a70d585
00:20:56.210 --> 00:20:56.604
No,

NOTE Confidence: 0.801514841428571

f9d46e32-1fa5-4620-8965-a4fb9f7c613e
00:20:56.604 --> 00:20:59.362
we don't need to because copy member

NOTE Confidence: 0.801514841428571

a357047f-cdad-467a-842b-55dc33e57344
00:20:59.362 --> 00:21:02.199
we actually just wants the account so.

NOTE Confidence: 0.801514841428571

9e838c16-fa5c-4b43-a3a0-807264660aec
00:21:02.200 --> 00:21:04.704
In theory, it's very very slightly less work.

NOTE Confidence: 0.801514841428571

dc994284-8ab8-44a1-be55-1ca34cbbc1cc
00:21:04.710 --> 00:21:07.500
We're avoiding an addition and subtraction,

NOTE Confidence: 0.801514841428571

94adf86b-3d59-4f47-89f5-6716960f147f
00:21:07.500 --> 00:21:07.839
UM,

NOTE Confidence: 0.801514841428571

deebced1-7e8c-4cf7-a602-72a1a2f6f932
00:21:07.839 --> 00:21:09.873
but this that subtraction is just

NOTE Confidence: 0.801514841428571

a2bfbc38-fcb8-4fea-80e8-a185a3d98d4c
00:21:09.873 --> 00:21:11.939
in terms of bytes anyways.

NOTE Confidence: 0.801514841428571

d668c884-87df-42ee-919e-23d1809673cb
00:21:11.940 --> 00:21:14.775
We did really care about micro performance

NOTE Confidence: 0.801514841428571

f436a722-ef38-4392-b349-d04665f002c1
00:21:14.775 --> 00:21:17.168
when we worked on the original copy memo.

NOTE Confidence: 0.801514841428571

c0787251-c87a-43d9-9d5b-46d45950d4a7
00:21:17.170 --> 00:21:19.165
That's actually why it's so careful too.

NOTE Confidence: 0.801514841428571

1be5e95c-2d57-4ac1-9834-adeb1b531969
00:21:19.170 --> 00:21:22.580
Once we've got the bytes.

NOTE Confidence: 0.801514841428571

03fdd462-b592-47af-8042-5fecccb6d522
00:21:22.580 --> 00:21:25.199
Once we we what we do is we separately

NOTE Confidence: 0.801514841428571

5b376f41-73b5-4726-9520-c6a3e67e4e5d
00:21:25.199 --> 00:21:27.341
convert first to a pointer to care

NOTE Confidence: 0.801514841428571

0962ff71-902d-45d8-880d-b772e647c77a
00:21:27.341 --> 00:21:29.594
and last two pointer to care and

NOTE Confidence: 0.801514841428571

3ee0dc32-0641-4964-9e06-c48bbac44904
00:21:29.594 --> 00:21:31.580
then we can directly subtract them.

NOTE Confidence: 0.801514841428571

3d8534e4-79da-47bf-a136-95f102cf7a05
00:21:31.580 --> 00:21:33.852
We don't need to jump from the bite

NOTE Confidence: 0.801514841428571

09d2287c-1e0e-45cd-9ad8-a19af691a317
00:21:33.852 --> 00:21:36.196
domain to the element domain and back

NOTE Confidence: 0.801514841428571

c077c99c-5c83-4f05-b79d-d671692e4543
00:21:36.200 --> 00:21:37.740
then move once a number of bytes,

NOTE Confidence: 0.801514841428571

9ee647ef-ffad-4bcb-be68-107fea955a57
00:21:37.740 --> 00:21:39.364
so we can just subtract the byte pointers.

NOTE Confidence: 0.78748439

1eccadbf-35a0-4b2e-8bdf-425224583c9e
00:21:41.380 --> 00:21:43.636
That was important there I'm less

NOTE Confidence: 0.78748439

a9d85d0c-20dd-44d1-b3f2-f218ee93a616
00:21:43.636 --> 00:21:45.140
convinced it's important here.

NOTE Confidence: 0.78748439

7d4baabe-3e24-4848-b0dc-74212f6e80cd
00:21:45.140 --> 00:21:48.560
OK, I, I will now call my lifeline Casey.

NOTE Confidence: 0.78748439

16cdc527-d13a-4ff6-ab1d-a434a085392c
00:21:48.560 --> 00:21:51.728
What are your thoughts on why this is

NOTE Confidence: 0.78748439

de23c6dc-2f85-49dc-af09-bce94bc2a1e8
00:21:51.728 --> 00:21:54.176
a separate function instead of simply

NOTE Confidence: 0.78748439

1b7b0d8d-58f1-4ccd-b39d-f311f12c91c1
00:21:54.176 --> 00:21:55.795
wrapping or just directly calling?

NOTE Confidence: 0.78748439

9dbbe84a-7a7d-4b09-a02f-c852479616da
00:21:55.795 --> 00:21:56.855
You know copy memo?

NOTE Confidence: 0.78748439

ff05f316-5a6a-4424-88ca-00968abebe1f
00:21:56.860 --> 00:21:59.218
Was it purely for micro performance?

NOTE Confidence: 0.78748439

e6cacd6f-2fa7-4521-a285-b248577f1ff8
00:21:59.220 --> 00:22:01.452
It seemed really important to me at the time,

NOTE Confidence: 0.78748439

bfafc5bc-1fc7-4746-b675-38521d600818
00:22:01.460 --> 00:22:03.756
but now I can't seem to recall why.

NOTE Confidence: 0.78748439

82e9f29b-6e40-42ad-9e63-acfd53bc5e0e
00:22:03.760 --> 00:22:06.904
Yeah, it must just be for micro optimization.

NOTE Confidence: 0.78748439

5df5a195-fea2-4dcb-977b-6cc8757ff9b1
00:22:06.910 --> 00:22:09.534
I can't see any other reason for it.

NOTE Confidence: 0.78748439

25925aa1-e1ad-4721-bee6-96fd928a5eb5
00:22:09.540 --> 00:22:16.110
OK, yeah, my feeling is like multiply.

NOTE Confidence: 0.78748439

6a4d0f05-7f84-488f-bbf4-7d3f631a673c
00:22:16.110 --> 00:22:18.091
Yeah, saving us anything major like the

NOTE Confidence: 0.78748439

cdce8d9e-6d3a-4fad-89af-970fa7b3e98b
00:22:18.091 --> 00:22:20.805
way we save our division from from doing

NOTE Confidence: 0.78748439

0515b983-f995-4c21-a48b-485d914c4950
00:22:20.805 --> 00:22:22.610
whatever pointer difference from the

NOTE Confidence: 0.78748439

3960e243-6c31-43a6-bf3d-d239ebd81510
00:22:22.669 --> 00:22:25.390
other case for copy member. Yeah yeah,

NOTE Confidence: 0.78748439

c30c488a-abde-40f2-b1e7-48d589703118
00:22:25.390 --> 00:22:29.660
because the original one was if we.

NOTE Confidence: 0.78748439

f19c09ab-d89c-4dec-a2da-c546f0741fb7
00:22:29.660 --> 00:22:31.152
Subtracted the the original

NOTE Confidence: 0.78748439

7ae49545-bc83-416e-aea1-39ba719c5cf4
00:22:31.152 --> 00:22:33.017
optimization we applied here was.

NOTE Confidence: 0.78748439

9134d1a7-e2c3-45cb-8de2-1fb6a4cbfc23
00:22:33.020 --> 00:22:36.440
If we subtracted the original pointers,

NOTE Confidence: 0.78748439

8b6439c3-77d5-4ce4-875a-dd3fbc5a4505
00:22:36.440 --> 00:22:38.692
we do a pointer.

NOTE Confidence: 0.78748439

8217336b-3e5b-4227-bf55-7c8c9c82f29c
00:22:38.692 --> 00:22:40.944
We do pointer arithmetic,

NOTE Confidence: 0.78748439

facd40e6-8c97-41d1-899b-0361013aa291
00:22:40.950 --> 00:22:43.722
which is a division by a constant

NOTE Confidence: 0.78748439

16d4fbeb-fe1c-4231-a6e8-a15756cc9868
00:22:43.722 --> 00:22:45.896
value to get from number of

NOTE Confidence: 0.78748439

4c24bb40-ef39-457c-881b-3c285b5e24fd
00:22:45.896 --> 00:22:47.286
bytes to number of elements,

NOTE Confidence: 0.78748439

c5238c08-74c0-409d-8cea-cd979d1c1a44
00:22:47.290 --> 00:22:49.540
and it is a constant division.

NOTE Confidence: 0.78748439

8fa80117-215c-4940-87f8-bc9666593911
00:22:49.540 --> 00:22:51.910
But if you divide by like 12 or 13 or

NOTE Confidence: 0.78748439

0dc75b05-e2db-4d53-a739-1c84123f2640
00:22:51.980 --> 00:22:54.416
whatever horrible size the element is,

NOTE Confidence: 0.78748439

907d96fa-369f-4ab4-b08b-a562c77835e5
00:22:54.420 --> 00:22:56.191
the compiler will have to emit a

NOTE Confidence: 0.78748439

6a6e09c8-c8bc-4e53-aa09-40d71e8df992
00:22:56.191 --> 00:22:58.190
bunch of magic multiplies and shifts,

NOTE Confidence: 0.78748439

a5f08d18-df25-4b50-9b82-f977e44e5b62
00:22:58.190 --> 00:22:59.406
and it's potentially slow.

NOTE Confidence: 0.78748439

dfbd6391-0072-43bf-99f4-a9bcc68c4bb4
00:22:59.406 --> 00:23:01.661
When all we actually need is just

NOTE Confidence: 0.78748439

90d9d80e-9b52-49ae-87f3-a4ba4da058bf
00:23:01.661 --> 00:23:02.399
by subtraction.

NOTE Confidence: 0.78748439

7f6ce2b8-ee5e-4219-808b-fbbcfb1b7bc8
00:23:02.400 --> 00:23:03.765
So yeah, if we really wanted to

NOTE Confidence: 0.78748439

d7f0aef7-4d25-4fa4-9154-299941d1cc6a
00:23:03.765 --> 00:23:05.137
kind of bytes in the 1st place,

NOTE Confidence: 0.78748439

ebd94fd6-8182-4c33-be52-d8d44d7492b2
00:23:05.140 --> 00:23:06.229
it's it's unfortunate.

NOTE Confidence: 0.78748439

2e4d1d16-4ad5-4ee9-b733-c1dc441b6895
00:23:06.229 --> 00:23:06.592
Yeah,

NOTE Confidence: 0.78748439

95df4e93-cb4d-49d3-adb1-e8fd5df6c992
00:23:06.592 --> 00:23:08.770
it was purely wasted work and

NOTE Confidence: 0.78748439

097ea1d7-f2e5-4592-a1e5-ec4d3c0f064c
00:23:08.841 --> 00:23:09.969
it was reasonable.

NOTE Confidence: 0.78748439

45c9fae5-8692-4a2b-8428-773c3a52f230
00:23:09.970 --> 00:23:11.130
Like we're avoiding a number

NOTE Confidence: 0.78748439

9e6ab930-9425-4233-925a-26d4a1620eb1
00:23:11.130 --> 00:23:11.594
of optimizations,

NOTE Confidence: 0.78748439

450a9403-52e6-4396-8308-8ac7e7a1832b
00:23:11.600 --> 00:23:13.432
and we're only going to have one function

NOTE Confidence: 0.78748439

1ecc4cd7-a099-40fe-a87d-5f3e0d2058f1
00:23:13.432 --> 00:23:14.845
that's called by a bunch of the STL.

NOTE Confidence: 0.78748439

edb4f68b-3a78-476e-86f2-301841b534be
00:23:14.850 --> 00:23:16.257
We may as well devote a bunch

NOTE Confidence: 0.78748439

b24a9e82-46a4-4afb-8da8-4a36d693aa0e
00:23:16.257 --> 00:23:17.912
of time to developer time to

NOTE Confidence: 0.78748439

fc405bcc-cb4e-4311-a3ce-8c825dc377b3
00:23:17.912 --> 00:23:19.236
getting it really efficient,

NOTE Confidence: 0.78748439

22babc0b-c43c-40fb-97d9-62ae04c314cd
00:23:19.240 --> 00:23:22.159
but that's already been done here here.

NOTE Confidence: 0.78748439

26fed906-c63e-4dc9-9957-ebae40f1854b
00:23:22.160 --> 00:23:22.694
At most,

NOTE Confidence: 0.78748439

4155eceb-69a1-4b9d-a02d-5f90dd8213f8
00:23:22.694 --> 00:23:24.563
this would be avoiding like a subtraction

NOTE Confidence: 0.78748439

a7e3fb69-36d9-46ca-8ca3-55d673d73338
00:23:24.563 --> 00:23:26.488
and addition and an optimizer actually

NOTE Confidence: 0.78748439

fc56bf6f-9f75-4a25-82ca-b029527ef135
00:23:26.488 --> 00:23:28.093
probably can see through that.

NOTE Confidence: 0.78748439

cb8d25b6-4d63-4856-9301-ba7835d095c2
00:23:28.100 --> 00:23:29.060
Or even if it doesn't,

NOTE Confidence: 0.78748439

fe4b9da3-8bfb-447b-b9b2-9fc2d6c67ca5
00:23:29.060 --> 00:23:30.388
it's one subtraction 1.

NOTE Confidence: 0.78748439

12d018df-7c9a-4f65-9d66-523252bf493b
00:23:30.388 --> 00:23:30.720
Addition.

NOTE Confidence: 0.867616975

492b2cb1-2042-4456-80bd-687e69aa504e
00:23:32.810 --> 00:23:34.790
I'm thinking this should probably just

NOTE Confidence: 0.867616975

00c72bfc-f5cf-455d-a7fb-458172fc59a8
00:23:34.790 --> 00:23:37.077
be implemented in terms of the other one.

NOTE Confidence: 0.867616975

13bfc258-a56d-4dbb-afff-2b159fc6c7b7
00:23:37.080 --> 00:23:38.384
Unless we ever find through like you know,

NOTE Confidence: 0.867616975

a7b6d46d-4f7d-420d-adb8-da644707bc63
00:23:38.390 --> 00:23:40.238
profiling that it's a big deal and then

NOTE Confidence: 0.867616975

a90dfb5a-6f2e-48cf-b6d3-2a457349c2d9
00:23:40.238 --> 00:23:42.407
we can go essentially restore this code,

NOTE Confidence: 0.867616975

926bcce2-1e69-4a77-9b51-5ae4f0e34435
00:23:42.410 --> 00:23:45.074
but this seems like it's sort of duplicating

NOTE Confidence: 0.867616975

23a0c602-2b9f-4c05-96a2-e2c9c2778ee4
00:23:45.074 --> 00:23:47.747
the amount of code we need to maintain and.

NOTE Confidence: 0.867616975

1a9ba8e1-6baf-4c2d-bd90-7df2a12bebc9
00:23:47.750 --> 00:23:50.190
I'm less enthusiastic about that.

NOTE Confidence: 0.720873382857143

b1ae99b4-568d-4e08-b916-689dd219e7a3
00:23:53.200 --> 00:23:55.517
Especially if you can no longer remember

NOTE Confidence: 0.720873382857143

a7da2da0-e6f8-451a-8bb2-61e6ba647119
00:23:55.517 --> 00:23:57.522
any specific motion request from the

NOTE Confidence: 0.720873382857143

e903540b-1f25-4540-9c7a-1befa08aedf6
00:23:57.522 --> 00:23:59.436
author that they justify the existence

NOTE Confidence: 0.720873382857143

02e5dab6-8f2d-40e8-add4-92c95ae9e321
00:23:59.436 --> 00:24:01.859
of this separate thing or get rid of it.

NOTE Confidence: 0.720873382857143

0cd05fce-465c-4326-851e-fc0c56d0d3fb
00:24:01.860 --> 00:24:04.276
That sounds good. OK, I will add that.

NOTE Confidence: 0.540278533333333

220c6685-2e41-4b1b-a1f2-381daeee412d
00:24:06.340 --> 00:24:10.066
Umm, OK so uh, let's see.

NOTE Confidence: 0.760478033333333

99f25fe9-db2a-4b00-a23e-3b58a4e2d53a
00:24:12.220 --> 00:24:16.540
Because we're working with

NOTE Confidence: 0.760478033333333

ed1370ee-4f59-4ddb-adaf-bbba6a9d91fc
00:24:16.540 --> 00:24:21.290
contiguous iterators, this could

NOTE Confidence: 0.760478033333333

6bd8bcae-506b-4192-b0fe-fd94ab31c1c6
00:24:21.290 --> 00:24:25.400
be implemented. By calling.

NOTE Confidence: 0.374322703333333

b1e3182e-fb8b-4659-88d0-7b96eaa5446f
00:24:28.340 --> 00:24:29.528
Happy man move.

NOTE Confidence: 0.28674732215

81f27191-4ed2-4f70-a863-3772997d2db5
00:24:32.060 --> 00:24:34.130
Of Umm

NOTE Confidence: 0.04122919

258d6bce-df75-4331-aa6e-6455b321d8e2
00:24:37.170 --> 00:24:44.904
the there might be. A.

NOTE Confidence: 0.04122919

823d10f9-90c7-4fd0-bb7e-b50f88bce14a
00:24:44.904 --> 00:24:48.314
Alright. If we did that,

NOTE Confidence: 0.04122919

d5ee1c18-ff8a-4de7-be8d-082172619c07
00:24:48.314 --> 00:24:51.530
there might be a little bit

NOTE Confidence: 0.04122919

c736b661-1fe9-4b4d-986f-d1ce2cbbd71a
00:24:51.658 --> 00:24:55.150
of unnecessary work pointer.

NOTE Confidence: 0.04122919

2dcc95c0-c0c2-4b9d-b69f-09b450cd57a0
00:24:55.150 --> 00:24:56.482
A dish or I'll just say

NOTE Confidence: 0.04122919

3c01a044-bda0-4ad5-92ef-c7abe11c4541
00:24:56.482 --> 00:24:57.370
addition, subtraction.

NOTE Confidence: 0.850075515

c824ac65-7b01-4d62-8a26-26fed5810b05
00:25:01.710 --> 00:25:02.770
But nothing.

NOTE Confidence: 0.715412934769231

56e904de-22dd-425c-9c2f-121623671e75
00:25:06.280 --> 00:25:11.842
But there shouldn't be any significant

NOTE Confidence: 0.715412934769231

fe925f9d-0915-4f21-9d9c-7954ca1d83a8
00:25:11.842 --> 00:25:17.690
expense like a division by size of T.

NOTE Confidence: 0.8326248425

41069f84-061b-4096-905d-875e747bfaee
00:25:21.860 --> 00:25:25.188
Can you either justify?

NOTE Confidence: 0.659513266666667

8ed0339c-4447-4e92-b3b4-1952c3911194
00:25:28.360 --> 00:25:30.559
The need for.

NOTE Confidence: 0.730678391111111

34c2f49c-18cf-404f-860b-4aeae435f269
00:25:33.960 --> 00:25:39.060
Near duplicating the code here

NOTE Confidence: 0.730678391111111

170268ee-8310-4e96-a81e-56438b0ae13f
00:25:39.060 --> 00:25:43.140
due to performance considerations.

NOTE Confidence: 0.730678391111111

b869c041-c8ad-4e7a-b89c-fd5d259cb732
00:25:43.140 --> 00:25:48.430
Or simplify this by implementing.

NOTE Confidence: 0.730678391111111

2bb7fca6-1d1a-4756-9b0a-76e5be65b305
00:25:48.430 --> 00:25:55.260
Copying my move N in terms of. Copy memo.

NOTE Confidence: 0.69361937375

27e49051-c396-428b-9d36-e6a2050b50ba
00:25:58.250 --> 00:25:59.960
OK, uh, because we're working

NOTE Confidence: 0.69361937375

3e058c79-01e2-4e2c-9bc6-da7db5d376db
00:25:59.960 --> 00:26:00.986
with contiguous iterators.

NOTE Confidence: 0.69361937375

7de4b479-f40f-4e82-b143-3a8fab12b34d
00:26:00.990 --> 00:26:02.238
This could be implemented by copy

NOTE Confidence: 0.69361937375

8075a8a5-8809-4535-b8ed-96f35e5696f9
00:26:02.238 --> 00:26:03.479
remove above if we did that,

NOTE Confidence: 0.69361937375

5f2002f0-a889-41ba-a89c-149e92312f87
00:26:03.480 --> 00:26:04.845
there might be a little bit of

NOTE Confidence: 0.69361937375

7acd3698-795b-4a26-af86-73b0c8d97bc4
00:26:04.845 --> 00:26:05.689
unnecessary work addition, subtraction,

NOTE Confidence: 0.69361937375

48395a50-ac09-4d38-b3f1-f48413594b96
00:26:05.689 --> 00:26:07.243
but there shouldn't be any significant

NOTE Confidence: 0.69361937375

e3e3350a-42c2-45b6-890b-35df5cfa97bc
00:26:07.243 --> 00:26:08.930
expense like a division by size of T.

NOTE Confidence: 0.69361937375

f0ef3cb1-eb24-4fd4-a434-c9d051b261f0
00:26:08.930 --> 00:26:10.178
Can you either justify the need

NOTE Confidence: 0.69361937375

78672358-1a02-45a3-b59b-52c416531ac2
00:26:10.178 --> 00:26:11.615
for near duplicating code here due

NOTE Confidence: 0.69361937375

b224428c-d90e-47c6-8d79-b10459db9961
00:26:11.615 --> 00:26:12.467
to performance considerations?

NOTE Confidence: 0.69361937375

dbed9b63-c1bb-4e67-9458-fc06e07a3d06
00:26:12.470 --> 00:26:14.732
Or simplify this by implementing copy

NOTE Confidence: 0.69361937375

48159c2c-f625-43c1-b1ff-013c22d85e61
00:26:14.732 --> 00:26:17.189
remove in in terms of copy memo?

NOTE Confidence: 0.69361937375

f52fab42-295d-4ca8-8a46-17c94e8f1fa1
00:26:17.190 --> 00:26:20.894
OK. Uh, that said,

NOTE Confidence: 0.69361937375

3e670947-ef50-4fb7-be02-dcea4db68792
00:26:20.894 --> 00:26:24.240
I see no specific correctness concerns here.

NOTE Confidence: 0.69361937375

a3e1df24-a414-41f0-9744-53e52a250a11
00:26:24.240 --> 00:26:27.616
UM, we translate 1st and deaths to putters.

NOTE Confidence: 0.69361937375

5dcd19db-a86c-4a14-8286-bf8d7c9be3d1
00:26:27.620 --> 00:26:31.617
Just like above, we cast them over.

NOTE Confidence: 0.69361937375

93d25bfd-a009-4ccb-8f8d-6f6bbb2db553
00:26:31.620 --> 00:26:35.150
This looks exactly copy pasted.

NOTE Confidence: 0.69361937375

9cc93bc3-1cb5-4fe1-9143-429f24e3a073
00:26:35.150 --> 00:26:36.846
The characters we got to do a little

NOTE Confidence: 0.69361937375

16bc136f-db1c-48d9-9085-4e06efb8293c
00:26:36.846 --> 00:26:38.789
dance to prospect constant and volatile.

NOTE Confidence: 0.69361937375

1d7858c9-00d2-407a-9e78-8f5c716e16af
00:26:38.790 --> 00:26:40.166
That's all the same.

NOTE Confidence: 0.69361937375

1fd3ddfa-8c5d-4ff3-acce-131919f85c62
00:26:40.166 --> 00:26:42.267
Uh, we already have a bite count and

NOTE Confidence: 0.69361937375

09d69bea-8470-496b-bbee-6986d857cb7a
00:26:42.267 --> 00:26:44.021
I very much appreciate that this

NOTE Confidence: 0.69361937375

da2d97d9-8165-40e6-8213-cd06648dff3a
00:26:44.021 --> 00:26:46.219
is phrased in terms of byte count,

NOTE Confidence: 0.69361937375

2ffa8181-7371-44f6-a752-a3cb989a5daa
00:26:46.220 --> 00:26:49.156
because it's bytes a top way we get

NOTE Confidence: 0.69361937375

2fb5c6b0-29e5-4d82-a982-707ad52404ae
00:26:49.156 --> 00:26:52.006
confused is just saying count or size.

NOTE Confidence: 0.69361937375

05f38b8e-697b-4ee6-90ec-8c95c496e957
00:26:52.010 --> 00:26:55.310
When we variously mean like elements

NOTE Confidence: 0.69361937375

71202584-69ae-447d-92ef-d9a90612f476
00:26:55.310 --> 00:26:56.410
or bytes.

NOTE Confidence: 0.69361937375

f28658ec-00ef-4b2d-87dd-834521f63388
00:26:56.410 --> 00:26:58.078
By following the STL naming conventions,

NOTE Confidence: 0.69361937375

b879427b-ae70-4d44-93ea-2aa2f8216d37
00:26:58.080 --> 00:26:59.529
if we ever see like counter length

NOTE Confidence: 0.69361937375

83610a07-a9bc-486e-ac88-670149f29e65
00:26:59.529 --> 00:26:59.943
or whatever,

NOTE Confidence: 0.69361937375

5dfe0eb7-5850-4142-8b16-e9fdfdd899e1
00:26:59.950 --> 00:27:02.043
we assume elements always in terms of

NOTE Confidence: 0.69361937375

7e13549a-55b8-4389-b6f7-4faeb70b8a9f
00:27:02.043 --> 00:27:03.739
elements only if something specifically

NOTE Confidence: 0.69361937375

dd6f7766-6c88-4902-8f69-769798d1c00a
00:27:03.739 --> 00:27:06.322
says bytes are we dealing with bytes.

NOTE Confidence: 0.69361937375

982818b0-ca30-4310-9827-b2842986190a
00:27:06.330 --> 00:27:09.010
So this naming is good.

NOTE Confidence: 0.69361937375

60ed2b18-ece4-447a-a22d-5ce18ae6a8dc
00:27:09.010 --> 00:27:11.098
So we would take count times the size

NOTE Confidence: 0.69361937375

704506be-3d3e-4a9b-9214-3fba1bcbc889
00:27:11.098 --> 00:27:12.906
of whatever do our first putter is,

NOTE Confidence: 0.69361937375

7bfb70c7-0ad2-4e75-87bb-58164bdc1e34
00:27:12.910 --> 00:27:14.359
so that's how we just get the element type.

NOTE Confidence: 0.69361937375

7fecefc3-55b4-48f1-bb5c-76921f994547
00:27:14.360 --> 00:27:15.326
That's fine,

NOTE Confidence: 0.69361937375

81a253a1-bd45-4dc3-a041-15eada6e255c
00:27:15.326 --> 00:27:18.707
we costed memmove with the byte count,

NOTE Confidence: 0.69361937375

771f837c-5334-4534-9209-317796f2bcc3
00:27:18.710 --> 00:27:20.885
Yep, destinations first and then

NOTE Confidence: 0.69361937375

3da4da4d-6a9b-45ca-a6ad-0011d8d4de3c
00:27:20.885 --> 00:27:22.625
we resent the size.

NOTE Confidence: 0.69361937375

be35c549-2060-4094-bf44-5ed575313bee
00:27:22.630 --> 00:27:25.806
OK, so if we do need this function.

NOTE Confidence: 0.69361937375

2a553c64-ff2d-4d15-95a4-b4d00ecfdee9
00:27:25.810 --> 00:27:26.946
This is all correct.

NOTE Confidence: 0.69361937375

7e1dce80-f958-4f7e-8de5-0f75c9d7eb46
00:27:26.946 --> 00:27:31.885
Yeah, we had the bite count there otherwise.

NOTE Confidence: 0.69361937375

ed306a54-64af-47e3-a815-6a7ed968cf45
00:27:31.890 --> 00:27:32.571
Let's see here.

NOTE Confidence: 0.69361937375

030b644c-d71e-453b-863a-3e47754b5cc2
00:27:32.571 --> 00:27:33.706
We already have the count,

NOTE Confidence: 0.69361937375

3aea2d03-6246-43f6-9c4b-371cdda603d6
00:27:33.710 --> 00:27:36.769
so we static cast back to the.

NOTE Confidence: 0.69361937375

b7590f0b-a96c-41dd-be1a-3a827fa6f627
00:27:36.770 --> 00:27:39.230
Iterative type of the contiguous iterator.

NOTE Confidence: 0.69361937375

076ee9c4-32c0-4b0d-9e57-6b176ca8dce1
00:27:39.230 --> 00:27:40.926
The out contiguous iterator.

NOTE Confidence: 0.69361937375

76c2de4c-f1ca-4fbc-b0ba-f80b6ecf1faa
00:27:40.926 --> 00:27:44.368
Yeah, so if we need this function,

NOTE Confidence: 0.69361937375

7ce1eb62-8413-4136-b771-b7d3f3231844
00:27:44.370 --> 00:27:46.698
this implementation is correct.

NOTE Confidence: 0.69361937375

54f27a16-579f-4c6d-9bb6-072925285573
00:27:46.700 --> 00:27:47.120
OK,

NOTE Confidence: 0.69361937375

36b61aa1-4374-47ef-a05d-011047e4809b
00:27:47.120 --> 00:27:49.640
Next up I'm copy and unchecked,

NOTE Confidence: 0.69361937375

b99dda85-a4c7-4b19-9081-89153f2b584e
00:27:49.640 --> 00:27:53.098
uh, this is being added similar to

NOTE Confidence: 0.69361937375

cd573b07-f07d-497d-ae52-a63001084368
00:27:53.098 --> 00:27:54.086
copy unchecked.

NOTE Confidence: 0.69361937375

9309ef82-5902-4b38-9486-a5688ce96b36
00:27:54.090 --> 00:27:54.318
OK,

NOTE Confidence: 0.69361937375

3ce28955-df83-472d-9cf6-4b81a1f3c5dd
00:27:54.318 --> 00:27:55.914
so this one is different than the

NOTE Confidence: 0.69361937375

668389de-14f4-4570-af2a-9693f9751deb
00:27:55.914 --> 00:27:58.111
one we just looked at because it is

NOTE Confidence: 0.69361937375

0eea9e18-37af-4d1c-a08a-90523414e8fd
00:27:58.111 --> 00:27:59.760
taking an arbitrary input iterator.

NOTE Confidence: 0.838830227368421

2dc61437-052a-4338-bc21-140c865ee8e3
00:28:02.100 --> 00:28:03.801
So the same concern of can we

NOTE Confidence: 0.838830227368421

9bc67ce5-d642-4e7b-bcda-37c97b2c6e42
00:28:03.801 --> 00:28:05.331
just implement in terms of the

NOTE Confidence: 0.838830227368421

d352095e-c561-4d4e-bd81-81c62dadd0ac
00:28:05.331 --> 00:28:06.813
other one that does not apply,

NOTE Confidence: 0.838830227368421

f9aafeee-5e5f-4346-b5e7-52f3e9e0e7c3
00:28:06.820 --> 00:28:08.136
so we actually do need this one?

NOTE Confidence: 0.838830227368421

3c44cfe2-4d11-4460-8f52-2f7776612807
00:28:08.140 --> 00:28:11.020
As far as I can tell.

NOTE Confidence: 0.838830227368421

acc616a2-e952-4d2f-989f-3d65b5a9f15c
00:28:11.020 --> 00:28:11.900
This looks like an edit,

NOTE Confidence: 0.838830227368421

e7113bc6-5816-4779-b636-40141c200a6b
00:28:11.900 --> 00:28:13.448
but it's really just moving this

NOTE Confidence: 0.838830227368421

7f25d21a-0615-4908-9c3a-6a01ca7fbaea
00:28:13.448 --> 00:28:15.264
code down here and then there's

NOTE Confidence: 0.838830227368421

2ffc05dc-fe1b-4b17-aa2a-8bcd070cfd26
00:28:15.264 --> 00:28:16.716
some generalization down here.

NOTE Confidence: 0.838830227368421

a9ab0b60-e4fe-4a0b-8133-08c85ece7f40
00:28:16.720 --> 00:28:20.815
OK, so. We have copy and unchecked.

NOTE Confidence: 0.838830227368421

f133a307-11e1-4108-a181-c182eefb0cb9
00:28:20.820 --> 00:28:21.978
Has the same sort of signature,

NOTE Confidence: 0.838830227368421

05d0d902-7c65-48c1-af57-e7164ab66682
00:28:21.980 --> 00:28:24.815
but we take a size T count.

NOTE Confidence: 0.838830227368421

94ac2052-f296-4e30-a7e3-4d2a9e682b21
00:28:24.820 --> 00:28:27.250
Always size T because that's.

NOTE Confidence: 0.838830227368421

75b3c202-1ad0-434d-bf2b-5874f982cd05
00:28:27.250 --> 00:28:27.920
That's interesting.

NOTE Confidence: 0.838830227368421

4f3f674f-fe5c-4668-8912-ddf451b08617
00:28:27.920 --> 00:28:30.265
Why does copying insist on size T?

NOTE Confidence: 0.736379149555556

2886985a-e7df-4a11-8692-879ddc2d8643
00:28:33.070 --> 00:28:35.735
Usually it's like some sort

NOTE Confidence: 0.736379149555556

fd36bb7a-56d6-411f-b757-438e0d76e299
00:28:35.735 --> 00:28:37.867
of iterative city thing.

NOTE Confidence: 0.736379149555556

7c390515-3bf4-4e94-bfd9-b155601142e1
00:28:37.870 --> 00:28:41.738
Difference type sometimes UM.

NOTE Confidence: 0.736379149555556

6559f770-cf4f-460d-bdbb-18a3bd7f8173
00:28:41.740 --> 00:28:44.359
That's quite interesting.

NOTE Confidence: 0.736379149555556

10292453-b60d-4848-ab92-26713d33324c
00:28:44.360 --> 00:28:45.656
We do pass to copy memory,

NOTE Confidence: 0.736379149555556

158305b8-b858-4fb2-8e12-5b03a7599bc3
00:28:45.660 --> 00:28:48.075
but of course that one has a

NOTE Confidence: 0.736379149555556

f192827e-af9c-4b31-b6cf-35af482f9156
00:28:48.075 --> 00:28:49.960
reason to insist on size T.

NOTE Confidence: 0.736379149555556

20816bb7-30f6-4f83-b5f1-51212a7daeed
00:28:49.960 --> 00:28:51.660
But for the arbitrary 1.

NOTE Confidence: 0.826689725217391

ecfbbb15-db5d-4217-a343-09086bc10434
00:28:55.460 --> 00:28:57.116
It it is pathological that you'd

NOTE Confidence: 0.826689725217391

53d8084a-280b-4405-8573-a26984d53db5
00:28:57.116 --> 00:28:59.570
have to be on like a 32 bit system

NOTE Confidence: 0.826689725217391

119da79d-bb5a-4a85-8a1f-70412d56579c
00:28:59.570 --> 00:29:01.700
and you somehow have a 64 bit count,

NOTE Confidence: 0.826689725217391

83a4da98-f1ad-4092-8408-07eacda38fe8
00:29:01.700 --> 00:29:03.930
that's not gonna end well.

NOTE Confidence: 0.826689725217391

d1191d41-79b5-4d60-87df-d1a0fd2b5110
00:29:03.930 --> 00:29:07.038
Well, no, it's an input iterator.

NOTE Confidence: 0.826689725217391

796fbb06-8a9d-429a-8fa7-15eb52e5b76f
00:29:07.040 --> 00:29:09.399
Or I'm sorry it's it's writing to

NOTE Confidence: 0.826689725217391

50415c1d-a528-49dd-8035-c22f7ef099b4
00:29:09.399 --> 00:29:11.030
some arbitrary output iterator.

NOTE Confidence: 0.826689725217391

e6a44289-5ae6-43ff-a6c3-8370e7b0a200
00:29:11.030 --> 00:29:12.690
In theory, there's nothing stopping

NOTE Confidence: 0.826689725217391

204a0427-295c-4f36-a26b-9f8f83fadba2
00:29:12.690 --> 00:29:14.690
you from copying like a file.

NOTE Confidence: 0.826689725217391

e62d109e-df4d-4277-8871-f4e40402779f
00:29:14.690 --> 00:29:17.084
With this saying I want to copy

NOTE Confidence: 0.826689725217391

92f4ba9b-28c5-4ee4-9af6-2d51485b7d40
00:29:17.084 --> 00:29:19.338
5 gigabytes from a file iterator

NOTE Confidence: 0.826689725217391

005c44da-3fb3-405c-987f-9a08cd82b5bc
00:29:19.338 --> 00:29:21.253
to an output file iterator.

NOTE Confidence: 0.826689725217391

a566cc84-f7cc-4b71-9aa9-5d382fd3bd9c
00:29:21.260 --> 00:29:22.730
Here's 5 billion.

NOTE Confidence: 0.826689725217391

3a66b42a-5f2f-4d24-8d24-2345ed97dab2
00:29:22.730 --> 00:29:27.154
That would truncate on X86 or 32 bit.

NOTE Confidence: 0.826689725217391

24833f8c-e913-41a5-aff0-787a77cde021
00:29:27.154 --> 00:29:29.618
This seems highly suspicious.

NOTE Confidence: 0.826689725217391

f87e2761-a16c-4ebd-b847-0003d5f15e15
00:29:29.620 --> 00:29:32.140
I don't know if I like that.

NOTE Confidence: 0.826689725217391

f1d8a638-9e5c-4546-92f0-859b3e55b423
00:29:32.140 --> 00:29:33.238
I wanna look at the usage,

NOTE Confidence: 0.826689725217391

2a381a2f-195d-4290-bafe-922a424e6d58
00:29:33.240 --> 00:29:35.260
so let me actually, uh,

NOTE Confidence: 0.826689725217391

5ae3fd3a-d604-471c-9460-14a8c5a00098
00:29:35.260 --> 00:29:37.276
I'm going to to do a global

NOTE Confidence: 0.826689725217391

c223cc1a-8325-40e2-a342-45bc891d40bf
00:29:37.276 --> 00:29:38.720
search in my editor.

NOTE Confidence: 0.826689725217391

1af9f08c-5896-4404-9f88-6023a5f78374
00:29:38.720 --> 00:29:40.884
I've got my repo here, so I'm going

NOTE Confidence: 0.826689725217391

933b9d6f-73bd-4a16-b330-1e1a2dfa9d3f
00:29:40.884 --> 00:29:42.760
to check out using the GitHub CLI.

NOTE Confidence: 0.826689725217391

b4646a28-27dc-49c8-8c41-2cc0e0b20bc2
00:29:42.760 --> 00:29:47.845
What is this 2806 GHP R checkout do that.

NOTE Confidence: 0.826689725217391

2eba1739-b43b-4b4a-b94a-c04e3aa12c4e
00:29:47.850 --> 00:29:49.548
Great, I should have upgraded this.

NOTE Confidence: 0.826689725217391

b1822947-7e7d-49e6-bed5-23b124d823dc
00:29:49.550 --> 00:29:50.300
Here we go.

NOTE Confidence: 0.826689725217391

3b2c3139-e5b0-4b13-967b-18e2b04fb6af
00:29:50.300 --> 00:29:52.050
OK so I'm gonna look for all

NOTE Confidence: 0.826689725217391

b43e9e70-18bc-43f2-85b3-be282b5503ca
00:29:52.118 --> 00:29:54.308
occurrences of copy on and checked.

NOTE Confidence: 0.826689725217391

5efb6c3e-bc2f-4876-8133-3983d40840fe
00:29:54.310 --> 00:29:55.766
I love global search.

NOTE Confidence: 0.826689725217391

eed01ac9-d02c-4fb0-b2d9-92ea521efa8b
00:29:55.766 --> 00:29:57.762
OK, so here's the implementation

NOTE Confidence: 0.826689725217391

7a9ba025-af23-4b0c-b56f-b5b2e7b8d749
00:29:57.762 --> 00:29:58.986
we're looking at.

NOTE Confidence: 0.826689725217391

411d17b9-4ecf-4e53-a340-c1b316bc6e05
00:29:58.990 --> 00:30:01.450
We have internal usages here.

NOTE Confidence: 0.826689725217391

8e26cee5-1fad-497d-ba46-9a5cc01522e5
00:30:01.450 --> 00:30:02.826
What is new size?

NOTE Confidence: 0.826689725217391

a7f899ff-3ad3-4fa9-b008-6d3870a997de
00:30:02.826 --> 00:30:05.709
I care about the type of new size.

NOTE Confidence: 0.826689725217391

df3b168b-bf6b-4e3c-8bea-bb69f2fb4c65
00:30:05.710 --> 00:30:08.278
New size is the size type.

NOTE Confidence: 0.826689725217391

9a057757-1e85-4aca-ba14-e9b9d485a18d
00:30:08.280 --> 00:30:11.227
So this is an arbitrary size type.

NOTE Confidence: 0.826689725217391

4121aa39-6a61-4219-be83-a031d0c9a220
00:30:11.230 --> 00:30:13.030
Coming from a sign counted range,

NOTE Confidence: 0.826689725217391

4ced35ba-b62b-4359-822d-8fc75afc3a59
00:30:13.030 --> 00:30:14.864
let's just continue spelunking and see if

NOTE Confidence: 0.826689725217391

c3b1e6de-63cb-454d-a66a-0b30d05dd522
00:30:14.864 --> 00:30:16.988
we can find where this is coming from.

NOTE Confidence: 0.826689725217391

ce4bf20b-720f-4362-b7b6-6f06fe372797
00:30:16.990 --> 00:30:18.418
Uhm, count.

NOTE Confidence: 0.826689725217391

33819378-dde2-477f-bfee-aa55fcd301c4
00:30:18.418 --> 00:30:23.416
That's a size type from the allocator.

NOTE Confidence: 0.826689725217391

7b46cc74-2bfb-41b2-b356-bddc84644126
00:30:23.420 --> 00:30:26.240
That's a vector allocator, but again,

NOTE Confidence: 0.826689725217391

2fef9263-dc97-4d97-b165-e8a712e20e90
00:30:26.240 --> 00:30:28.706
this is all this is assigning to a vector.

NOTE Confidence: 0.826689725217391

c3627791-70f4-4925-9ad0-ae2b89251a96
00:30:28.710 --> 00:30:31.470
We're not just copying arbitrary iterators,

NOTE Confidence: 0.826689725217391

6bfc08a9-e2f9-493d-af87-23e4a5813805
00:30:31.470 --> 00:30:33.402
so a vector really does need

NOTE Confidence: 0.826689725217391

49e8b390-df47-4894-ae44-4db310be69ef
00:30:33.402 --> 00:30:35.450
to store its stuff in memory.

NOTE Confidence: 0.826689725217391

ab1c46dd-0b25-487f-9ff1-2dc68293c576
00:30:35.450 --> 00:30:37.466
OK, so maybe assign counter range.

NOTE Confidence: 0.826689725217391

1e31c4c2-4e33-49f3-b014-ba4b13c472b9
00:30:37.470 --> 00:30:38.052
This one's fine.

NOTE Confidence: 0.826689725217391

75e1d1e3-33dd-41b9-a8d1-f41cf33b3eec
00:30:38.052 --> 00:30:39.216
This doesn't have the same concern.

NOTE Confidence: 0.826689725217391

60af36cf-a2d4-47f0-864a-170b32e6dd84
00:30:39.220 --> 00:30:42.280
It is highly suspicious though.

NOTE Confidence: 0.826689725217391

8b3820f8-321f-49fb-8cee-fcd24dd4b6d3
00:30:42.280 --> 00:30:45.088
Let me go back to count copy and checked.

NOTE Confidence: 0.826689725217391

960104f1-456a-4151-a098-7ea76412ca80
00:30:45.090 --> 00:30:46.910
The other one is in insert range.

NOTE Confidence: 0.826689725217391

a3fd1af4-86dc-4358-9739-9b148869c519
00:30:46.910 --> 00:30:51.796
OK, so with the specific usage here.

NOTE Confidence: 0.826689725217391

eafa0d4e-60e4-4d92-ad61-87321e1f12f9
00:30:51.800 --> 00:30:53.516
It seems like we're OK because

NOTE Confidence: 0.826689725217391

c4760642-ed6e-497e-99bc-a0e6152822dd
00:30:53.516 --> 00:30:55.060
we're actually copying into memory,

NOTE Confidence: 0.826689725217391

7f3783c3-2cd6-451c-9ec7-f26211145a23
00:30:55.060 --> 00:30:57.924
but this does have the flavor of a.

NOTE Confidence: 0.8985847725

52803146-709c-4820-be47-f7735bcd5b1d
00:31:00.060 --> 00:31:01.248
An algorithm that looks

NOTE Confidence: 0.8985847725

af3aa9ed-f002-4c92-a663-8eb109b28f10
00:31:01.248 --> 00:31:02.436
like it's general purpose,

NOTE Confidence: 0.8985847725

2557fc64-86f9-4511-8a54-aa0d298d6384
00:31:02.440 --> 00:31:05.116
but it has special case assumptions

NOTE Confidence: 0.8985847725

6e4c997c-f424-45ad-85f4-50ffd6c35887
00:31:05.116 --> 00:31:08.130
and I view that as hazardous.

NOTE Confidence: 0.8985847725

7210c99a-ebd7-40ca-ac82-f13b4908c66e
00:31:08.130 --> 00:31:09.930
I would be much more comfortable if this,

NOTE Confidence: 0.8985847725

da23a346-27a8-421f-bc0a-e7c0f4410bf1
00:31:09.930 --> 00:31:12.422
uh, some sort of you know, size, type.

NOTE Confidence: 0.8985847725

035835a4-83d6-48e1-a896-22df18755d6b
00:31:12.422 --> 00:31:15.646
If this is ever used, it doesn't even know

NOTE Confidence: 0.8985847725

09825e01-7937-4c22-9092-04989c56d4c2
00:31:15.646 --> 00:31:17.570
it has colors outside the copy family.

NOTE Confidence: 0.8985847725

c0d0851c-09c7-498e-b063-97bfdcd52997
00:31:17.570 --> 00:31:21.218
They happen to be within the vector family.

NOTE Confidence: 0.8985847725

f553bcdf-2f06-4623-9e55-4fc9da0c82b9
00:31:21.220 --> 00:31:24.612
But yeah, I think I think I want to

NOTE Confidence: 0.8985847725

c7f25997-43bc-4e52-9af1-35bf69a94688
00:31:24.612 --> 00:31:26.605
ask that there needs to be some sort

NOTE Confidence: 0.8985847725

02d9d788-541b-4cce-942c-56c898c74d0a
00:31:26.605 --> 00:31:28.191
of difference type and then it's

NOTE Confidence: 0.8985847725

5c5a20a3-02c6-4d87-a2f3-89eb04c23cf3
00:31:28.191 --> 00:31:29.976
when we call copy memory when that.

NOTE Confidence: 0.8985847725

b25134a0-5c09-435a-a83b-b53bf8748027
00:31:29.980 --> 00:31:31.189
At that point,

NOTE Confidence: 0.8985847725

a2e9cab3-f137-4447-a8ee-a917b5498dee
00:31:31.189 --> 00:31:34.335
we know that copy memmove and gets to

NOTE Confidence: 0.8985847725

5846432b-083b-411a-ab3c-682d605a69aa
00:31:34.335 --> 00:31:37.376
use size T because once we get this

NOTE Confidence: 0.8985847725

4a92307e-c66d-4d30-80f6-6f79106ac2e5
00:31:37.376 --> 00:31:40.056
handwritten type trait selling OK,

NOTE Confidence: 0.8985847725

2e54d4fc-d4ca-4134-9830-1425597af377
00:31:40.060 --> 00:31:41.140
telling us hey,

NOTE Confidence: 0.8985847725

078bdf6a-e740-4b84-b439-d66dff783309
00:31:41.140 --> 00:31:43.300
these iterators are really raw pointers,

NOTE Confidence: 0.8985847725

e413c3de-58d5-4dee-8faf-9fd15a92269f
00:31:43.300 --> 00:31:45.716
and the thing we point to is trivial.

NOTE Confidence: 0.8985847725

7e2c88ce-327d-40a3-a8f6-f7ce52b58816
00:31:45.720 --> 00:31:46.632
Everything's in memory.

NOTE Confidence: 0.8985847725

8b4d2c8a-d84c-4500-b310-3360d4064f78
00:31:46.632 --> 00:31:48.619
Have fun once we know it's in memory size,

NOTE Confidence: 0.8985847725

1f8e4643-44da-475c-98df-42d9930b2ba4
00:31:48.620 --> 00:31:49.547
it's totally appropriate.

NOTE Confidence: 0.8985847725

07bdb819-d344-456d-856c-7dd5203f2f39
00:31:49.547 --> 00:31:52.299
It's when we don't know stuff is in memory,

NOTE Confidence: 0.8985847725

c574916f-545b-489b-8b2d-7033b743a8b4
00:31:52.300 --> 00:31:55.402
we really should be working with

NOTE Confidence: 0.8985847725

5b80ebab-fe30-4cf7-a6b0-19224e528d5a
00:31:55.402 --> 00:31:57.470
the original arbitrary type.

NOTE Confidence: 0.8985847725

1e07eef3-e953-495d-954c-44d23d4b0c1d
00:31:57.470 --> 00:31:59.642
That or this should be prominently

NOTE Confidence: 0.8985847725

3e15adba-a3e9-43dd-b64b-082fdfbdd6ed
00:31:59.642 --> 00:32:00.728
commented saying hey,

NOTE Confidence: 0.8985847725

fb4decde-7784-4db6-896b-9141b692b9a8
00:32:00.730 --> 00:32:02.501
this is really size T what are

NOTE Confidence: 0.8985847725

e9a0e307-a8df-4bea-9135-5f77ca59a288
00:32:02.501 --> 00:32:03.909
you doing at a minimum,

NOTE Confidence: 0.8985847725

8473daea-eb52-447f-9bfb-ee29ebb632c0
00:32:03.910 --> 00:32:07.584
also compiler warnings,

NOTE Confidence: 0.8985847725

76922e37-f84b-4f54-8efa-752026a9ef76
00:32:07.584 --> 00:32:10.732
because we've dutifully converted

NOTE Confidence: 0.8985847725

604c7901-2ea7-4175-862d-23e61102e3d4
00:32:10.732 --> 00:32:13.322
within vector all of our stuff

NOTE Confidence: 0.8985847725

bc4fd293-b977-4ca5-aa6f-84722009224d
00:32:13.322 --> 00:32:14.587
to size under score type.

NOTE Confidence: 0.8985847725

491017b0-2052-47ae-9413-ade664498280
00:32:14.590 --> 00:32:16.382
But then here we just call it

NOTE Confidence: 0.8985847725

167b78e7-41c1-405d-94be-f324546d7b21
00:32:16.382 --> 00:32:17.990
implicitly and pass it to a size T.

NOTE Confidence: 0.8985847725

fe435e79-2b1a-428e-b631-9623bc8daad9
00:32:17.990 --> 00:32:21.084
So size T is tiny and size

NOTE Confidence: 0.8985847725

85b8c7a0-86fa-4bf4-a041-e3a7977e6ffd
00:32:21.084 --> 00:32:23.749
under score type is big like.

NOTE Confidence: 0.8985847725

4922009e-cd07-42e6-a54a-a52216473874
00:32:23.750 --> 00:32:25.575
Vector with an allocator or

NOTE Confidence: 0.8985847725

ff05b70f-358c-4f61-8397-b9c10c7416ac
00:32:25.575 --> 00:32:28.009
the 64 bit size type on X86.

NOTE Confidence: 0.8985847725

a7ead955-6982-4d9f-8218-41c25f0286c8
00:32:28.010 --> 00:32:28.706
Admittedly unusual.

NOTE Confidence: 0.8985847725

db2600d0-cf8b-4013-b832-e9ef8e3d8c46
00:32:28.706 --> 00:32:30.446
We get a compiler warning,

NOTE Confidence: 0.8985847725

017f651e-41f6-4f52-9d6c-3c08d3408747
00:32:30.450 --> 00:32:32.202
so I think from a compiler warning standpoint

NOTE Confidence: 0.8985847725

b41fbd63-4f61-42d9-9c1a-3fedf2489f54
00:32:32.202 --> 00:32:35.120
and a minimum, this needs to be changed.

NOTE Confidence: 0.8985847725

2d6a9596-1c7c-4782-9c9b-789601169249
00:32:35.120 --> 00:32:42.600
OK, so this is hard coded to take size T,

NOTE Confidence: 0.8985847725

4b820822-7b7a-4f52-b600-082984bbe46a
00:32:42.600 --> 00:32:46.500
But it's being called with.

NOTE Confidence: 0.8985847725

80d46dfa-3455-467a-9fb0-c39e967e76c6
00:32:46.500 --> 00:32:52.154
Or called by vector with a

NOTE Confidence: 0.8985847725

692bc658-6cbf-4b74-bd15-a85d094c3f9e
00:32:52.154 --> 00:32:54.302
potentially custom.

NOTE Confidence: 0.8985847725

fe15245e-4dc3-4156-ae98-4038a8239eb0
00:32:54.302 --> 00:33:00.746
Size type to avoid compiler warnings.

NOTE Confidence: 0.8985847725

811e7dab-dd17-4d9a-ac1a-e9478d3a1343
00:33:00.750 --> 00:33:03.159
At a minimum.

NOTE Confidence: 0.8985847725

61323f4c-9de2-44bf-9363-a4b8a0f2974a
00:33:03.160 --> 00:33:07.750
It seems that this should also.

NOTE Confidence: 0.8985847725

f995264f-47eb-4eb7-b06a-a7d71790d597
00:33:07.750 --> 00:33:11.730
Be generalized.

NOTE Confidence: 0.8985847725

a80fd7ea-eb9f-4f98-8b2d-82602429f7ab
00:33:11.730 --> 00:33:17.826
Not sure if size type the.

NOTE Confidence: 0.8985847725

4fff80f5-056a-4e4b-8e91-b998f3ba7f7b
00:33:17.830 --> 00:33:19.100
In its.

NOTE Confidence: 0.76629949625

6921d9c8-2b2f-406d-8d83-0243481dcf3a
00:33:21.150 --> 00:33:22.872
Difference type.

NOTE Confidence: 0.76629949625

f84d5ffd-c97b-4bea-acd6-d71dfcafaf80
00:33:22.872 --> 00:33:28.038
Etcetera is the most appropriate here.

NOTE Confidence: 0.76629949625

d552a8ec-b287-4b07-9aee-9b2d9da4a3a9
00:33:28.040 --> 00:33:29.600
Here I can just leave this to Casey

NOTE Confidence: 0.76629949625

972011d9-0017-4482-984c-e27a9c09c1a7
00:33:29.600 --> 00:33:31.113
because as it ranges expert he will

NOTE Confidence: 0.76629949625

ccb6d055-99c1-44f0-ab78-d350e43f2e6f
00:33:31.113 --> 00:33:32.783
know exactly which type he is and I

NOTE Confidence: 0.76629949625

96f3aef8-a364-4cf6-8a6f-d87d76b864b2
00:33:32.783 --> 00:33:34.317
don't have to think too hard about it.

NOTE Confidence: 0.76629949625

cb65e875-6bd8-4bfb-a07b-ba7d48d2995c
00:33:34.317 --> 00:33:36.630
For example, I know that C + + 17

NOTE Confidence: 0.76629949625

b8e56114-0b9d-4bf3-b63f-8c23bc4db7d9
00:33:36.699 --> 00:33:38.571
input writers don't necessarily

NOTE Confidence: 0.76629949625

bb68b75d-fcb8-4b18-aa4d-13defa21f31b
00:33:38.571 --> 00:33:42.280
have a different type. There you go,

NOTE Confidence: 0.76629949625

bbb8ec1f-0ed8-40ac-9270-fe9e4426d120
00:33:42.280 --> 00:33:43.920
so different type would be a bad choice.

NOTE Confidence: 0.76629949625

36a30b69-ee11-4ac0-9443-6ea0231159fd
00:33:43.920 --> 00:33:45.270
Yeah, arbitrary integer type is

NOTE Confidence: 0.76629949625

4e4fcbb2-4c42-4642-8f22-d977f9e404a4
00:33:45.270 --> 00:33:47.199
probably what we want to allow here,

NOTE Confidence: 0.76629949625

9563968a-d495-4799-ad85-3da077f77827
00:33:47.200 --> 00:33:50.146
and that would be just fine.

NOTE Confidence: 0.76629949625

49c49aea-1548-4b5f-93c3-f3b562cc2245
00:33:50.150 --> 00:33:54.510
To an arbitrary integer. Type. Yeah.

NOTE Confidence: 0.666029536956522

0678a2e6-f8fc-4f86-9eff-0f2ef2ed7418
00:33:56.720 --> 00:33:57.908
OK, this is hard coded takes

NOTE Confidence: 0.666029536956522

ce62e92b-0364-4ccb-99d9-98c9fcbda778
00:33:57.908 --> 00:33:59.544
ice T but it's being called by

NOTE Confidence: 0.666029536956522

f4148b04-4619-4208-981b-f81cf4c51a88
00:33:59.544 --> 00:34:00.859
vector with potential custom size

NOTE Confidence: 0.666029536956522

0d2b5184-bec5-4ff7-a22d-38fef1e3ec2f
00:34:00.859 --> 00:34:02.408
type to avoid prior warnings.

NOTE Confidence: 0.666029536956522

2cf34665-3974-4b78-a4de-72cb58975e21
00:34:02.410 --> 00:34:03.761
At a minimum it seems that this

NOTE Confidence: 0.666029536956522

97a5275c-0248-405a-9b15-1518d3c67262
00:34:03.761 --> 00:34:04.967
should also be generalized to

NOTE Confidence: 0.666029536956522

13ec8bda-6e6e-47b7-9b4d-8d68a333ef90
00:34:04.967 --> 00:34:06.119
an arbitrary integer type.

NOTE Confidence: 0.666029536956522

16893fb7-3802-499e-a9e5-c8aa0cab7df3
00:34:06.120 --> 00:34:09.850
I will add the note once we

NOTE Confidence: 0.666029536956522

24f71ad8-537b-4434-8e6f-cf6c2f8a4816
00:34:09.850 --> 00:34:15.410
determine that the MEM meow memmove

NOTE Confidence: 0.666029536956522

5b2f0284-896b-435d-843b-30e5c05ab71c
00:34:15.410 --> 00:34:19.070
optimization is applicable,

NOTE Confidence: 0.666029536956522

a0bb6876-47ae-4caf-b6ba-976d6d11cbe9
00:34:19.070 --> 00:34:24.934
it's safe to static cast to size T.

NOTE Confidence: 0.6557811

6d9b63bb-830f-4785-a986-0ad01d0212f8
00:34:27.150 --> 00:34:27.350
OK.

NOTE Confidence: 0.774927749090909

2d04b675-1b87-49e8-b408-11c575595ccb
00:34:29.430 --> 00:34:31.830
OK, so questioning every single identifier

NOTE Confidence: 0.774927749090909

3509b8b2-7953-444d-9063-e0dce41b4b5b
00:34:31.830 --> 00:34:35.908
we've got size 2 there. OK comment copy.

NOTE Confidence: 0.570357223066667

2825d1f4-2258-4040-b8e9-080214c50466
00:34:38.220 --> 00:34:40.852
Interesting how this is price copy under

NOTE Confidence: 0.570357223066667

3f730834-d2eb-40a4-b940-dd48e3ffeda4
00:34:40.852 --> 00:34:43.203
score first plus inclusive 0 count

NOTE Confidence: 0.570357223066667

4c0bd38a-8a85-440e-9b7b-c81f2c3fc45a
00:34:43.203 --> 00:34:45.884
exclusive to dust plus inclusive 0 count

NOTE Confidence: 0.570357223066667

6be222af-0231-4f8a-9d16-f5b2ee92a8e0
00:34:45.955 --> 00:34:48.451
exclusive returning dust plus count no

NOTE Confidence: 0.570357223066667

b01bd002-1fd5-49c9-9324-659df30b1d5f
00:34:48.451 --> 00:34:51.380
test callers outside the copy family.

NOTE Confidence: 0.570357223066667

947199ba-5596-4f0a-baa6-4ac5334c3dce
00:34:51.380 --> 00:34:55.160
OK, if constexpr it or copycat

NOTE Confidence: 0.570357223066667

32364f7f-8689-4e00-a14f-9024385ab0d0
00:34:55.160 --> 00:34:56.924
here is just utter because all we

NOTE Confidence: 0.570357223066667

56337539-8302-462c-a9ed-60bc994aade4
00:34:56.924 --> 00:34:58.600
have is in and out at bit.

NOTE Confidence: 0.570357223066667

e09f6053-3ac9-496c-a4cf-2527cd49ecfc
00:34:58.600 --> 00:35:01.200
Copy assignable.

NOTE Confidence: 0.570357223066667

fa949779-dbbb-4ee8-b775-fe2975a792ea
00:35:01.200 --> 00:35:02.784
Let me just check the argument order here.

NOTE Confidence: 0.570357223066667

65a73e93-18f7-410a-92d5-5d3316725b62
00:35:02.790 --> 00:35:04.128
I think that's right because it's

NOTE Confidence: 0.570357223066667

22074391-66e1-4bed-bd7b-f696a7bb8e6f
00:35:04.128 --> 00:35:06.330
copy pasted, but can't be too sure.

NOTE Confidence: 0.851965104285714

ac3e9901-bfee-405c-8748-e905f10131ef
00:35:08.660 --> 00:35:10.935
Yeah, we give it source and destination,

NOTE Confidence: 0.851965104285714

cf4ab479-10d6-4f31-be68-e5ff31c93f9a
00:35:10.940 --> 00:35:12.900
so that's good source is in it.

NOTE Confidence: 0.851965104285714

c2ff8a7f-aa1c-46b3-ae35-eb1decc41285
00:35:12.900 --> 00:35:15.826
Destinations out it if it's a bit

NOTE Confidence: 0.851965104285714

f1b67208-47b6-46e6-b396-60ec1f40ca83
00:35:15.826 --> 00:35:18.382
copy assignable then context for 20.

NOTE Confidence: 0.851965104285714

5c3db44f-f84f-4c87-8b1c-8e2645c8a1af
00:35:18.382 --> 00:35:20.986
If we're in has 620 mode.

NOTE Confidence: 0.851965104285714

8518fe1c-5f4e-4ddf-8ced-a9a755450604
00:35:20.990 --> 00:35:22.430
If we're not constant valuated,

NOTE Confidence: 0.851965104285714

ab3287f8-b785-4f54-a8f8-80ae74dd1bfa
00:35:22.430 --> 00:35:24.540
we can do cool thing.

NOTE Confidence: 0.851965104285714

b1fe9f61-799f-47de-aba0-793efdb1c664
00:35:24.540 --> 00:35:26.460
Umm yeah, this is the right.

NOTE Confidence: 0.851965104285714

3a538ade-a91f-4c1b-ab01-8021d62b35a4
00:35:26.460 --> 00:35:28.036
This is the right way to test it.

NOTE Confidence: 0.851965104285714

205608cb-a26e-40c9-b46e-c996d834b9fd
00:35:28.040 --> 00:35:30.536
We've got this sort of dance that we

NOTE Confidence: 0.851965104285714

21ab7bae-539f-4f28-9a3d-79af9cc036a2
00:35:30.536 --> 00:35:33.274
do that if we're eligible at all at

NOTE Confidence: 0.851965104285714

5f0387ad-86a3-4d45-8e8f-c73397ab5d82
00:35:33.274 --> 00:35:35.065
compile time for the optimization

NOTE Confidence: 0.851965104285714

bc00177c-4363-40fc-bc98-f3863d469845
00:35:35.065 --> 00:35:37.897
then we will see if we need to

NOTE Confidence: 0.851965104285714

0b3544f0-73ad-4092-8ecb-98b647f24fda
00:35:37.897 --> 00:35:39.199
defend against constant evaluation.

NOTE Confidence: 0.851965104285714

b3193cd4-f9a8-4e0e-93df-69be706627ea
00:35:39.199 --> 00:35:41.077
So in 20 mode this function

NOTE Confidence: 0.851965104285714

9704d747-b2cd-4427-b11c-fb6ac47ba0f9
00:35:41.077 --> 00:35:42.260
needs to be constexpr,

NOTE Confidence: 0.851965104285714

20019be3-0d58-4a39-b2cf-3e9f1b18c7fa
00:35:42.260 --> 00:35:44.500
so we will be able to call

NOTE Confidence: 0.851965104285714

d48d87e5-e99e-47db-b335-0631514f269a
00:35:44.500 --> 00:35:46.293
also constant evaluated and if

NOTE Confidence: 0.851965104285714

ccf0739c-51e8-4ce0-83f2-37b89a8c4703
00:35:46.293 --> 00:35:47.829
we're not constant evaluated,

NOTE Confidence: 0.851965104285714

17c4801a-676b-4192-a785-17ab466984a8
00:35:47.830 --> 00:35:52.597
meaning we're runtime, we can call memmove.

NOTE Confidence: 0.851965104285714

6c4ecac1-851a-4436-94bf-5f6d3e009107
00:35:52.600 --> 00:35:54.200
If we are constantly evaluated,

NOTE Confidence: 0.851965104285714

fd01c9db-58cd-4c99-ad4b-5908104efd06
00:35:54.200 --> 00:35:56.184
we'll skip over that and do the hand.

NOTE Confidence: 0.851965104285714

ef75bcde-67f4-486b-8ea0-e4364863b4c9
00:35:56.190 --> 00:35:56.976
The classic loop.

NOTE Confidence: 0.851965104285714

12d16883-b2b3-4c72-8eba-2e7e3b6a1422
00:35:56.976 --> 00:35:59.280
And if we're not in 20 mode at all,

NOTE Confidence: 0.851965104285714

bbc29904-7ecd-4429-9a02-cc353eafc2eb
00:35:59.280 --> 00:36:01.308
if we're 17 or below that,

NOTE Confidence: 0.851965104285714

af9b5069-20bf-4a67-8d3c-2ce5f43dd6a5
00:36:01.310 --> 00:36:02.814
we don't need to worry about being constexpr.

NOTE Confidence: 0.851965104285714

2ee1a1ef-1aa8-47c6-b24c-b5a63fbc3e5a
00:36:02.820 --> 00:36:04.180
We can just on conditioning call this thing.

NOTE Confidence: 0.851965104285714

0bfded5d-cd1f-433c-b702-61ea9ffb3737
00:36:04.180 --> 00:36:05.038
So this is the right order.

NOTE Confidence: 0.851965104285714

217d2d61-322c-45de-b0df-d375b4608ea3
00:36:05.040 --> 00:36:05.835
The right structure.

NOTE Confidence: 0.851965104285714

8403225d-5b4f-4265-a80e-6b2dc3c4620a
00:36:05.835 --> 00:36:07.160
We have this pattern elsewhere.

NOTE Confidence: 0.851965104285714

8e65cc2c-9d0f-42a8-bb33-54cc937e5fe7
00:36:07.160 --> 00:36:09.060
Otherwise, do the classic loop.

NOTE Confidence: 0.851965104285714

020eca18-b524-496a-b311-9c08f40fbe47
00:36:09.060 --> 00:36:11.252
We've got a void cast here to defend

NOTE Confidence: 0.851965104285714

fcf1e71a-9ad1-4f61-9468-6b7abdd9881e
00:36:11.252 --> 00:36:12.897
against overloaded commas on both sides.

NOTE Confidence: 0.851965104285714

c95aec5b-f9ab-4f8d-ac55-cf457f0e5bd1
00:36:12.900 --> 00:36:14.304
Yeah, that's all just copy paste

NOTE Confidence: 0.851965104285714

d21b1471-cb47-4047-b7d1-5762c48505cc
00:36:14.304 --> 00:36:15.240
from the original stuff,

NOTE Confidence: 0.851965104285714

7c211118-62eb-474c-a380-7ac592cffd96
00:36:15.240 --> 00:36:18.880
so that's all good. OK.

NOTE Confidence: 0.851965104285714

97163512-8131-40d9-8188-33771098dc6e
00:36:18.880 --> 00:36:23.984
Next up, so we've got a Sentinel copycat.

NOTE Confidence: 0.851965104285714

e1c8c78c-fbb3-4b09-90c4-646037eb6b2b
00:36:23.990 --> 00:36:24.896
This is BA.

NOTE Confidence: 0.851965104285714

72d4f55c-cd3d-4b53-a95e-7b5d8ff761b6
00:36:24.896 --> 00:36:27.236
This is the generalized form that is

NOTE Confidence: 0.851965104285714

0c74ac32-58de-430f-95c1-bb2acc3657c3
00:36:27.236 --> 00:36:29.714
implemented in terms of inter copycat

NOTE Confidence: 0.851965104285714

e2a775d2-9b2d-4dec-b5fc-5ec22b22105b
00:36:29.714 --> 00:36:32.380
but with extra spicy stuff here.

NOTE Confidence: 0.851965104285714

dd99bbdf-3a3f-451d-a748-a18937212961
00:36:32.380 --> 00:36:35.015
Template on class INIT class

NOTE Confidence: 0.851965104285714

2d07346b-cd7e-4785-ad1a-d48ab585456e
00:36:35.015 --> 00:36:37.684
Sentinel class outit using Sentinel

NOTE Confidence: 0.851965104285714

48ab327d-589e-43b9-bad6-0ef56d5d5bf6
00:36:37.684 --> 00:36:40.394
copy category is conditional T,

NOTE Confidence: 0.851965104285714

51dc5c14-cf9b-424d-a9d1-bc71aea9063b
00:36:40.400 --> 00:36:42.073
so we're going to ask a question

NOTE Confidence: 0.851965104285714

b163bc9a-0709-4bd6-b253-4b99607c7e92
00:36:42.073 --> 00:36:44.037
if we're in CPU Lib Concepts mode,

NOTE Confidence: 0.851965104285714

69622152-9a3d-4261-b241-45a486f045b6
00:36:44.040 --> 00:36:45.840
because this is unconditionally defined,

NOTE Confidence: 0.851965104285714

c0a3c8db-ac4a-4425-be51-258871769486
00:36:45.840 --> 00:36:47.478
but if we're in concepts mode,

NOTE Confidence: 0.851965104285714

7e664338-a80e-47b8-9bda-920eb9bc5d8d
00:36:47.480 --> 00:36:48.509
we're gonna ask.

NOTE Confidence: 0.851965104285714

ad4825b6-d956-48c9-aed1-44220f1e2063
00:36:48.509 --> 00:36:50.910
Is the Sentinel the same as the

NOTE Confidence: 0.851965104285714

ee879ff3-e91c-4a5b-bfff-f799da9824a3
00:36:50.988 --> 00:36:53.664
input iterator then? That's good.

NOTE Confidence: 0.851965104285714

bb39e57e-63e2-4a5d-a678-b1121bebc225
00:36:53.664 --> 00:36:55.896
We're we're potentially eligible.

NOTE Confidence: 0.851965104285714

121e5207-69bf-4a43-9687-7915bd5a61a6
00:36:55.900 --> 00:36:57.797
Or even if the Sentinel is not

NOTE Confidence: 0.851965104285714

e56aa5b4-0c1c-4157-99cf-5c790011d6eb
00:36:57.797 --> 00:36:59.908
the same as the input iterator.

NOTE Confidence: 0.851965104285714

df1006d6-4b61-4e20-bd87-750d909a8373
00:36:59.910 --> 00:37:02.406
If it's a sized Sentinel 4,

NOTE Confidence: 0.851965104285714

8c96a91d-af0f-4779-9ab3-6981c90c0d45
00:37:02.410 --> 00:37:04.769
then we can determine the size and

NOTE Confidence: 0.851965104285714

5bade3d5-597c-4c39-bd82-f980b0767636
00:37:04.769 --> 00:37:07.409
constant time and engage the optimization.

NOTE Confidence: 0.851965104285714

558623ac-49c8-47aa-aded-78d14fe1aded
00:37:07.410 --> 00:37:08.595
So that's what happens when

NOTE Confidence: 0.851965104285714

6ed18336-49c0-458e-8fec-f341f05303bb
00:37:08.595 --> 00:37:09.543
you have concept support.

NOTE Confidence: 0.851965104285714

de7b1540-d0b4-490e-9755-da12ac883bb9
00:37:09.550 --> 00:37:12.007
But if we don't have concept support,

NOTE Confidence: 0.851965104285714

2adabebe-f2d0-43c6-b2c4-d1bc921f39fd
00:37:12.010 --> 00:37:13.410
we can't detect high Sentinel,

NOTE Confidence: 0.851965104285714

f120fded-0f6a-47f7-b255-55bd651f440e
00:37:13.410 --> 00:37:15.482
so we can we have to restrict

NOTE Confidence: 0.851965104285714

e6dd9a9d-af59-4c67-ad5c-ce58417c3705
00:37:15.482 --> 00:37:17.487
ourselves to just the Sentinel being

NOTE Confidence: 0.851965104285714

5c083d4f-d05d-40f3-95dd-99b410447142
00:37:17.487 --> 00:37:19.587
the same as the input iterator.

NOTE Confidence: 0.851965104285714

c37aefba-8f0e-4ee8-8f42-dd42af176497
00:37:19.590 --> 00:37:20.910
Then we call it our copycat.

NOTE Confidence: 0.851965104285714

324898af-823a-46e9-9522-9dc6dca49ed4
00:37:20.910 --> 00:37:24.408
Otherwise it is. False, trivial cap.

NOTE Confidence: 0.851965104285714

8fe18198-acd7-402a-8ff4-434d5b4aa448
00:37:24.408 --> 00:37:25.446
What is this?

NOTE Confidence: 0.692215980833333

bd1f82ce-6848-4f77-9454-daa64e98c8ca
00:37:30.000 --> 00:37:31.631
OK, it says false for both big

NOTE Confidence: 0.692215980833333

75312741-e1f7-4c31-bff6-695e8b5d7b9f
00:37:31.631 --> 00:37:32.779
copy constructable and big copy.

NOTE Confidence: 0.692215980833333

6f709b69-8458-4a36-b3ea-4524c77c4006
00:37:32.780 --> 00:37:34.980
Assignable it's like double falls.

NOTE Confidence: 0.692215980833333

ddc332f3-2324-4721-a8b4-39d54dd5332d
00:37:34.980 --> 00:37:36.360
UM OK, so that seems good.

NOTE Confidence: 0.692215980833333

a2b769b9-e2ee-463e-bac7-6606eb3a9c60
00:37:36.360 --> 00:37:39.096
My one question is do we have to

NOTE Confidence: 0.692215980833333

8dee98fa-3e18-4832-ac97-a95f2e5cc47a
00:37:39.096 --> 00:37:41.225
worry because this is is same V is

NOTE Confidence: 0.692215980833333

9da85e6d-8794-4d7f-893a-3657126e21be
00:37:41.225 --> 00:37:43.537
same V as a standard type trait.

NOTE Confidence: 0.692215980833333

34d3485e-a589-4557-a812-43d6942cf6fe
00:37:43.540 --> 00:37:46.004
It is extremely specific, it only wants

NOTE Confidence: 0.692215980833333

7cc2148e-3009-46c5-8331-b0a8fed4dd7b
00:37:46.004 --> 00:37:48.560
the types to be exactly identical.

NOTE Confidence: 0.692215980833333

9a968a0f-4fa0-473c-9ee2-de35b61b4ea7
00:37:48.560 --> 00:37:52.310
It does not want any divergent CV qualifiers

NOTE Confidence: 0.692215980833333

a01473db-4f0e-4b7a-9b12-5041e43a8c1f
00:37:52.310 --> 00:37:55.640
or top level references or anything.

NOTE Confidence: 0.692215980833333

98179bf7-35d4-4260-a386-d6ff4c665bd3
00:37:55.640 --> 00:37:58.412
So if users of Inter copycat could

NOTE Confidence: 0.692215980833333

299808ad-828a-40c7-91fc-8051df8f96f3
00:37:58.412 --> 00:38:00.020
potentially be passing like.

NOTE Confidence: 0.692215980833333

62812576-7277-40b2-8da3-72b1d53d899c
00:38:00.020 --> 00:38:02.547
Constant the top of a constant iterators.

NOTE Confidence: 0.692215980833333

b8f0504a-b1a8-45a0-9b6e-031b350fae4c
00:38:02.550 --> 00:38:04.320
UM, if ITER copycat tolerated,

NOTE Confidence: 0.692215980833333

e3ddcdfe-1018-4a6a-bb7f-b867ee712f58
00:38:04.320 --> 00:38:07.280
that but Sentinel copycat doesn't,

NOTE Confidence: 0.692215980833333

16fd1704-2244-4f71-b535-acef58a0d85a
00:38:07.280 --> 00:38:08.570
then that would be an issue.

NOTE Confidence: 0.692215980833333

aec9ba96-52b1-4591-a8dd-3376fa188085
00:38:08.570 --> 00:38:11.920
So let me look at.

NOTE Confidence: 0.692215980833333

193e24a4-139c-4b30-8ce6-d81255e4b7f1
00:38:11.920 --> 00:38:13.300
Uses of it are copycat.

NOTE Confidence: 0.692215980833333

c296f546-17e0-432b-9f1c-d5d3aace1cbc
00:38:13.300 --> 00:38:16.996
I'm still with the branch checked out.

NOTE Confidence: 0.692215980833333

030181ad-51fd-4942-bc6d-4e9579f58817
00:38:17.000 --> 00:38:18.310
So, whoops.

NOTE Confidence: 0.818288425

57bbd285-721c-4105-804f-bb1919f20c18
00:38:21.010 --> 00:38:23.096
Here you first OK, we do usually

NOTE Confidence: 0.818288425

eb6dd86a-4bc7-45c1-9361-09e2ab23aff4
00:38:23.096 --> 00:38:25.450
call it with something modifiable,

NOTE Confidence: 0.818288425

8d715f22-7d0d-4158-adba-0fb0093af9d5
00:38:25.450 --> 00:38:26.808
but there is the potential for it

NOTE Confidence: 0.818288425

e3844698-e1e3-4e16-82b8-648aebfbcc61
00:38:26.808 --> 00:38:28.288
to be consequ qualified if we ever

NOTE Confidence: 0.818288425

020ed216-830c-41f9-bde8-7b9bc36dcece
00:38:28.288 --> 00:38:29.572
had a couple of accounts there.

NOTE Confidence: 0.833348023846154

1ed0ba8a-bfc4-484c-bc81-be89210cff59
00:38:32.230 --> 00:38:34.449
I'm just looking at usages first and

NOTE Confidence: 0.833348023846154

19733e28-1ef0-4d03-8f01-ccccb7a30c40
00:38:34.449 --> 00:38:36.888
I'll look at the actual definition.

NOTE Confidence: 0.833348023846154

fcf9756b-4785-4406-a753-7cce6f49a53a
00:38:36.890 --> 00:38:39.034
Definition of bitter copycat.

NOTE Confidence: 0.833348023846154

d82bfbb2-b3e6-4de4-92f5-a62bdea34b99
00:38:39.034 --> 00:38:41.714
Ask things like iterators or

NOTE Confidence: 0.833348023846154

8522f1f5-81a2-4315-b379-8831d7d1cd33
00:38:41.714 --> 00:38:43.960
contiguous iterator nonvolatile.

NOTE Confidence: 0.833348023846154

b871c703-8668-4e9f-bb9e-4542e33b5715
00:38:43.960 --> 00:38:46.140
It gets the value type.

NOTE Confidence: 0.833348023846154

f3307915-ed84-4455-a27f-0e2682a70cc9
00:38:46.140 --> 00:38:48.660
I think here. Do we remove?

NOTE Confidence: 0.833348023846154

37633f8c-b2ce-4fec-98ba-1a10aafb20a9
00:38:48.660 --> 00:38:51.486
Do we remove top all consonants?

NOTE Confidence: 0.833348023846154

d23e35e9-03ab-4a4d-a3c2-7281b90c7927
00:38:51.490 --> 00:38:52.828
This is something we always have

NOTE Confidence: 0.833348023846154

004d2c76-24d2-42e3-9c4e-61805004b5dd
00:38:52.828 --> 00:38:54.324
to worry about in our handwritten

NOTE Confidence: 0.833348023846154

a158134c-cf56-45d1-a950-683fa1619920
00:38:54.324 --> 00:38:55.986
type traits like do we care

NOTE Confidence: 0.833348023846154

21cc04c5-8c75-4f4b-9bbf-a0bd2aef1860
00:38:55.986 --> 00:38:56.899
about tobacconists or not?

NOTE Confidence: 0.723866756666667

8f87c16c-5b07-43a0-81f8-425c86056def
00:38:59.850 --> 00:39:03.565
Or is the definition of this? Here we go.

NOTE Confidence: 0.723866756666667

8c40fc58-4b5a-4f5e-a65f-c53f43833230
00:39:03.565 --> 00:39:05.940
We use inter value T and Constance mode.

NOTE Confidence: 0.723866756666667

9faf2c14-601e-4d61-a844-498edb863bc0
00:39:05.940 --> 00:39:07.590
Otherwise we ask iterator traits.

NOTE Confidence: 0.723866756666667

0586f939-a48a-4b16-ab08-43027a6a691b
00:39:07.590 --> 00:39:09.342
Iterator traits does have a specialization

NOTE Confidence: 0.723866756666667

034d708a-e76c-432e-b317-a32763df92c2
00:39:09.342 --> 00:39:11.320
that ignores top level cost as I recall.

NOTE Confidence: 0.769269090625

2ffb5608-f8e8-4757-986f-c32000faae76
00:39:16.210 --> 00:39:17.983
Have this code review is just you know me

NOTE Confidence: 0.769269090625

e08c5343-0a2c-4928-a3cc-a9cbe357e86f
00:39:17.983 --> 00:39:19.656
trying to remember how the standard works.

NOTE Confidence: 0.550489223333333

b82c9449-b91c-4916-97f4-d54429bb92de
00:39:21.790 --> 00:39:25.210
Her specializations it's for Tye star.

NOTE Confidence: 0.550489223333333

06a406c5-f130-46a6-8faa-254dd4b2844d
00:39:25.210 --> 00:39:28.129
Where's the one with whom we have

NOTE Confidence: 0.550489223333333

797cd278-973e-425f-8041-c911b74d6311
00:39:28.129 --> 00:39:31.200
the table of contents intercore.

NOTE Confidence: 0.550489223333333

33d00d08-d09e-4f2d-8ff5-688b87590754
00:39:31.200 --> 00:39:33.000
This is actually where we're

NOTE Confidence: 0.550489223333333

6029b940-c928-4fbf-b99c-aebc4e98c9dc
00:39:33.000 --> 00:39:34.800
implementing iterator traits are we

NOTE Confidence: 0.550489223333333

a705084e-b494-4360-900a-8863a71307a3
00:39:34.862 --> 00:39:36.890
not ignoring tuple of accounts here?

NOTE Confidence: 0.550489223333333

1f82da1d-16a8-486b-a944-71a60d7cd197
00:39:36.890 --> 00:39:40.387
Don't believe so. OK, so OK.

NOTE Confidence: 0.550489223333333

e51ecdc0-6f8c-4940-874e-6c5328eb616c
00:39:40.387 --> 00:39:42.721
So this really does it wants

NOTE Confidence: 0.550489223333333

900548d0-6e03-4c9a-af2b-775ca0b17477
00:39:42.721 --> 00:39:45.360
non constant qualified. OK.

NOTE Confidence: 0.801299086666667

97669394-f103-4a00-a1ad-0752ab60a824
00:39:48.370 --> 00:39:51.010
OK, so that indicates that UM,

NOTE Confidence: 0.801299086666667

195f79e4-dfa4-4040-b167-71a73a48e59e
00:39:51.010 --> 00:39:52.636
inter copycat does not really want

NOTE Confidence: 0.801299086666667

9b382357-23a1-4c00-9009-3c291685b58d
00:39:52.636 --> 00:39:54.970
to see top of a constant iterators.

NOTE Confidence: 0.801299086666667

45bebe1c-9772-4ec6-9727-c8ad2138e7b9
00:39:54.970 --> 00:39:56.426
It already would have a problem there,

NOTE Confidence: 0.801299086666667

8a96d4da-ed36-4dd6-a9f6-c5e6ce05b9fc
00:39:56.430 --> 00:39:58.146
so we don't need to worry

NOTE Confidence: 0.801299086666667

ce9c06dd-917a-40b2-9acb-e09797a32da5
00:39:58.146 --> 00:39:59.290
about the Sentinel copycat.

NOTE Confidence: 0.801299086666667

1a4b7417-a61b-4f2e-b61f-93ce7abd7f22
00:39:59.290 --> 00:40:00.282
OK, so that's good.

NOTE Confidence: 0.801299086666667

12d09719-17ea-4e28-8b9d-30de59e1a4c0
00:40:00.282 --> 00:40:02.110
Otherwise we're back to copy and check,

NOTE Confidence: 0.801299086666667

818178f3-cd8c-4fbb-a5a3-641595344228
00:40:02.110 --> 00:40:03.260
but this is being generalized.

NOTE Confidence: 0.801299086666667

007aecf2-0992-40a0-a70f-6fd9ac616e1b
00:40:03.260 --> 00:40:04.496
It used to insist on in.

NOTE Confidence: 0.801299086666667

d834388a-f83a-41d6-9e60-cb8806b0e916
00:40:04.500 --> 00:40:08.868
At last it's now taking a Sentinel.

NOTE Confidence: 0.801299086666667

599ec074-e604-4126-92a6-47354f1a878c
00:40:08.870 --> 00:40:10.400
The order of the template parameters

NOTE Confidence: 0.801299086666667

06308f25-26c6-4f9c-a8df-00f1f9d31735
00:40:10.400 --> 00:40:11.420
matches the function parameters,

NOTE Confidence: 0.801299086666667

bf133f46-4e9f-4fe5-aebc-9cf03c07d217
00:40:11.420 --> 00:40:13.220
which is good.

NOTE Confidence: 0.801299086666667

28ea83bc-6406-4265-8c0b-a5a37d99bd87
00:40:13.220 --> 00:40:15.900
OK here uh, let's make sure that

NOTE Confidence: 0.801299086666667

48a4ce74-188a-4e98-a6f2-1e1c0f446e99
00:40:15.900 --> 00:40:17.000
the comments are still valid.

NOTE Confidence: 0.801299086666667

79e26bdf-4faf-426a-b203-032fbc3e419b
00:40:17.000 --> 00:40:21.266
Copy first to last exclusive to desk dot OK,

NOTE Confidence: 0.801299086666667

7c225af9-81cd-4715-a976-ba360127c6cb
00:40:21.270 --> 00:40:23.398
use the Sentinel copycat.

NOTE Confidence: 0.801299086666667

ff792eb0-e054-4252-9fed-e131d36a9031
00:40:23.398 --> 00:40:26.680
Past the Sentinel OK?

NOTE Confidence: 0.801299086666667

6656db67-dc99-449f-ad6e-85feaac8d3b4
00:40:26.680 --> 00:40:29.670
Same that cost evaluate guard.

NOTE Confidence: 0.801299086666667

069e8956-0add-44df-9891-d9e1c682afbe
00:40:29.670 --> 00:40:32.400
And then if we're in concepts mode.

NOTE Confidence: 0.931288688

848dde1e-fa09-42d5-89e3-9f10224ac475
00:40:35.530 --> 00:40:37.710
We need to additionally require.

NOTE Confidence: 0.78016396

2e58797b-c14e-41d2-84f1-ce1c3999b5e9
00:40:40.420 --> 00:40:42.400
That in it be the same as the Sentinel,

NOTE Confidence: 0.78016396

b9cd7665-4fc8-4fe4-a7f2-8246bd004f81
00:40:42.400 --> 00:40:44.350
because it could just be

NOTE Confidence: 0.78016396

7083df93-5d16-4a33-829e-270eecafb688
00:40:44.350 --> 00:40:46.300
that it's a size Sentinel.

NOTE Confidence: 0.78016396

715c91e9-47b0-4140-81e6-6f9acce4f023
00:40:46.300 --> 00:40:48.435
But if we're in no concepts mode,

NOTE Confidence: 0.78016396

f8e7554b-8263-4b27-a31b-1c19c7279881
00:40:48.440 --> 00:40:49.832
then the only way we could have gotten

NOTE Confidence: 0.78016396

22cdad7f-05ba-4753-af82-94bc3e647a42
00:40:49.832 --> 00:40:51.139
here is for them to be the same.

NOTE Confidence: 0.78016396

2edad1c7-b01d-47d8-9320-0dea85d4a1b1
00:40:51.140 --> 00:40:52.436
We may as well as still

NOTE Confidence: 0.78016396

a7a8d6ec-511e-4231-9664-615adf77b438
00:40:52.436 --> 00:40:53.300
internal static assert that.

NOTE Confidence: 0.732082571666667

8525a789-ad93-462f-b87d-968b1f6a8fef
00:41:02.000 --> 00:41:04.070
Otherwise, I see if your signal

NOTE Confidence: 0.732082571666667

1d03f878-4fcf-4b3f-b5e5-5f6f7818c8ca
00:41:04.070 --> 00:41:06.199
you dispatch to the other one.

NOTE Confidence: 0.732082571666667

d538dbdb-19d1-44c6-b711-4dc38ea697c3
00:41:06.200 --> 00:41:10.105
OK. This is really trying to

NOTE Confidence: 0.732082571666667

bc3e5c42-b40d-407a-9b2c-429a1865806f
00:41:10.105 --> 00:41:11.597
avoid repeating copy memo,

NOTE Confidence: 0.732082571666667

5a5191e6-38bf-414b-aa5f-232e1a5052b4
00:41:11.600 --> 00:41:13.637
but it jumps in and out of

NOTE Confidence: 0.732082571666667

f7f418e1-1cc8-4e8a-84b1-45c53cda4f47
00:41:13.637 --> 00:41:15.139
concepts checks here and here.

NOTE Confidence: 0.732082571666667

1c7577e3-0067-41c4-80a9-e2beea1446dd
00:41:15.140 --> 00:41:17.006
It's all confusing, but it's OK.

NOTE Confidence: 0.7019420404

af1f01c0-8c7c-481d-b906-6a62394faa15
00:41:20.790 --> 00:41:21.978
Otherwise people have concepts.

NOTE Confidence: 0.7019420404

510a5d11-76eb-413f-88bc-c9faa1f1c772
00:41:21.978 --> 00:41:23.760
The only way to get here

NOTE Confidence: 0.7019420404

8ee10a11-a0d9-413d-8904-6034c55558d6
00:41:23.821 --> 00:41:25.306
should really be Sentinel 4.

NOTE Confidence: 0.7019420404

8515defe-0049-47e5-99d7-b90841e17f41
00:41:25.310 --> 00:41:28.550
Then we can do the copy and move in.

NOTE Confidence: 0.7019420404

a5fdf2af-555b-4ff7-8e86-7493024d5b58
00:41:28.550 --> 00:41:29.522
OK with first.

NOTE Confidence: 0.7019420404

ee31e579-7feb-43e9-86e7-7bbe0c33ac72
00:41:29.522 --> 00:41:31.790
Last minus first here static cast size

NOTE Confidence: 0.7019420404

070ed8ba-c81d-4ca6-80d7-00bfdbd6285a
00:41:31.860 --> 00:41:34.247
is fine because we know we're eligible.

NOTE Confidence: 0.7019420404

b52c6be2-d2ba-4062-9c7c-04fd82ebfc6c
00:41:34.250 --> 00:41:39.102
And then dust. OK. That's fine.

NOTE Confidence: 0.7019420404

50cab32c-e508-4794-9450-37a3f3ddbaba
00:41:39.102 --> 00:41:41.550
Is there any better way to do this?

NOTE Confidence: 0.7019420404

699a1586-070f-42b1-88e9-f429e3948f72
00:41:41.550 --> 00:41:42.526
I don't see one.

NOTE Confidence: 0.7019420404

5658ed10-bebc-45b8-a4a0-4976b2e3079c
00:41:42.526 --> 00:41:43.746
Do we need this first?

NOTE Confidence: 0.7019420404

007fd029-2791-486c-b0d7-89f06d3e7ba5
00:41:43.750 --> 00:41:44.866
Static assert here.

NOTE Confidence: 0.7019420404

24e88f13-e978-4932-bf4d-d3e4b4bfec08
00:41:44.866 --> 00:41:46.726
This one here we're static

NOTE Confidence: 0.7019420404

3a2404a7-2175-4538-bbfc-d36335d24a38
00:41:46.726 --> 00:41:50.560
starting with the same type, but.

NOTE Confidence: 0.7019420404

25a44456-f3b1-4406-89de-5183336094f7
00:41:50.560 --> 00:41:54.313
Synt copycat I don't think we could get here.

NOTE Confidence: 0.7019420404

fa066e8f-f13a-4fba-838a-0d4184574072
00:41:54.320 --> 00:41:56.928
We couldn't get through sent copycat if they

NOTE Confidence: 0.7019420404

4be9fb33-8ec7-4f9a-afec-1139b392991d
00:41:56.928 --> 00:41:59.139
were different types in non concepts mode.

NOTE Confidence: 0.7019420404

ca830e84-94c5-4792-af42-7a690733defb
00:41:59.140 --> 00:42:02.730
Right, what about Sentinel 4?

NOTE Confidence: 0.7019420404

489a129b-f767-466c-8d09-d9e9dfcea59b
00:42:02.730 --> 00:42:04.950
In non concepts mode right?

NOTE Confidence: 0.7019420404

59b8c7be-2dea-47bb-bfb2-2037c6aaec63
00:42:04.950 --> 00:42:08.158
This is non concepts.

NOTE Confidence: 0.7019420404

d3d76320-7186-4d61-b736-ea264f4bee66
00:42:08.160 --> 00:42:10.428
You would concept is not defined.

NOTE Confidence: 0.7019420404

65716e2c-6d79-48cd-952b-1d8eff2696cb
00:42:10.430 --> 00:42:15.319
Yeah. Have similar concepts.

NOTE Confidence: 0.7019420404

37aefdfa-d736-4e95-98df-97e986c62121
00:42:15.320 --> 00:42:18.000
Not to find additional if there are different

NOTE Confidence: 0.7019420404

d8c51f0e-e5ac-411f-b7a1-cfb07d705210
00:42:18.000 --> 00:42:20.468
types that conditional is going to pick,

NOTE Confidence: 0.7019420404

21c5abbc-9d7a-47aa-966e-ec73657e05f5
00:42:20.470 --> 00:42:21.635
the false type is going

NOTE Confidence: 0.7019420404

a27a95e6-20e9-49b6-8eca-a0acefb2a04b
00:42:21.635 --> 00:42:22.800
to pick false trivial cat,

NOTE Confidence: 0.7019420404

d987b5b3-8b75-45fd-9e80-a6adaec220ca
00:42:22.800 --> 00:42:24.340
in which case bit copy

NOTE Confidence: 0.7019420404

42cb9fc2-dbf2-4e01-834f-20b8d462e566
00:42:24.340 --> 00:42:25.572
assignable will be false.

NOTE Confidence: 0.7019420404

103255f9-8cb0-4f27-84f4-2034897bdc38
00:42:25.580 --> 00:42:27.878
So this static assert cannot fail.

NOTE Confidence: 0.7019420404

7494d19c-bcb5-4ebe-9faa-50739fbff267
00:42:27.880 --> 00:42:30.250
It's completely redundant.

NOTE Confidence: 0.7019420404

6cf38e4b-8260-438b-9a04-4b9d9e1bf396
00:42:30.250 --> 00:42:31.826
Yeah, well, I mean that that's what that's

NOTE Confidence: 0.7019420404

7a404341-9db6-4079-819b-ea8d6478fc73
00:42:31.826 --> 00:42:33.308
what the internal static series for,

NOTE Confidence: 0.7019420404

ed4917fa-b0ac-4da3-b257-74878a28bc05
00:42:33.310 --> 00:42:35.166
because this one is also redundant in theory,

NOTE Confidence: 0.7019420404

b39b8a82-2926-4cc8-81fa-2f57325c41d1
00:42:35.170 --> 00:42:35.863
right?

NOTE Confidence: 0.7019420404

39a9411e-3629-4c4f-bdaa-3d5b9739f317
00:42:35.863 --> 00:42:39.328
Fair enough, yeah, so now.

NOTE Confidence: 0.7019420404

ccf11cbf-979a-43c0-80ef-958478000477
00:42:39.330 --> 00:42:40.179
The thing is,

NOTE Confidence: 0.7019420404

2cfa6ab1-8793-44ff-b479-27939bb59bc4
00:42:40.179 --> 00:42:41.877
it does complicate the flow here

NOTE Confidence: 0.7019420404

6c248b67-0213-4aca-ae8d-bd9ee7aecc3f
00:42:41.877 --> 00:42:43.467
because you need the whole else.

NOTE Confidence: 0.7019420404

a1239bb4-b409-4e22-8865-56626e90c941
00:42:43.470 --> 00:42:46.102
I'm not sure if I'm I'm not

NOTE Confidence: 0.7019420404

d9d49f04-4d93-49e4-9aba-2040ae9321bf
00:42:46.102 --> 00:42:48.648
sure if it's worth it like.

NOTE Confidence: 0.7019420404

b6975c43-e35e-4aab-ab94-5987d1179d29
00:42:48.650 --> 00:42:49.950
This probably made sense

NOTE Confidence: 0.7019420404

ba38dccc-9bdb-4bc0-b9b1-77ebd9547c0c
00:42:49.950 --> 00:42:51.250
while I was developing,

NOTE Confidence: 0.7019420404

322c0b54-d3b7-440a-9645-a3a361a8504f
00:42:51.250 --> 00:42:54.958
but I don't really want to check that in.

NOTE Confidence: 0.7019420404

80a64787-cd00-4245-be68-ae5215cae4f2
00:42:54.960 --> 00:42:55.224
Yeah,

NOTE Confidence: 0.7019420404

babe7a9c-1a4e-4c8d-8ca8-bf212142c46e
00:42:55.224 --> 00:42:55.488
yeah,

NOTE Confidence: 0.7019420404

4cde8aef-2ec4-4ff6-9dc1-8d2e24bec973
00:42:55.488 --> 00:42:57.336
mostly because I mean we we do

NOTE Confidence: 0.7019420404

5ab93b55-e54e-42a7-b0ae-7cc347fd8f73
00:42:57.336 --> 00:42:58.788
semester internal static certs.

NOTE Confidence: 0.7019420404

566e914b-3ff1-4488-b665-cfb8ae89be23
00:42:58.790 --> 00:43:01.260
That's good when verifying connections

NOTE Confidence: 0.7019420404

8fb30d0d-5fba-465f-8935-d3039a880f1a
00:43:01.260 --> 00:43:03.236
between like farflung code.

NOTE Confidence: 0.7019420404

665094b5-3e92-4c9e-b1c8-bffe8c9e0695
00:43:03.240 --> 00:43:05.172
In this case you're just sort

NOTE Confidence: 0.7019420404

894fc5f8-8a37-4826-b758-20d9b765a9bd
00:43:05.172 --> 00:43:06.930
of verifying the trait that

NOTE Confidence: 0.7019420404

71ea52fa-e67b-4217-ba37-14249dfadee9
00:43:06.930 --> 00:43:08.510
you defined immediately above.

NOTE Confidence: 0.80424214

3f289c5f-ea42-4b5e-88a8-deb1a4ce694a
00:43:10.690 --> 00:43:12.148
I don't. I think that actually

NOTE Confidence: 0.80424214

14e16794-69c7-4bb4-bf1d-4aace766143f
00:43:12.148 --> 00:43:13.790
harms clarity, and I think this one

NOTE Confidence: 0.80424214

ccf1792b-c6fb-43f7-b9b2-c7f05c51ae0b
00:43:13.790 --> 00:43:14.940
probably is not necessary either.

NOTE Confidence: 0.90798989125

d9d35862-e9dc-4eb6-9d4a-c9e506cda8d9
00:43:17.640 --> 00:43:19.648
And then this would be easier to read.

NOTE Confidence: 0.673837611818182

1901a76e-b666-4fc2-b1fc-23bac0a7f3ea
00:43:24.550 --> 00:43:26.236
Yeah, because we wouldn't need to

NOTE Confidence: 0.673837611818182

285dd49e-51c0-44d7-aa35-cd2b8e881c8b
00:43:26.236 --> 00:43:27.650
think there's no concepts case.

NOTE Confidence: 0.673837611818182

cb3d0ec7-a846-4aa2-ae53-94a8f118a60a
00:43:27.650 --> 00:43:30.296
Yeah, but I think this would be much more

NOTE Confidence: 0.673837611818182

83698111-15b3-448b-a3e5-ff94817b64ff
00:43:30.296 --> 00:43:32.300
readable without the internal source.

NOTE Confidence: 0.673837611818182

f65a5dbd-6cdb-43c8-b6a3-8a3316c6591d
00:43:32.300 --> 00:43:34.792
OK, so sure you have one comment

NOTE Confidence: 0.673837611818182

36499557-d792-4ce0-b05f-a2bf6fcfe416
00:43:34.792 --> 00:43:36.509
that extends both of them.

NOTE Confidence: 0.673837611818182

973e0ad2-6f3f-4c31-a0cb-0116343a8dab
00:43:36.510 --> 00:43:38.386
Sure I can. I can do that.

NOTE Confidence: 0.4388319482

6bb0d3d4-ab97-43e2-8bd2-76c98c81154e
00:43:42.000 --> 00:43:47.260
The external static certs here.

NOTE Confidence: 0.4388319482

9491872d-ec1d-47b2-940f-457312a78103
00:43:47.260 --> 00:43:52.756
Don't seem to be especially valuable.

NOTE Confidence: 0.4388319482

839df6d8-ba7f-4152-9d30-30b4fc6d9f91
00:43:52.760 --> 00:44:00.656
UM, as? There related to the type trait.

NOTE Confidence: 0.4388319482

d97a36fc-9443-488c-a82b-c5c62612003c
00:44:00.660 --> 00:44:03.410
That's the internal type trait.

NOTE Confidence: 0.69099025

9e1f296f-af5c-4ef0-ab5a-ab78860314a4
00:44:05.530 --> 00:44:11.158
That's defined immediately above.

NOTE Confidence: 0.69099025

c720b5cf-fbbd-441e-b81b-9a39a02d0550
00:44:11.160 --> 00:44:14.013
Eliminating them would.

NOTE Confidence: 0.69099025

3be288de-18ba-473e-98f4-eae04550a7f2
00:44:14.013 --> 00:44:17.817
Improve the readability of

NOTE Confidence: 0.69099025

13601cfe-bfd0-488b-8a94-4fe716fed942
00:44:17.817 --> 00:44:23.020
this code with no significant.

NOTE Confidence: 0.69099025

686a5f0e-1769-409a-8f00-f64e9bf04513
00:44:23.020 --> 00:44:26.387
Law or no significant potential for danger.

NOTE Confidence: 0.597335116909091

1e855b75-9151-410f-89ae-2b179fa8b7c9
00:44:30.150 --> 00:44:31.230
They asked internist. Experts here

NOTE Confidence: 0.597335116909091

9efe8285-da7c-46b9-81dc-2b8f4a94f31c
00:44:31.230 --> 00:44:32.660
don't seem to be especially valuable,

NOTE Confidence: 0.597335116909091

a6c03be9-2c73-4fa8-bec1-271eb3c6b909
00:44:32.660 --> 00:44:34.116
as they're related to the internal type

NOTE Confidence: 0.597335116909091

7d1ac5b9-8132-4090-87f3-ea1ef8da2c9d
00:44:34.116 --> 00:44:35.400
trait that's defined immediately above.

NOTE Confidence: 0.597335116909091

a402c715-600d-4224-90bc-8e8f2376cece
00:44:35.400 --> 00:44:36.800
Limiting them would improve the

NOTE Confidence: 0.597335116909091

30900a99-9b0c-4c2a-a781-72fc7a060ab4
00:44:36.800 --> 00:44:38.584
readability of this code with no

NOTE Confidence: 0.597335116909091

f94a8f7c-cb65-42f1-89de-b32c5466b324
00:44:38.584 --> 00:44:39.908
significant potential for danger.

NOTE Confidence: 0.597335116909091

d452f954-5282-4c31-a435-b5a30209c871
00:44:39.910 --> 00:44:42.172
So background here is that this

NOTE Confidence: 0.597335116909091

901908f2-83df-493b-9385-fe3d053ad6a3
00:44:42.172 --> 00:44:44.605
highly ugly macro is defined only

NOTE Confidence: 0.597335116909091

d6bf66e5-9fa6-4d47-bdf6-99c1f4258bc8
00:44:44.605 --> 00:44:46.730
for our internal test suite.

NOTE Confidence: 0.597335116909091

9fba2f02-c7cf-4360-b391-ba9476c838e7
00:44:46.730 --> 00:44:49.450
The idea here is that if we want to static

NOTE Confidence: 0.597335116909091

4d49280e-74cd-43e8-affa-6b657bbc9438
00:44:49.520 --> 00:44:52.046
assert something for our purposes only,

NOTE Confidence: 0.597335116909091

01e7b7f4-f7bc-4d3c-8de1-4b9ac842d990
00:44:52.050 --> 00:44:54.325
saying that if we got this wrong,

NOTE Confidence: 0.597335116909091

44c0d2be-7572-4285-91e8-7d83961580bc
00:44:54.330 --> 00:44:57.106
it's a logic error in the STL itself.

NOTE Confidence: 0.597335116909091

89bcdb53-303e-4147-afbb-de558067cd1f
00:44:57.110 --> 00:44:59.606
This should never happen, because STL.

NOTE Confidence: 0.597335116909091

a0f2a3f5-3782-4fd8-bb05-e33c865651fd
00:44:59.610 --> 00:45:01.350
Umm, implementers are awesome and our

NOTE Confidence: 0.597335116909091

f2719811-c7bd-44f6-a6fd-e3b6a0c71b61
00:45:01.350 --> 00:45:03.179
code is highly reviewed and we never,

NOTE Confidence: 0.597335116909091

7b4127a8-ee45-4760-8826-47bf8766da1d
00:45:03.180 --> 00:45:04.092
ever make bugs.

NOTE Confidence: 0.597335116909091

be9e2758-5152-4eaa-b9ba-2175797986d8
00:45:04.092 --> 00:45:06.630
But in the rare event that it does,

NOTE Confidence: 0.597335116909091

6ebde89e-4ce3-4799-8c33-bf180e63f248
00:45:06.630 --> 00:45:08.128
we would like to test that only

NOTE Confidence: 0.597335116909091

3f03338a-81e8-4539-a675-b5c6230f61fd
00:45:08.128 --> 00:45:09.320
in our internal test suite.

NOTE Confidence: 0.597335116909091

48789e16-e1e0-4f63-a392-f2f07353c167
00:45:09.320 --> 00:45:09.954
It should.

NOTE Confidence: 0.597335116909091

913e2b9a-65a7-4f1f-bff1-9afe7aa22f68
00:45:09.954 --> 00:45:11.856
Preprocess away to nothing for users

NOTE Confidence: 0.597335116909091

f7a5db15-04d8-4d1d-8e7b-70fc7f77f106
00:45:11.856 --> 00:45:14.188
because we don't want to spend extra

NOTE Confidence: 0.597335116909091

57ff6ce2-0df2-4613-9be0-1ab4fcb2d884
00:45:14.188 --> 00:45:15.828
throughput time verifying all this

NOTE Confidence: 0.597335116909091

f126257b-b6af-4acc-a235-0a5188f10baa
00:45:15.885 --> 00:45:17.685
stuff that should always be true,

NOTE Confidence: 0.597335116909091

9ec715c6-6521-4a9f-87ef-870c7fcb6b0d
00:45:17.690 --> 00:45:19.420
so that's what the still

NOTE Confidence: 0.597335116909091

e56e1857-dce6-4dcf-a80c-895d033ebdf5
00:45:19.420 --> 00:45:20.804
internal static assert does,

NOTE Confidence: 0.597335116909091

d56e90aa-d4ab-48c7-883f-ea8fec310563
00:45:20.810 --> 00:45:24.065
and there's a place in our machinery.

NOTE Confidence: 0.597335116909091

04f5c0c2-68dc-4a17-af17-466dfd151da1
00:45:24.070 --> 00:45:26.686
This thing expands to Stack Cert only when

NOTE Confidence: 0.597335116909091

6cf9b9e6-eed4-4214-969e-a52f39e10db4
00:45:26.686 --> 00:45:29.008
enable STL internal check is defined,

NOTE Confidence: 0.597335116909091

2d866803-2ccf-4fb3-b6c8-a10bc438d259
00:45:29.010 --> 00:45:32.538
and this is defined only for our test suite.

NOTE Confidence: 0.597335116909091

615fdad7-ce31-4a68-9e96-70bce092c5f1
00:45:32.540 --> 00:45:34.745
Somewhere we have that where do we do this?

NOTE Confidence: 0.597335116909091

54247f35-5b18-4176-abf5-c06016a82dbf
00:45:34.750 --> 00:45:37.648
It's probably not whole board slash D.

NOTE Confidence: 0.597335116909091

e11c7202-55c9-477f-b69c-cdc1392c3d55
00:45:37.650 --> 00:45:38.952
Here we go.

NOTE Confidence: 0.597335116909091

c2e1635f-7270-4d71-b679-68b996d225a7
00:45:38.952 --> 00:45:41.990
In our tests we have a compiler.

NOTE Confidence: 0.597335116909091

15304cc8-9bfe-437a-8f6a-92aea4fd481f
00:45:41.990 --> 00:45:44.170
Uh, set of compiler options,

NOTE Confidence: 0.597335116909091

b5f84cf2-3133-4a7e-a65b-d3caddd1ca23
00:45:44.170 --> 00:45:46.850
and we define enable STL internal check for

NOTE Confidence: 0.597335116909091

c872d66a-5bb2-40aa-a2ef-4fd308f27f7f
00:45:46.850 --> 00:45:49.647
our test only everybody else not defined,

NOTE Confidence: 0.597335116909091

f9bd2deb-26bd-4853-9446-30ac159a7083
00:45:49.650 --> 00:45:51.930
so it expands to nothing.

NOTE Confidence: 0.597335116909091

8e599692-a101-41a3-900b-71392b30725c
00:45:51.930 --> 00:45:52.446
Uhm?

NOTE Confidence: 0.597335116909091

38bf774b-0a98-438c-b70f-c930cdbf2ded
00:45:52.446 --> 00:45:54.510
Because we're not asserting

NOTE Confidence: 0.597335116909091

2ffb23c3-7695-4719-8dc6-e096bae4f62b
00:45:54.510 --> 00:45:57.090
anything about the users code,

NOTE Confidence: 0.597335116909091

3446b92a-fe65-43a0-83ee-eec6eafb904d
00:45:57.090 --> 00:45:57.870
it's purely internal.

NOTE Confidence: 0.597335116909091

6c181489-5e64-42d2-90c9-4d56e1046290
00:45:57.870 --> 00:45:58.390
So yeah,

NOTE Confidence: 0.597335116909091

f7a6e39d-8841-4f10-bc8b-4cdc562ac0a2
00:45:58.390 --> 00:45:59.476
I think we can drop that.

NOTE Confidence: 0.709555032142857

fb67a78c-3b21-4a78-9492-fa50a0a9b157
00:46:02.140 --> 00:46:05.188
OK, so if they are for

NOTE Confidence: 0.709555032142857

e8ae9695-437d-42c8-80aa-a41a714d5ce8
00:46:05.188 --> 00:46:07.068
concepts, if it's the same.

NOTE Confidence: 0.9502189

ee29b3d3-d727-43dd-8144-aa9fff051fe9
00:46:12.920 --> 00:46:16.056
OK and then. If they're the

NOTE Confidence: 0.9502189

47d3464f-be8c-4ef6-8862-5587b114c573
00:46:16.056 --> 00:46:17.628
same I'm I'm trying to think

NOTE Confidence: 0.9502189

5759d1b2-6436-4db9-83e2-0dbfcac44b3f
00:46:17.628 --> 00:46:19.310
what happens if both are true.

NOTE Confidence: 0.9502189

0a57bbfe-d6f7-4f96-8470-02110da0713e
00:46:19.310 --> 00:46:20.920
If the types are the same and

NOTE Confidence: 0.9502189

a4e871cf-6d2f-4138-9791-9f4241b4bd82
00:46:20.920 --> 00:46:22.658
the and it's the size Sentinel,

NOTE Confidence: 0.9502189

a5e87622-8fac-44b6-9deb-f370c78c0d84
00:46:22.660 --> 00:46:23.948
well that's that's always going to be

NOTE Confidence: 0.9502189

30c122c2-765c-4cf8-8f4e-d53d4ca2a352
00:46:23.948 --> 00:46:25.672
the case, because if you're eligible,

NOTE Confidence: 0.9502189

e92a3cb7-0aee-40ad-990e-74308e1b3f2d
00:46:25.672 --> 00:46:27.024
you're like contiguous iterator,

NOTE Confidence: 0.9502189

1d6f101c-919c-4995-9c20-156cb5fe3da8
00:46:27.030 --> 00:46:30.278
so it had better be a size Sentinel.

NOTE Confidence: 0.9502189

5c230f18-c5ee-4f0d-ad71-2eb9cc470c0e
00:46:30.280 --> 00:46:32.990
Refer the copy memmove 1.

NOTE Confidence: 0.9502189

17947144-7b9a-4e99-bbf5-c8f11f3bdc88
00:46:32.990 --> 00:46:37.208
Because we gotta subtract anyways and.

NOTE Confidence: 0.9502189

555a3b90-25b1-4428-a4e1-41e62f5bbc8f
00:46:37.210 --> 00:46:39.694
This one is better when between

NOTE Confidence: 0.9502189

d8f0db25-5b9f-4f16-bd8f-21df907d2818
00:46:39.694 --> 00:46:40.936
the two forms,

NOTE Confidence: 0.9502189

7eba250c-60b0-49c6-954c-6422965d3b41
00:46:40.940 --> 00:46:43.208
because this can subtract byte pointers,

NOTE Confidence: 0.9502189

5ff243e9-689a-4891-a03a-4a9092ca5a54
00:46:43.210 --> 00:46:45.830
so it doesn't do that.

NOTE Confidence: 0.9502189

f20329f7-af5c-4690-9a91-ea2892111c0c
00:46:45.830 --> 00:46:47.735
Vision we're entire division by

NOTE Confidence: 0.9502189

517aee16-903b-4a4f-a5bc-5859ea006088
00:46:47.735 --> 00:46:49.259
constant and then multiplication,

NOTE Confidence: 0.9502189

174f3c44-10b3-48dc-953e-be95a09d63e9
00:46:49.260 --> 00:46:51.336
whereas if we have Sentinel 4,

NOTE Confidence: 0.9502189

21cdbf8d-018f-4617-8271-c0162530d5c1
00:46:51.340 --> 00:46:53.632
this one does have to potentially

NOTE Confidence: 0.9502189

6a8f9c21-9cdf-4473-8886-88adc69c743e
00:46:53.632 --> 00:46:55.160
do that pointer arithmetic,

NOTE Confidence: 0.9502189

7cfe99e2-06f9-4b6d-bf2d-d6b710ced8fd
00:46:55.160 --> 00:46:57.600
so it is proper to prefer this one.

NOTE Confidence: 0.9502189

c7d6832e-f92e-4564-a790-d69f15e4920a
00:46:57.600 --> 00:46:59.979
So I like.

NOTE Confidence: 0.9502189

8b0aa3ad-aef5-442a-896a-6d6d1881eeba
00:46:59.980 --> 00:47:00.552
OK yeah,

NOTE Confidence: 0.9502189

5ea513f9-21b6-4a02-95ab-5d6a44623d70
00:47:00.552 --> 00:47:02.840
whenever I see control flow I'm like OK.

NOTE Confidence: 0.9502189

c93e6fbe-28c5-4d7b-b192-0437c4d86cd7
00:47:02.840 --> 00:47:05.944
What happens if both the conditions are true?

NOTE Confidence: 0.9502189

8dc8bb3a-f5cf-4cb6-bc7d-d87b60627ddd
00:47:05.950 --> 00:47:07.726
OK, continuing onward, uh,

NOTE Confidence: 0.9502189

f9b9bf89-65e9-40e7-976e-ec3a4141488b
00:47:07.726 --> 00:47:10.390
we've got get final iterator unwrapped.

NOTE Confidence: 0.9502189

fae58e3a-86a9-4972-9d15-c6840916495c
00:47:10.390 --> 00:47:11.734
This was the thing that was

NOTE Confidence: 0.9502189

cc4cddac-67e6-41e2-ab2b-8c7656e297cf
00:47:11.734 --> 00:47:12.406
promoted from utility.

NOTE Confidence: 0.9502189

e62e2ef9-4bd3-4d83-961b-5f4a48e26fa1
00:47:12.410 --> 00:47:13.820
We saw that it's exactly unchanged,

NOTE Confidence: 0.9502189

a591cc92-56c4-4f4a-af61-a56178820eae
00:47:13.820 --> 00:47:16.788
so skip skip, skip down to copy.

NOTE Confidence: 0.9502189

ac7256d4-e69b-44ea-8166-30d0d0b6df90
00:47:16.790 --> 00:47:20.470
Unchecked, we are generalizing.

NOTE Confidence: 0.9502189

4875d3e2-0632-4d00-9d1d-4f8d08fa8c20
00:47:20.470 --> 00:47:22.690
We used to check if.

NOTE Confidence: 0.9502189

495f78b9-005e-4f2a-a525-e044404810ce
00:47:22.690 --> 00:47:23.870
ITER copycat is big copy,

NOTE Confidence: 0.9502189

244c780b-87bd-4e50-82ce-337f9b1e3961
00:47:23.870 --> 00:47:26.760
assignable and recite something before.

NOTE Confidence: 0.9502189

1e328284-2a0a-41b3-adb0-77e8480ed15b
00:47:26.760 --> 00:47:30.120
And now that's going into Sentinel copycat.

NOTE Confidence: 0.9502189

47298996-a57f-4418-ab6e-44535f5d6cf4
00:47:30.120 --> 00:47:32.340
Is that ideal?

NOTE Confidence: 0.9502189

2e590ec2-a4a6-4900-ba09-a9a8bc638495
00:47:32.340 --> 00:47:36.040
Yes, because the Sentinel copycat.

NOTE Confidence: 0.9502189

1326bce4-2b2d-4661-8aac-a2c65ee3226a
00:47:36.040 --> 00:47:40.320
Allow site Sentinel 4 to also activate it.

NOTE Confidence: 0.9502189

f77570b3-be10-4ddf-a6a3-5d6825a39266
00:47:40.320 --> 00:47:41.364
Previously we insisted on

NOTE Confidence: 0.9502189

ecb860ef-68e6-4b63-854c-0be5fe4f5b57
00:47:41.364 --> 00:47:42.408
them being the same.

NOTE Confidence: 0.8494934

d07a5b8b-2f8c-4e8a-8ee6-2c43cdfedbc7
00:47:47.200 --> 00:47:52.710
Uh, because if we are. Hold on.

NOTE Confidence: 0.8494934

5a28f902-dfd5-4d86-9941-385a997038ac
00:47:52.710 --> 00:47:54.014
Here we were specific.

NOTE Confidence: 0.8494934

df8cf4a5-4fdc-4a46-a6a5-0994dbe4c030
00:47:54.014 --> 00:47:57.269
We said it has to be a Sentinel four.

NOTE Confidence: 0.8494934

62dbc37b-fc0c-41ba-89da-70f460bc656f
00:47:57.270 --> 00:47:59.982
Ohh because we did copy memmove

NOTE Confidence: 0.8494934

393d1a6f-c06f-4bfd-98e7-073b4ed2e3e4
00:47:59.982 --> 00:48:02.921
and we synthesize final now as long

NOTE Confidence: 0.8494934

453bbb3c-9fe9-4cab-ac3d-8d17e7bc67f7
00:48:02.921 --> 00:48:04.806
as Sentinel Copycat returns true,

NOTE Confidence: 0.8494934

6d4bdec0-b4f7-4a1b-ad43-c31282413805
00:48:04.810 --> 00:48:07.114
we can call either the copy my move or

NOTE Confidence: 0.8494934

791b7c42-fae6-4479-b5ba-8fe4aad6e601
00:48:07.114 --> 00:48:09.639
the copy move in and we have both paths.

NOTE Confidence: 0.905688626

924d23dc-4a9d-495b-bd15-16a273654920
00:48:12.560 --> 00:48:13.680
OK, so this seems right.

NOTE Confidence: 0.905688626

4604ee31-0730-4b99-b001-133ada74f576
00:48:13.680 --> 00:48:15.654
We're not as worried that we're

NOTE Confidence: 0.905688626

295d6e4b-ca6b-4808-822a-1227e6f51923
00:48:15.654 --> 00:48:16.970
like changing the optimization

NOTE Confidence: 0.905688626

bfe4cb0b-ec33-47dd-90db-278e064b4b5c
00:48:17.031 --> 00:48:18.837
activated in cases where it's not,

NOTE Confidence: 0.905688626

b314bcfd-57c3-4fa2-820c-1746c2e380c3
00:48:18.840 --> 00:48:21.510
but we're not.

NOTE Confidence: 0.905688626

995581b4-eec5-4365-9ae7-335ae30aeb54
00:48:21.510 --> 00:48:24.060
As long as Sentinel copycat holds.

NOTE Confidence: 0.905688626

565bcb98-3014-4e2e-a646-2adfe18ebed8
00:48:24.060 --> 00:48:25.608
And this one says.

NOTE Confidence: 0.852912441818182

4f18a101-0dcf-408e-be64-6783f5e4be36
00:48:29.080 --> 00:48:30.700
Either we can find the last

NOTE Confidence: 0.852912441818182

6e26960a-7dae-4a61-8d18-422c4b2394fd
00:48:30.700 --> 00:48:32.100
iterator or they're the same,

NOTE Confidence: 0.852912441818182

05081143-42e3-45ea-a5d9-e2f9eb41c1b4
00:48:32.100 --> 00:48:35.990
then ask it or copycat OK?

NOTE Confidence: 0.852912441818182

4483e5ec-7514-423a-ad9d-452580015085
00:48:35.990 --> 00:48:38.419
And we'll handle both cases below because

NOTE Confidence: 0.852912441818182

7acf3fd7-7ad4-4d9d-8c76-8cff89f26087
00:48:38.419 --> 00:48:40.998
we do have to handle the unsized.

NOTE Confidence: 0.852912441818182

d51eb07b-8f3a-429f-8dca-b4906f3c6adc
00:48:41.000 --> 00:48:45.540
Sentinel 4 yeah, that's the difference.

NOTE Confidence: 0.852912441818182

12c8c142-9bb0-4a22-a3c6-862b83f208e3
00:48:45.540 --> 00:48:47.370
Previously we insisted

NOTE Confidence: 0.852912441818182

c25c2048-843f-4e62-a285-a6618bf21129
00:48:47.370 --> 00:48:49.830
on size Sentinel 4 now.

NOTE Confidence: 0.852912441818182

a02b6fc4-ce93-4536-a4aa-f2fa23bd62f7
00:48:49.830 --> 00:48:52.504
We'll handle the case where it's not

NOTE Confidence: 0.852912441818182

bdbeabba-cb25-4c3e-9d16-e465ed63444b
00:48:52.504 --> 00:48:55.675
a size kennel, but they are the same

NOTE Confidence: 0.852912441818182

943e2c7b-02e0-4eaf-b066-0a84596458fc
00:48:55.675 --> 00:48:57.700
and they otherwise are eligible.

NOTE Confidence: 0.852912441818182

7e6bc1d5-4ab6-455b-8c0b-a16dc2420310
00:48:57.700 --> 00:48:59.788
It actually seems like perhaps we

NOTE Confidence: 0.852912441818182

46af0aa8-8505-4889-94a0-5780f5b95fe9
00:48:59.788 --> 00:49:01.540
we were overly insistent here.

NOTE Confidence: 0.852912441818182

5987e339-52fc-4a3c-a9d5-e98ad5dc8c2e
00:49:01.540 --> 00:49:02.937
Oh, that's right, we weren't, UM?

NOTE Confidence: 0.852912441818182

f2724861-7d9a-45cc-86a4-a0ec544a67fd
00:49:02.937 --> 00:49:05.199
No, we we did need this.

NOTE Confidence: 0.7997961

80a6a502-d43c-4c46-8358-07dc0e304d7d
00:49:07.920 --> 00:49:11.704
The issue was what if copy and checked?

NOTE Confidence: 0.7997961

d65766ce-e484-4038-ba8c-d4d7708f1b67
00:49:11.710 --> 00:49:13.948
Have some Sentinel.

NOTE Confidence: 0.7997961

4e679f63-6587-4228-b7f7-4732a4f53a32
00:49:13.950 --> 00:49:18.186
That's like unbounded or something or.

NOTE Confidence: 0.7997961

61b05603-0349-45ac-bd9f-e26f1841f7eb
00:49:18.190 --> 00:49:21.550
What if it's a Sentinel that only inspects

NOTE Confidence: 0.7997961

3dc519eb-b269-45ea-b946-5952067a3270
00:49:21.550 --> 00:49:24.497
the element type so it's not sized UM?

NOTE Confidence: 0.7997961

c092f1b0-a6b0-4498-b249-b4aa062c1635
00:49:24.500 --> 00:49:29.477
We required it required it to be sized here,

NOTE Confidence: 0.7997961

cc3f4b09-24d2-4349-86bf-a4e6117a73db
00:49:29.480 --> 00:49:30.660
otherwise we were just

NOTE Confidence: 0.7997961

8bc78295-8417-438f-bdff-34b545ff9064
00:49:30.660 --> 00:49:31.840
ignoring the Sentinel entirely.

NOTE Confidence: 0.7997961

a146113f-6490-465a-b2da-89f51d98d607
00:49:31.840 --> 00:49:33.712
I remember this came up in a code review,

NOTE Confidence: 0.7997961

4035abeb-10f0-49a2-9ed9-327ebc0d807d
00:49:33.720 --> 00:49:35.300
possibly a video code review,

NOTE Confidence: 0.7997961

d33d9591-74f8-4bb3-9571-576356197aa2
00:49:35.300 --> 00:49:38.090
so that's why we had to check it here.

NOTE Confidence: 0.7997961

a233cb72-59e0-4309-b539-40f56f69ab21
00:49:38.090 --> 00:49:41.710
But what if now?

NOTE Confidence: 0.7997961

64c8f2e6-5a08-447e-b1f5-39a240e8a67d
00:49:41.710 --> 00:49:43.369
We are passing it to Sentinel copycat

NOTE Confidence: 0.7997961

4b339eb7-e8ac-46c0-ba66-d141675f377d
00:49:43.369 --> 00:49:45.385
so here we say either the iterator and

NOTE Confidence: 0.7997961

4211e589-94db-4e80-b8cb-1a20be2ac210
00:49:45.385 --> 00:49:47.389
the Sentinel need to be the same type.

NOTE Confidence: 0.7997961

b214b20f-3a5e-48f4-8109-e617fc40ec18
00:49:47.390 --> 00:49:49.494
So we do care about the Sentinel type

NOTE Confidence: 0.7997961

b729aecf-d584-44da-96d6-51c2ecc7e216
00:49:49.494 --> 00:49:51.906
there or it has to be size Sentinel four.

NOTE Confidence: 0.7997961

27dd5717-b93d-408d-9d34-f00423fdaa1c
00:49:51.910 --> 00:49:53.506
OK so we aren't just ignoring

NOTE Confidence: 0.7997961

79b15e80-b329-4dbb-af29-a9a8eefbcca9
00:49:53.506 --> 00:49:54.304
the Sentinel here.

NOTE Confidence: 0.7997961

56a9aec3-fca9-43fa-b17c-b3bbab62bbed
00:49:54.310 --> 00:49:55.975
We are properly activating either

NOTE Confidence: 0.7997961

e87b9496-a22b-4d0b-9fac-5ff86b27cf09
00:49:55.975 --> 00:49:58.718
in this case or in the case we're

NOTE Confidence: 0.7997961

4465f0e2-76eb-40ef-a7e9-8bdde3f8ac50
00:49:58.718 --> 00:50:00.728
the same because being the same.

NOTE Confidence: 0.7997961

e4844e74-463a-4dda-b805-a02dfcf9306f
00:50:00.730 --> 00:50:02.958
Is essentially stronger than.

NOTE Confidence: 0.7997961

49aed8ae-4831-4303-87dc-d390ee97de93
00:50:02.958 --> 00:50:04.629
Site Sentinel four.

NOTE Confidence: 0.7997961

76b92c7c-fabc-4ce9-a4bc-5dfc9dfaa2bf
00:50:04.630 --> 00:50:07.066
When the bid copy SIGNABLE is true.

NOTE Confidence: 0.7997961

3311c5e7-3ea4-41d3-93a2-52c5ef20634f
00:50:07.070 --> 00:50:07.900
OK, so this is good.

NOTE Confidence: 0.7997961

11c1657c-09f4-4339-82b1-2f7800e02e5a
00:50:07.900 --> 00:50:10.120
We're not losing anything.

NOTE Confidence: 0.7997961

66f58556-b0d6-41f2-80f6-35b8e130b912
00:50:10.120 --> 00:50:11.968
OK, so then this code is changing because

NOTE Confidence: 0.7997961

b8844908-ad3b-491d-a73a-bd2770bebec9
00:50:11.968 --> 00:50:13.880
we now need to handle the two cases.

NOTE Confidence: 0.7997961

90731a81-5854-419e-a2b3-7fc72741a0f8
00:50:13.880 --> 00:50:15.680
What if you're the same versus?

NOTE Confidence: 0.7997961

42e5fd7f-bda8-4140-a11d-6cb79f92c15f
00:50:15.680 --> 00:50:16.620
What if your size Sentinel?

NOTE Confidence: 0.7997961

035612c2-62e8-41ec-bf05-c9a249b125bc
00:50:16.620 --> 00:50:24.630
For if if Constexpr is saying VI T&amp;amp;C then.

NOTE Confidence: 0.7997961

d45860b1-b5c4-410c-a168-b166435bbf58
00:50:24.630 --> 00:50:26.230
We can just call, copy, move directly.

NOTE Confidence: 0.7997961

c6919791-8ddf-485c-ac1d-d4c3f3d86fac
00:50:26.230 --> 00:50:28.744
We don't need to do this ranges next thing

NOTE Confidence: 0.7997961

c850fe61-025e-4301-b34f-3d011aba4cf7
00:50:28.744 --> 00:50:30.788
because we know they're the same type,

NOTE Confidence: 0.7997961

714bb883-5f7b-4665-82d0-0978d2dcb3ac
00:50:30.790 --> 00:50:33.165
so we can call copayment, move, move first.

NOTE Confidence: 0.7997961

16fac38a-679b-4de9-b1a4-1bc4015240f0
00:50:33.165 --> 00:50:35.440
We can pass last directly.

NOTE Confidence: 0.778757854736842

3d41229a-b6ba-41ee-838d-e5dacfa6333d
00:50:40.090 --> 00:50:41.651
We don't want to move from because

NOTE Confidence: 0.778757854736842

ff35814e-1cf8-4b30-853a-d0d1c22ff02d
00:50:41.651 --> 00:50:43.277
we're going to move from it down

NOTE Confidence: 0.778757854736842

04691774-ec2b-4b4f-a0a9-9c67bb7df600
00:50:43.277 --> 00:50:44.412
there and then move result.

NOTE Confidence: 0.778757854736842

04bae875-a359-453b-aa40-839b87ef7afe
00:50:44.420 --> 00:50:46.700
Update result and then move it out here.

NOTE Confidence: 0.778757854736842

e6f8173b-3371-466a-8fdb-a3311880436f
00:50:46.700 --> 00:50:49.059
That's good, otherwise they're not the same,

NOTE Confidence: 0.778757854736842

322e42a8-124f-45ce-8a81-fa0ae798ae46
00:50:49.060 --> 00:50:50.344
but size Sentinel 4.

NOTE Confidence: 0.778757854736842

fa88655a-107b-46bf-99a5-41b737d6e968
00:50:50.344 --> 00:50:51.949
Here the stone turning static

NOTE Confidence: 0.778757854736842

20205511-1812-458e-b882-1acd71e800f7
00:50:51.949 --> 00:50:53.179
assert is appropriate.

NOTE Confidence: 0.778757854736842

90edfaa8-25f9-4359-8b32-45a2dd7347bb
00:50:53.180 --> 00:50:54.365
We should stack assert that

NOTE Confidence: 0.778757854736842

96850ce9-56e8-4aa3-b270-cab9ccc8fffe
00:50:54.365 --> 00:50:55.550
is a size Sentinel 4.

NOTE Confidence: 0.89798392375

06e09820-7c6d-45a3-9e63-6dd105969068
00:50:59.510 --> 00:51:00.690
It's arguable how much

NOTE Confidence: 0.89798392375

5a1e5a65-cb5a-43a2-b09c-516af8f6006d
00:51:00.690 --> 00:51:01.870
even this is necessary.

NOTE Confidence: 0.89798392375

eca3a69b-9561-47d1-9ea5-1559090462ff
00:51:01.870 --> 00:51:03.670
It is far flung like this is many,

NOTE Confidence: 0.89798392375

fe577822-2ef8-4bb2-950b-bf38b7ce8672
00:51:03.670 --> 00:51:05.587
many lines down, so I don't object to it.

NOTE Confidence: 0.89798392375

f9ee1a60-0a8a-4749-9eca-5c1dc317c961
00:51:05.590 --> 00:51:07.078
The thing is, we do actually

NOTE Confidence: 0.89798392375

39bf5f07-7f95-4944-97cc-eb02aa0ee755
00:51:07.078 --> 00:51:08.070
just subtract right here,

NOTE Confidence: 0.89798392375

f58b106e-0e54-45d0-b3e6-d62c28520b1d
00:51:08.070 --> 00:51:10.070
so if it wasn't a size Sentinel 4

NOTE Confidence: 0.89798392375

b9efd291-a049-45ba-8838-8c8af61d2610
00:51:10.070 --> 00:51:11.997
this would totally fail to compile.

NOTE Confidence: 0.7744818175

1a856569-282c-4846-ac10-56877c411c03
00:51:14.190 --> 00:51:15.550
But it's reasonable to have

NOTE Confidence: 0.7744818175

851740ac-ff53-4f4a-a1f1-fb65e8913f75
00:51:15.550 --> 00:51:16.586
that internal stack, Sir,

NOTE Confidence: 0.7744818175

83701fc8-755d-4a0a-8e9c-5a62d5dad62c
00:51:16.586 --> 00:51:18.790
which is sort of a reminder to us that hey,

NOTE Confidence: 0.7744818175

d8881f90-d795-4148-8f3b-5a1efbdbeb60
00:51:18.790 --> 00:51:20.410
we checked this, it was hidden

NOTE Confidence: 0.7744818175

1cfbc9be-7609-49e9-a591-77833194728e
00:51:20.410 --> 00:51:22.090
within the sent copycat type trait.

NOTE Confidence: 0.7744818175

5c757d1c-e1fb-46ed-b49d-d74540f38fca
00:51:22.090 --> 00:51:23.906
That's why we know this code is valid,

NOTE Confidence: 0.7744818175

74105da9-ab8c-48d1-9644-fc0414e77b67
00:51:23.910 --> 00:51:27.366
so I like that and it vanishes for users.

NOTE Confidence: 0.7744818175

f34fabaa-f822-4fef-9329-37be5de2c08a
00:51:27.370 --> 00:51:30.508
So we subtract last minus first.

NOTE Confidence: 0.7744818175

aaac0325-e423-4775-af9f-97573c0d4b71
00:51:30.510 --> 00:51:32.556
We know we're. Bit copy signable

NOTE Confidence: 0.7744818175

b45f70e3-f13f-4bc9-8a74-d544f75e5ddb
00:51:32.556 --> 00:51:34.830
so it had better be a size T.

NOTE Confidence: 0.7744818175

48ff8b39-d27f-4d53-a4da-b2cc5638a558
00:51:34.830 --> 00:51:38.020
That's the count we can go copy my move in.

NOTE Confidence: 0.7744818175

bc33bdd4-2ab5-4954-a59e-a62d0cc231d2
00:51:38.020 --> 00:51:41.318
1st. Why are we not moving first here?

NOTE Confidence: 0.7744818175

d005509e-73ff-49ce-b4d4-e4d1a993d271
00:51:41.320 --> 00:51:43.318
Because we need to update it.

NOTE Confidence: 0.7744818175

74d9110c-18c6-437a-bcd4-c78479b32cc5
00:51:43.320 --> 00:51:45.868
Past the count that we just got.

NOTE Confidence: 0.7744818175

aeea64be-dce4-40ec-9522-4c8f0791bc3a
00:51:45.870 --> 00:51:48.540
Discount could be consed we don't

NOTE Confidence: 0.7744818175

69e67344-e1e8-4afc-b3f0-5cd274e5d924
00:51:48.540 --> 00:51:51.550
modify this and stood move result.

NOTE Confidence: 0.7744818175

c7759d1a-78d4-436e-bc67-724e61b72cf5
00:51:51.550 --> 00:51:55.159
OK, so first we need update count should be

NOTE Confidence: 0.7744818175

e4b5c630-5bd0-4592-86fc-e43427c60017
00:51:55.159 --> 00:51:58.029
constant remove result we update result.

NOTE Confidence: 0.7744818175

d5d73a6c-ef83-4076-9505-ec9bd8902a22
00:51:58.030 --> 00:52:00.028
We step first by count because

NOTE Confidence: 0.7744818175

45656d15-3cbc-4c21-aa15-2503218eecaf
00:52:00.028 --> 00:52:02.099
that's what we need to return.

NOTE Confidence: 0.7744818175

b15562a6-946b-47dd-8470-cd3de7c22d8b
00:52:02.100 --> 00:52:03.268
Then we move it out, move it out.

NOTE Confidence: 0.7744818175

729e965e-d13d-4300-8f52-77adbaba967a
00:52:03.268 --> 00:52:04.500
OK, so this is just the constant.

NOTE Confidence: 0.529286705

83f1ae6b-7601-4847-b55d-cf430c4db260
00:52:06.900 --> 00:52:10.408
Count. Could be confused.

NOTE Confidence: 0.801363367777778

5a4cdea7-3ec4-4baf-87ec-5c0be6aa1e7a
00:52:15.830 --> 00:52:19.470
OK, and then finally the end of

NOTE Confidence: 0.801363367777778

ca3cec13-ffa4-4a08-9d1c-6a96682b5db9
00:52:19.470 --> 00:52:21.840
X utility. We are in copy end.

NOTE Confidence: 0.87886566

bec9a861-f7b6-422f-9dc2-bfb57be8be39
00:52:24.250 --> 00:52:26.960
OK, we used to check.

NOTE Confidence: 0.87886566

a8587cff-f3f2-42fa-8b0a-323cf450c816
00:52:26.960 --> 00:52:28.328
This is a classic copy end.

NOTE Confidence: 0.8062796

a3b58dfa-3eea-43d8-bc98-ba1c183058e1
00:52:30.800 --> 00:52:31.540
Unwrap them.

NOTE Confidence: 0.88745238

a618d97b-404b-4954-8211-994618810dfd
00:52:34.550 --> 00:52:39.280
After we. Move forward.

NOTE Confidence: 0.88745238

a666a7f2-0330-4752-b4d4-d3d03262c134
00:52:39.280 --> 00:52:40.684
The destiny Oh no.

NOTE Confidence: 0.88745238

ace1accb-4f47-4f29-8541-01675631577a
00:52:40.684 --> 00:52:42.439
We've checked the destination that

NOTE Confidence: 0.88745238

08f945d7-4a07-4ef4-854e-8c59b07eeb23
00:52:42.439 --> 00:52:44.606
we can write count bytes to it,

NOTE Confidence: 0.88745238

fe5c8b78-8cba-4c8f-9beb-fdfec42d9805
00:52:44.610 --> 00:52:46.686
or sorry, count elements to it.

NOTE Confidence: 0.88745238

4f9bd367-8c34-4e03-b618-672c49edcf93
00:52:46.690 --> 00:52:47.887
That's you, dust.

NOTE Confidence: 0.88745238

1c0d049d-8e19-4a50-8761-f8c19a2f29ff
00:52:47.887 --> 00:52:50.680
And then if it would be eligible.

NOTE Confidence: 0.0062025785

111a9acf-5827-4368-aa58-d36efd521285
00:52:52.860 --> 00:52:54.050
And.

NOTE Confidence: 0.696109295714286

6220e423-9b05-4649-8418-c15827716176
00:52:56.760 --> 00:52:58.979
Why is this not that Sentinel version?

NOTE Confidence: 0.696109295714286

a55eea8d-06f8-46a9-8693-3c4074a14214
00:52:58.980 --> 00:53:00.488
Send copycat itsy out.

NOTE Confidence: 0.696109295714286

3981b902-d777-4f49-a6ed-ed53cfd85149
00:53:00.488 --> 00:53:02.373
Ohh because we only have.

NOTE Confidence: 0.696109295714286

21ddb1bf-f712-44f9-a440-56712a74a491
00:53:02.380 --> 00:53:04.048
1st and wrong there is no.

NOTE Confidence: 0.602205560666667

ab402ab4-54f6-4e0c-80c9-d660f43bc507
00:53:06.150 --> 00:53:09.180
OK, so because there's no Sentinels,

NOTE Confidence: 0.602205560666667

0fff7a42-5f93-4dac-a27f-c91a066b48e9
00:53:09.180 --> 00:53:11.628
yeah, there's no signal.

NOTE Confidence: 0.602205560666667

8e814ce0-b51d-4e8b-8dc8-ea05709e8b8e
00:53:11.630 --> 00:53:14.240
Right anywhere? Yeah yeah here,

NOTE Confidence: 0.602205560666667

360624c8-488b-44b7-8949-9b8e24b2f728
00:53:14.240 --> 00:53:16.914
instead of saying you first plus count,

NOTE Confidence: 0.602205560666667

4d54499f-a793-4178-809e-25d5a2237ae4
00:53:16.920 --> 00:53:18.972
as long as we have copy my move in,

NOTE Confidence: 0.602205560666667

0cadaadd-d9a1-4018-9955-d645c144f746
00:53:18.980 --> 00:53:21.410
we may as well just static

NOTE Confidence: 0.602205560666667

7d6ddff6-88b8-484c-bb56-bc614295a423
00:53:21.410 --> 00:53:23.310
cast count to size T.

NOTE Confidence: 0.602205560666667

a340bf2e-5295-42cf-a7b8-bbe9764f13bb
00:53:23.310 --> 00:53:25.154
Which we know is.

NOTE Confidence: 0.602205560666667

f1734af9-1b9f-4373-b106-d69a36a1190b
00:53:25.154 --> 00:53:27.920
Non rich we know is positive.

NOTE Confidence: 0.602205560666667

e82c114c-89c3-43d5-bf72-88ce4b21c975
00:53:27.920 --> 00:53:29.880
This is a reasonable, UM.

NOTE Confidence: 0.76133903

ece72fe5-b74d-4988-90c5-ba14286feed6
00:53:33.090 --> 00:53:35.526
It may end up being unnecessary if

NOTE Confidence: 0.76133903

b97d98dd-2cd1-4603-a65f-a76da932c5a8
00:53:35.526 --> 00:53:37.644
copy memmove N is then implemented

NOTE Confidence: 0.76133903

ef9f0271-4c18-4383-82ab-6b73ab7e97a8
00:53:37.644 --> 00:53:39.434
in terms of copy memmove.

NOTE Confidence: 0.76133903

3ea4e638-6c96-4f4a-a921-de81706c3d4b
00:53:39.440 --> 00:53:41.624
I wonder if I should note that.

NOTE Confidence: 0.76133903

47ef5b52-8b14-4e2f-9b93-88d80a99a206
00:53:41.630 --> 00:53:42.860
What happens when it's implemented

NOTE Confidence: 0.76133903

e00a3d11-5ab4-4e13-8bdb-ef3d2ae7eb09
00:53:42.860 --> 00:53:44.736
in terms of copy memo, UM?

NOTE Confidence: 0.76133903

60f384d3-4227-47db-9e69-e0626684ce0b
00:53:44.736 --> 00:53:47.320
Or if it works?

NOTE Confidence: 0.76133903

e9f91968-8ce6-4ce6-b104-6450404b660a
00:53:47.320 --> 00:53:49.276
We would essentially need to form.

NOTE Confidence: 0.75608156125

e064a7ac-60b0-4abb-9103-0cb693006207
00:53:54.650 --> 00:53:56.770
At least the no, not the bite count.

NOTE Confidence: 0.75608156125

450af556-2e17-435e-845a-250d8a8265df
00:53:56.770 --> 00:53:58.752
We would just pass first, plus blah.

NOTE Confidence: 0.75608156125

cea96624-b832-46f2-b7d7-4174f1c86ef9
00:53:58.752 --> 00:54:00.757
Essentially, we'd be doing that

NOTE Confidence: 0.75608156125

5ba59377-0f8c-4451-81f9-addbfc54270c
00:54:00.757 --> 00:54:03.040
with an extra function call.

NOTE Confidence: 0.75608156125

7c3a2b7d-57d9-4498-bf6c-3b80106c2e41
00:54:03.040 --> 00:54:05.632
I will note that it is probably not

NOTE Confidence: 0.75608156125

d7314fb4-2347-4c12-881a-4b91b935fd1d
00:54:05.632 --> 00:54:08.037
necessary to make that line change if

NOTE Confidence: 0.75608156125

b199ec5f-84b8-4010-b473-cb447b781761
00:54:08.037 --> 00:54:10.879
copy Member Van turns out to be a wrapper.

NOTE Confidence: 0.75608156125

40530f7f-28d8-43d9-8955-56b6bc344088
00:54:10.880 --> 00:54:12.161
Yeah, agreed. Which.

NOTE Confidence: 0.75608156125

f8ae5a2d-f7f2-4925-9533-2999c3d8167e
00:54:12.161 --> 00:54:14.723
Well, we should suggest the author

NOTE Confidence: 0.75608156125

2f1c1786-26dc-415e-a796-132a54406ed4
00:54:14.723 --> 00:54:17.578
that they audit for other occurrences.

NOTE Confidence: 0.75608156125

33fe0433-23c7-49c9-840b-bb4792e63ded
00:54:17.580 --> 00:54:22.984
OK, good idea. If Captain move in.

NOTE Confidence: 0.75608156125

d0f87f4c-1882-401a-b964-6cdd4a82410c
00:54:22.990 --> 00:54:27.710
Is changed to just wrap, copy, remove.

NOTE Confidence: 0.70480465

642e6a28-92cc-466c-a7dd-154902b2ad5b
00:54:30.240 --> 00:54:37.000
This change. Would no longer be viable.

NOTE Confidence: 0.70480465

e24d27b6-b76d-4907-9dd6-52dbde243348
00:54:37.000 --> 00:54:43.080
Please audit for other. Occurrences. OK.

NOTE Confidence: 0.617646392

eab5ca9e-336c-47e6-acb1-ca5c6134e494
00:54:45.090 --> 00:54:48.768
Cool hey 130 lines down, that's like point.

NOTE Confidence: 0.617646392

2f256c9c-2d83-48cd-a4d4-e66c4d2b82f7
00:54:48.770 --> 00:54:50.750
5% of this entire PR?

NOTE Confidence: 0.617646392

49a93c47-5e8d-479e-8c1c-7cec98b5885a
00:54:50.750 --> 00:54:52.750
Uh, maybe more of the the product code?

NOTE Confidence: 0.617646392

38fa0bf0-2978-4ad9-88aa-9c50ed2db2b3
00:54:52.750 --> 00:54:53.854
Uh, #accomplishments I.

NOTE Confidence: 0.617646392

1ae25a9c-86b4-4c8f-b7a6-6c58c5181b13
00:54:53.854 --> 00:54:56.430
I guess we did manage to also

NOTE Confidence: 0.617646392

10ebf148-bbce-4fee-ae93-b9c068dbc963
00:54:56.507 --> 00:54:58.665
review algorithm. OK, let's see.

NOTE Confidence: 0.617646392

9c71a98e-20c0-4820-8299-51f0ba0e6f87
00:54:58.665 --> 00:55:00.290
We're our one hour in.

NOTE Confidence: 0.617646392

2e0a3831-4db0-40b2-b6b0-fe2774f365e0
00:55:00.290 --> 00:55:01.151
Let's keep going.

NOTE Confidence: 0.617646392

c6ba867a-07ec-40c5-a687-82411ce80122
00:55:01.151 --> 00:55:02.299
OK, let's actually look

NOTE Confidence: 0.617646392

a936ac9b-f6bd-4e27-9fc5-ece0c4f06da2
00:55:02.299 --> 00:55:03.999
at maybe a container now.

NOTE Confidence: 0.617646392

2c75b9ee-528e-466b-b891-f9bbd9e57472
00:55:04.000 --> 00:55:06.191
We've looked at some of the support

NOTE Confidence: 0.617646392

74156438-5f03-43e9-9ad2-c3bc2dd886ed
00:55:06.191 --> 00:55:07.394
machinery we could start with.

NOTE Confidence: 0.617646392

fd27b9b0-6892-4e83-a3b0-5d57d4dfeada
00:55:07.394 --> 00:55:08.499
The vector vector is big

NOTE Confidence: 0.617646392

d09760dc-0520-489c-9a9b-657de2b468c0
00:55:08.499 --> 00:55:09.388
because of vector bool.

NOTE Confidence: 0.617646392

7f837780-7e40-40a5-9e1b-f6406ab40904
00:55:09.390 --> 00:55:11.702
We could start with

NOTE Confidence: 0.617646392

5cf3f3da-8d76-4ee7-b325-308c1e6b3b89
00:55:11.702 --> 00:55:14.014
something smaller like list.

NOTE Confidence: 0.617646392

9f310bab-783a-4432-b658-96e8caeb51b4
00:55:14.020 --> 00:55:15.518
This might be a little simpler here.

NOTE Confidence: 0.67975956375

50726fac-3160-4b9b-a06f-3c6c3334b944
00:55:19.000 --> 00:55:20.656
Yeah, this is doing all that pen stuff.

NOTE Confidence: 0.67975956375

3fa4e52b-30bd-48ad-94df-ff7ae7c82ad1
00:55:20.660 --> 00:55:22.986
We've got a lot of have to

NOTE Confidence: 0.67975956375

74b1bbd2-42ee-4ad1-8e42-1bbff22c1e65
00:55:22.986 --> 00:55:24.238
provide a strong guarantee.

NOTE Confidence: 0.67975956375

aec15691-1eac-427c-9233-9f7b4132d272
00:55:24.240 --> 00:55:25.220
Vectors complicated that way.

NOTE Confidence: 0.67975956375

eab8f3da-d9b7-4c41-bcfc-3dcdd678edc4
00:55:25.220 --> 00:55:26.690
Let's take a look at this.

NOTE Confidence: 0.67975956375

4d62a931-2031-479f-8384-7fb28ab9d65f
00:55:26.690 --> 00:55:30.236
This is going to be a little bit simpler.

NOTE Confidence: 0.67975956375

2e67dd7f-0f92-46fb-ab3d-0575bcfd2e52
00:55:30.240 --> 00:55:32.344
I can get through it 96 lines OK.

NOTE Confidence: 0.782359307923077

25a76e9c-5f66-4dfd-b57c-8ecc84a5b8b2
00:55:36.370 --> 00:55:38.190
I have not actually looked at the

NOTE Confidence: 0.782359307923077

b59224bb-57d4-4ace-82a4-d00982c6c97a
00:55:38.190 --> 00:55:40.110
paper yet in terms of exporting,

NOTE Confidence: 0.782359307923077

e1150844-34dc-4227-80af-7452e8908214
00:55:40.110 --> 00:55:43.585
so let's actually look at changes to list.

NOTE Confidence: 0.782359307923077

e6748734-adac-422c-9a98-db66634b1dac
00:55:43.585 --> 00:55:45.010
Does this actually have a?

NOTE Confidence: 0.782359307923077

6f4a4df4-52f0-40f6-aa0a-18e4401803cc
00:55:45.010 --> 00:55:46.158
Oh, it does nice.

NOTE Confidence: 0.80974783

5879fcfe-1546-4548-8150-cc89520c831d
00:55:48.750 --> 00:55:50.970
So no, it's not so stiff.

NOTE Confidence: 0.80974783

e76967a8-d4db-4b27-b125-10873137d78a
00:55:50.970 --> 00:55:54.171
Custom playlist. OK.

NOTE Confidence: 0.80974783

3f278542-aa0e-4695-8f73-eab3defb5f50
00:55:54.171 --> 00:55:57.657
So we get a new constructor.

NOTE Confidence: 0.80974783

e2b4e91d-c520-42b4-b9fa-41e201c3989b
00:55:57.660 --> 00:55:59.304
List from range T,

NOTE Confidence: 0.80974783

868b614e-052d-43ed-9069-665c1d8ea44e
00:55:59.304 --> 00:56:02.320
some range and an allocator assign range.

NOTE Confidence: 0.80974783

72e6cd45-d6e3-44e6-beac-dd61e70d6f99
00:56:02.320 --> 00:56:06.180
Prepend range. Append range.

NOTE Confidence: 0.80974783

34b42ccf-bcdb-465e-8d48-1d544684dbee
00:56:06.180 --> 00:56:11.220
Insert range. And.

NOTE Confidence: 0.80974783

ee307ecb-f93e-4a41-b3aa-fe4123b69b17
00:56:11.220 --> 00:56:14.980
A deduction guide. OK.

NOTE Confidence: 0.80974783

8e308503-0c49-4e7b-a37e-b2ba79fcac66
00:56:14.980 --> 00:56:17.344
So here we've got list internal

NOTE Confidence: 0.80974783

c67700ac-ba88-47ec-a65b-76041311d786
00:56:17.344 --> 00:56:18.526
machinery being changed.

NOTE Confidence: 0.80974783

e9f2b5c3-85d7-44fb-bcf6-b7e970658614
00:56:18.530 --> 00:56:20.990
Construct range unchecked.

NOTE Confidence: 0.80974783

8eeb1d07-f8b4-4761-b9cb-b1dba858fe45
00:56:20.990 --> 00:56:24.138
It's getting a Sentinel.

NOTE Confidence: 0.80974783

e2cb790b-0bb3-4efd-9233-af2dfd990ce5
00:56:24.140 --> 00:56:26.318
And instead of taking two iters,

NOTE Confidence: 0.80974783

95cfccfa-aaab-4584-9146-43feff03cc6a
00:56:26.320 --> 00:56:29.600
it will now accept ITER and constant last.

NOTE Confidence: 0.80974783

dab505ff-2785-4f51-9351-be4d8cc806d3
00:56:29.600 --> 00:56:30.750
We don't move from last,

NOTE Confidence: 0.80974783

e9e7bd20-735a-4974-8b78-4f6536e9e288
00:56:30.750 --> 00:56:33.630
so it can be top of a contest.

NOTE Confidence: 0.80974783

dc9c0f35-3e44-412b-84ff-163424c41a77
00:56:33.630 --> 00:56:36.632
And we will now call pen range

NOTE Confidence: 0.80974783

a3d3507d-4804-4aa2-bcfc-a8ad5f61a19f
00:56:36.632 --> 00:56:39.137
unchecked by moving in first,

NOTE Confidence: 0.80974783

3d4a86f4-6b69-46a2-bbb0-2cdeaf69ed75
00:56:39.140 --> 00:56:42.148
because that is the last mention of first.

NOTE Confidence: 0.80974783

9161944b-2993-4091-a22f-ca814629c28a
00:56:42.150 --> 00:56:45.723
OK, so that's good. OK.

NOTE Confidence: 0.80974783

59599b83-97a3-4b7c-9a07-8a4d3a9cda7f
00:56:45.723 --> 00:56:47.855
So construct range unchecked

NOTE Confidence: 0.80974783

8bf10667-eea1-4fee-8552-184e9027a04f
00:56:47.855 --> 00:56:49.454
is being generalized.

NOTE Confidence: 0.80974783

af6995b1-d15c-4886-a682-8c1a5fae0116
00:56:49.460 --> 00:56:52.040
OK, Next up.

NOTE Confidence: 0.80974783

c84e551f-828c-4597-9f78-919cfe33f9a4
00:56:52.040 --> 00:56:52.818
So, uh,

NOTE Confidence: 0.80974783

40a1eb5e-d210-4aaf-80db-ea920b41bd62
00:56:52.818 --> 00:56:54.763
let's see here Casey's guarding

NOTE Confidence: 0.80974783

3444b054-4e99-40e7-9410-35c5e319a2a1
00:56:54.763 --> 00:56:57.002
this with the actual specific

NOTE Confidence: 0.80974783

416bac8f-0b02-45d7-81f0-0eef316336f3
00:56:57.002 --> 00:57:01.038
feature test macro instead of just.

NOTE Confidence: 0.80974783

3b694f35-350c-41d8-abfb-621021ba5226
00:57:01.040 --> 00:57:03.077
Which is which is a reasonable because

NOTE Confidence: 0.80974783

259d94af-1dbd-40c2-bde2-8a7682080367
00:57:03.077 --> 00:57:04.618
otherwise we would need to say.

NOTE Confidence: 0.80974783

fad32d6d-93d5-445f-822c-17fc5d305a73
00:57:04.620 --> 00:57:06.180
Not just if CP Lib Concepts,

NOTE Confidence: 0.80974783

2503561b-fd9f-4fce-a752-8e827ed51a77
00:57:06.180 --> 00:57:07.674
because that's a twenty thing we need to say.

NOTE Confidence: 0.80974783

94dc16ea-2da2-49c8-b89d-e2f055614638
00:57:07.680 --> 00:57:10.265
If 23 in concepts and

NOTE Confidence: 0.80974783

5600563a-e9a1-4df0-87df-bba66d597d97
00:57:10.265 --> 00:57:11.692
that's annoying elsewhere,

NOTE Confidence: 0.80974783

c4697115-6d26-458d-a395-43191531f96b
00:57:11.692 --> 00:57:14.436
we've simply collapsed stuff for 20 mode,

NOTE Confidence: 0.80974783

0dc3578a-cc68-4fdc-a08b-6ba913a36e53
00:57:14.440 --> 00:57:16.462
and we say if we're implementing

NOTE Confidence: 0.80974783

6936661e-5b66-487b-a71a-6e771ee3965f
00:57:16.462 --> 00:57:18.210
some feature in 20 mode,

NOTE Confidence: 0.80974783

73dc6583-1029-44de-b877-87444c19b8da
00:57:18.210 --> 00:57:19.542
that's specific concepts rather

NOTE Confidence: 0.80974783

73850b30-42c3-4145-9449-e13b980cea39
00:57:19.542 --> 00:57:21.540
than saying if Dev specific feature

NOTE Confidence: 0.80974783

273cefbb-01ac-45df-b6a3-1df380fb4bb1
00:57:21.589 --> 00:57:23.430
test macro just say if Dev concepts

NOTE Confidence: 0.80974783

9366a895-24ee-4e71-b20d-246f44e7bdff
00:57:23.430 --> 00:57:24.967
there's no reason to mention

NOTE Confidence: 0.80974783

2adc377a-ffe3-48b8-93dc-bbcf87b9856e
00:57:24.967 --> 00:57:26.355
individual feature test macros,

NOTE Confidence: 0.80974783

05080ef8-c489-4818-982d-d65ba7479423
00:57:26.360 --> 00:57:29.398
but now they're moving forward to 23.

NOTE Confidence: 0.80974783

a22a7497-7ffd-441e-8933-6a25a6029433
00:57:29.400 --> 00:57:31.200
It's more reasonable to say if

NOTE Confidence: 0.80974783

ab692bbe-9558-4c80-94b7-283857b2467c
00:57:31.200 --> 00:57:32.780
DEF specific feature test macro.

NOTE Confidence: 0.80974783

919d07df-e104-4a86-8826-d84dc595e3f3
00:57:32.780 --> 00:57:35.236
This will be collapsed away once we gain.

NOTE Confidence: 0.80974783

b2f4730c-bc81-46f2-b323-c3f9cd76b6c4
00:57:35.240 --> 00:57:36.476
Concept support from udg.

NOTE Confidence: 0.80974783

44ef7bb4-0cdc-47ed-9694-776027d6d45f
00:57:36.476 --> 00:57:38.715
We have got a bunch of tracking

NOTE Confidence: 0.80974783

8520957f-d136-4be6-9057-6bd1b8aa919a
00:57:38.715 --> 00:57:41.235
issues and as part of that we will

NOTE Confidence: 0.80974783

c1d98805-deab-4f3c-acdf-4c8b8ccbfe9f
00:57:41.235 --> 00:57:43.040
check all of these individual

NOTE Confidence: 0.80974783

37d3f70a-8584-48cb-b6ce-b3d1f75a1c6e
00:57:43.040 --> 00:57:45.164
feature test macros and it will

NOTE Confidence: 0.80974783

d5420953-b853-4eb0-9221-b6137089b9fc
00:57:45.170 --> 00:57:47.658
become just if has CX 23 but for

NOTE Confidence: 0.80974783

3d35e2fc-7bca-485f-aba6-79112d38c5b1
00:57:47.658 --> 00:57:50.466
now the feature test macro is fine.

NOTE Confidence: 0.80974783

7913f3a5-4af3-4117-882a-0234cb185b6e
00:57:50.470 --> 00:57:51.870
I do want to make sure that

NOTE Confidence: 0.80974783

cf88da7a-da1f-4a81-a255-64ce81101103
00:57:51.870 --> 00:57:52.890
the spelling is correct.

NOTE Confidence: 0.80974783

dd13b997-f7bf-474b-bc49-853ea582db8e
00:57:52.890 --> 00:57:55.249
I'm not too worried that this thing

NOTE Confidence: 0.80974783

e38bca38-52fb-4374-8bf8-50a0e8c7c0be
00:57:55.249 --> 00:57:57.970
would vanish but you can't be too sure.

NOTE Confidence: 0.80974783

50175701-47a9-4959-8d48-aad33f013af3
00:57:57.970 --> 00:58:00.436
OK that is the right spelling.

NOTE Confidence: 0.80974783

2b14c561-af43-4000-b4d4-b53ddb2ae73c
00:58:00.440 --> 00:58:03.188
So if DEF CP Lib containers

NOTE Confidence: 0.80974783

b5edae35-b2e0-4ef4-9761-d447eab7f3c4
00:58:03.188 --> 00:58:06.253
ranges and if same spelling OK,

NOTE Confidence: 0.80974783

fd923aed-6aed-48ba-9983-55081750a13a
00:58:06.253 --> 00:58:07.918
we are gaining the constructors

NOTE Confidence: 0.80974783

39c7955c-08ac-45bd-b610-868e60616137
00:58:07.918 --> 00:58:09.250
here that are tagged.

NOTE Confidence: 0.794827605

0695ce5d-5c52-4345-a53a-04e2250691f3
00:58:12.190 --> 00:58:14.494
It is two of them because we're not

NOTE Confidence: 0.794827605

a6998658-3a17-4175-980b-2d984ebe7044
00:58:14.494 --> 00:58:16.323
actually using default arguments and

NOTE Confidence: 0.794827605

6266121c-5304-415e-b02a-f7208cb7bb5e
00:58:16.323 --> 00:58:18.303
imitating what we currently have.

NOTE Confidence: 0.794827605

06607d7a-5d89-4a9e-857d-8687442e3923
00:58:18.310 --> 00:58:21.592
So template on this internal container

NOTE Confidence: 0.794827605

ef6bdf01-54ed-421a-8658-46ef1dd0ac95
00:58:21.592 --> 00:58:24.710
compatible range thing for tea range.

NOTE Confidence: 0.794827605

d9b6ff20-01ac-43a5-adf5-74dc5b999ac7
00:58:24.710 --> 00:58:26.906
List constructor from range T tag.

NOTE Confidence: 0.794827605

4a3f23c9-7219-4df6-b80c-f75bbaf07375
00:58:26.910 --> 00:58:29.143
So this is a. Parameter.

NOTE Confidence: 0.794827605

36972949-3bfb-49e7-9ae6-854678bd4cc6
00:58:29.143 --> 00:58:31.807
Of the tag type being passed by value

NOTE Confidence: 0.794827605

18efd573-7542-4446-ae48-7d9ba537a1dc
00:58:31.807 --> 00:58:34.260
and we don't actually care about it,

NOTE Confidence: 0.794827605

b1b47423-439f-4e13-9b2b-a04484389f0e
00:58:34.260 --> 00:58:37.652
so we don't name the function parameter

NOTE Confidence: 0.794827605

35176f61-9e54-4ab6-9d98-a6ec0737d411
00:58:37.652 --> 00:58:40.396
at all, so that's what that means,

NOTE Confidence: 0.794827605

328f70a2-2ccc-43fb-94ba-00f50baa6e3b
00:58:40.400 --> 00:58:42.736
and then range rough graph under score range.

NOTE Confidence: 0.794827605

06f4dd73-42ec-4d5a-bdca-6dabdb244cd0
00:58:42.740 --> 00:58:43.592
Yep, that's right.

NOTE Confidence: 0.794827605

f3807a70-8547-4532-b2ab-d8c3312f2458
00:58:43.592 --> 00:58:45.296
If we don't have an allocator,

NOTE Confidence: 0.794827605

bf60988d-4342-4091-bc83-59039d65f417
00:58:45.300 --> 00:58:47.286
then construct my pair for the

NOTE Confidence: 0.794827605

550f2742-330b-4226-aad0-0e481b731cd3
00:58:47.286 --> 00:58:49.651
compressed pair optimization empty

NOTE Confidence: 0.794827605

08aea865-71b2-4872-8a8b-a49424e97058
00:58:49.651 --> 00:58:53.036
base optimization with zero arguments.

NOTE Confidence: 0.794827605

dc667b0b-3be2-4c77-91b0-51b92aa36096
00:58:53.040 --> 00:58:55.068
And then call construct range unchecked

NOTE Confidence: 0.794827605

dc2e87b6-e34f-4e60-938c-c89dd2e75225
00:58:55.068 --> 00:58:56.781
to helper function with ranges

NOTE Confidence: 0.794827605

68f1b38a-0624-4386-9e29-d5c8b2334866
00:58:56.781 --> 00:58:58.575
you begin range ranges UN range.

NOTE Confidence: 0.794827605

d81667d4-dace-41c4-a2b1-5a471dc733df
00:58:58.580 --> 00:59:01.030
These are our internal helpers that will.

NOTE Confidence: 0.794827605

846c32e2-7d6e-4e9a-9b18-b990eb2cdc2b
00:59:01.030 --> 00:59:02.656
Get the unchecked begin and end.

NOTE Confidence: 0.794827605

16eec64e-ed82-4ca9-a285-da00b930a4ae
00:59:02.660 --> 00:59:05.390
That's good, and then one that takes

NOTE Confidence: 0.794827605

d40b8360-6538-42d3-9bb3-567a4856723e
00:59:05.390 --> 00:59:07.610
an allocator counts alloc Raphael.

NOTE Confidence: 0.794827605

aeb94a3f-60af-45e8-b4f3-43897f7667b4
00:59:07.610 --> 00:59:09.885
Give that allocator to my pair and

NOTE Confidence: 0.794827605

e459dc37-237e-4056-82ba-623a959530c2
00:59:09.885 --> 00:59:11.510
then construct range unchecked.

NOTE Confidence: 0.794827605

67c0451c-1197-423e-a017-3f5801bd0b7e
00:59:11.510 --> 00:59:12.419
Yep, that's good.

NOTE Confidence: 0.78239224

3836a04f-04df-4aaa-8834-743564354e3a
00:59:14.660 --> 00:59:16.220
All of these new range things.

NOTE Confidence: 0.78239224

bd6246ce-22ee-4c89-b731-3f497c4d8a9e
00:59:16.220 --> 00:59:19.424
The declarations appear immediately after the

NOTE Confidence: 0.78239224

abaf8668-a255-4fba-859c-12bfecc5560e
00:59:19.424 --> 00:59:22.110
previous iterator pair equivalent things.

NOTE Confidence: 0.78239224

c4209f9d-dffd-41e9-91a2-37f5b7e08d04
00:59:22.110 --> 00:59:23.262
So generally speaking,

NOTE Confidence: 0.78239224

66bf4ec7-ebf7-47d2-bf5f-69b5525e1012
00:59:23.262 --> 00:59:25.566
if you click the up arrow,

NOTE Confidence: 0.78239224

97f9dfd1-1e92-447e-835e-9cc83f3ba067
00:59:25.570 --> 00:59:29.220
you can compare straight across.

NOTE Confidence: 0.78239224

8a47c1dd-5de4-4ef7-82d1-5c74ae5a0217
00:59:29.220 --> 00:59:31.908
And OK for all the constructors and opinion.

NOTE Confidence: 0.78239224

9cdb39ec-231c-496a-9162-eae3238cc82a
00:59:31.910 --> 00:59:33.737
They just sign range not so much,

NOTE Confidence: 0.78239224

2babc965-60c2-4dc6-96d0-d465540ada08
00:59:33.740 --> 00:59:35.488
but insert for example.

NOTE Confidence: 0.78239224

7477a0c0-3dad-4cbb-8637-24fea486e1bf
00:59:35.488 --> 00:59:37.826
That's very helpful advice, thank you,

NOTE Confidence: 0.78239224

23cd5fd4-9b24-4e71-80b9-4cc0a18e96dd
00:59:37.826 --> 00:59:40.170
yeah, so we can see that this is

NOTE Confidence: 0.78239224

bd781dac-ab13-4185-a8bb-8059fb35642f
00:59:40.239 --> 00:59:41.429
being appropriately constructed here.

NOTE Confidence: 0.78239224

11359f30-9417-4999-9b87-29e833085852
00:59:41.429 --> 00:59:43.410
We don't need to verify the range

NOTE Confidence: 0.78239224

300eae59-03dc-4e43-b7dd-aaf65583f429
00:59:43.454 --> 00:59:44.756
because we were given a range,

NOTE Confidence: 0.78239224

fba96b46-6439-4dbe-b85e-c0c4de2d9919
00:59:44.760 --> 00:59:46.412
so we know we're not gonna accidentally

NOTE Confidence: 0.78239224

929b64db-f971-4d9c-8077-f0675eb814c7
00:59:46.412 --> 00:59:48.079
confuse begin and end and mismatch them,

NOTE Confidence: 0.78239224

c816a404-8b36-4ff3-bee4-1b04c615a0ab
00:59:48.080 --> 00:59:49.092
or do wacky things.

NOTE Confidence: 0.78239224

477e4a5e-1598-461d-9937-9b20fb4c638f
00:59:49.092 --> 00:59:51.151
And we are doing the unwrapping as just

NOTE Confidence: 0.78239224

77eb217f-0431-4e10-88d1-2ba7ced89c24
00:59:51.151 --> 00:59:52.852
phrased as you begin rather than going

NOTE Confidence: 0.78239224

2db8466b-d502-4e0f-aa24-b8e0275f6a61
00:59:52.852 --> 00:59:55.139
to wrapped because we start with the range.

NOTE Confidence: 0.78239224

0f7984db-258d-4d6b-b23e-249f3a3e442d
00:59:55.140 --> 00:59:57.930
OK, so that's good insert.

NOTE Confidence: 0.78239224

80f5cca2-d30e-4cd3-a92b-1f2245724f98
00:59:57.930 --> 00:59:59.438
This is getting unwrapped.

NOTE Confidence: 0.78239224

3fcdf6d3-180b-46d1-9666-4c6b6f452caf
00:59:59.438 --> 01:00:01.700
This is just drive by cleanup.

NOTE Confidence: 0.78239224

81b3fdfc-9f50-425a-be43-e9e270e54cbe
01:00:01.700 --> 01:00:02.774
I don't know why Clang format

NOTE Confidence: 0.78239224

3578fc94-d6ad-4aae-bbc8-030aed47aedc
01:00:02.774 --> 01:00:03.710
decided need to wrap this,

NOTE Confidence: 0.78239224

ab05b1e1-5250-433d-a333-3faf6f132ae3
01:00:03.710 --> 01:00:05.678
but this change is obviously correct.

NOTE Confidence: 0.78239224

586f0c2d-2b6e-459d-ae5b-c79548d17fd5
01:00:05.680 --> 01:00:07.680
UM, OK, now we're adding.

NOTE Confidence: 0.78239224

99085437-9edc-4a97-9b1d-f87487884a28
01:00:07.680 --> 01:00:10.320
So we got this thing here.

NOTE Confidence: 0.78239224

dd88f0ed-58eb-4111-8e70-1f605cfc5abb
01:00:10.320 --> 01:00:14.700
Products horrible and then prepend range.

NOTE Confidence: 0.78239224

f606cd42-1f75-41e4-a07d-d2ddcfdac37f
01:00:14.700 --> 01:00:17.760
OK if def seedlip containers ranges.

NOTE Confidence: 0.78239224

f70c6941-5710-482c-8667-98edff1c7c09
01:00:17.760 --> 01:00:17.931
Yep,

NOTE Confidence: 0.78239224

3e632604-4c58-4930-ba5b-820c0056fcae
01:00:17.931 --> 01:00:19.299
I'm not too worried about the spelling here,

NOTE Confidence: 0.78239224

036b77da-f51d-438a-88d1-fb46c7908ccc
01:00:19.300 --> 01:00:21.435
because you know, test coverage

NOTE Confidence: 0.78239224

d0a231be-2781-4a36-80bb-0c02b9948c3c
01:00:21.435 --> 01:00:23.570
will notice these things missing.

NOTE Confidence: 0.78239224

aecc50ff-0751-4da5-b766-95f03236aa82
01:00:23.570 --> 01:00:27.119
Template on container compatible range tie R.

NOTE Confidence: 0.78239224

a1ca1295-0203-4a68-808c-cb886f5c1b12
01:00:27.120 --> 01:00:30.208
Void return prepend range.

NOTE Confidence: 0.78239224

766a5430-e80f-4c74-869b-8d2c67057154
01:00:30.208 --> 01:00:32.524
Range dropper frange.

NOTE Confidence: 0.78239224

85949340-19b1-44e6-883d-4e2fdaf4f521
01:00:32.530 --> 01:00:34.754
OK, I was going going back and thinking

NOTE Confidence: 0.78239224

64260d51-5f03-41c3-819a-e549de3c1a04
01:00:34.754 --> 01:00:36.390
do we need to strengthen anything?

NOTE Confidence: 0.78239224

2c3989c6-3600-4455-a9a4-f580bc0fea35
01:00:36.390 --> 01:00:36.970
But no,

NOTE Confidence: 0.78239224

cf2718df-455a-41b5-b313-5e40ce8e436c
01:00:36.970 --> 01:00:38.710
these things are totally allocating memory,

NOTE Confidence: 0.78239224

6ac580d3-6b8d-4c89-b0e5-3b417fe9073d
01:00:38.710 --> 01:00:41.140
so no possible strengthening there.

NOTE Confidence: 0.78239224

136aa040-b357-425e-96fb-5b93a638b81d
01:00:41.140 --> 01:00:43.786
OK, going back to prepend range.

NOTE Confidence: 0.78239224

567874e3-03d8-4a4c-b9b5-87806ec7c6f1
01:00:43.790 --> 01:00:45.520
OK so.

NOTE Confidence: 0.798821513333333

09d0c3cf-030d-4da0-bf9a-94036b13d05c
01:00:52.490 --> 01:00:53.134
Interesting again,

NOTE Confidence: 0.798821513333333

fb2460d4-bfce-4ecb-83d9-beed95122806
01:00:53.134 --> 01:00:55.388
we should probably look at what's no,

NOTE Confidence: 0.798821513333333

b7b75f81-6cee-4f36-abf7-de2c894d410a
01:00:55.390 --> 01:00:58.990
this is, uh, not the same as before.

NOTE Confidence: 0.798821513333333

7197dfd5-1529-4977-91b1-501e7d551626
01:00:58.990 --> 01:01:00.992
We've got this list node insert opt

NOTE Confidence: 0.798821513333333

60f117d0-0bc4-41cd-96de-9a3eb1adb156
01:01:00.992 --> 01:01:03.280
2 for when we're inserting stuff.

NOTE Confidence: 0.798821513333333

831d0232-3a67-41a6-a5f8-0a0a0dde1cff
01:01:03.280 --> 01:01:07.100
This helps with exception safety.

NOTE Confidence: 0.798821513333333

2c5dbb20-1a1d-4825-bbba-61e7bfe56370
01:01:07.100 --> 01:01:11.240
This is I see this is simply a pending.

NOTE Confidence: 0.798821513333333

48ba207c-8cd5-4408-9ddb-4f5c47fd5719
01:01:11.240 --> 01:01:15.450
To the end of the. List.

NOTE Confidence: 0.798821513333333

1c58cd74-3e34-4d63-9177-1bbd20bf6d78
01:01:15.450 --> 01:01:18.978
And then we do a little bit of surgery.

NOTE Confidence: 0.798821513333333

04df54bd-9894-480d-b3be-91e72839c7cc
01:01:18.980 --> 01:01:20.600
Oh no, sorry it's not adding to the list,

NOTE Confidence: 0.798821513333333

ceb2f9e7-f570-41d1-ae73-52f80dd0825b
01:01:20.600 --> 01:01:23.267
it's attaching these nodes to this list.

NOTE Confidence: 0.798821513333333

345d14a4-552a-4aed-a521-3427ebb9e28e
01:01:23.270 --> 01:01:27.158
Node insert up and then if it all succeeds.

NOTE Confidence: 0.798821513333333

f5716977-457c-4a1c-8724-3b14ff539a6a
01:01:27.160 --> 01:01:29.959
We attach it to the beginning of the list,

NOTE Confidence: 0.798821513333333

34b1e553-2a2d-438a-bf2f-40f16b7218f5
01:01:29.960 --> 01:01:31.776
that's this, attached before.

NOTE Confidence: 0.798821513333333

715a0ea1-4772-4377-8ee1-00c9c5caeb36
01:01:31.776 --> 01:01:33.138
If anything fails,

NOTE Confidence: 0.798821513333333

866654b7-d047-49fa-ad10-4fa951937e64
01:01:33.140 --> 01:01:36.029
then we haven't actually modified the

NOTE Confidence: 0.798821513333333

e874c684-b565-4282-ad16-e628556493eb
01:01:36.029 --> 01:01:38.612
container and the list node insert up

NOTE Confidence: 0.798821513333333

8c8c955d-dcaa-4e66-bb7e-da4e0f582e87
01:01:38.612 --> 01:01:41.619
to will handle destroying everything.

NOTE Confidence: 0.798821513333333

1b2e2451-fb94-4d43-a9a4-ba6bdcede3e9
01:01:41.620 --> 01:01:43.377
So that implies to me that we're

NOTE Confidence: 0.798821513333333

37b02d66-f594-4227-bbae-8aa3124d51fa
01:01:43.377 --> 01:01:44.814
getting some sort of strong

NOTE Confidence: 0.798821513333333

dd511b0b-f427-4cfb-b665-75d3acf19786
01:01:44.814 --> 01:01:46.078
exception guarantee that prepend

NOTE Confidence: 0.798821513333333

0db6f81c-d288-4c4e-a1eb-76cc67718fbb
01:01:46.078 --> 01:01:47.800
range is supposed to achieve.

NOTE Confidence: 0.798821513333333

ab53e513-0302-41f6-a57f-934e306ad0ea
01:01:47.800 --> 01:01:50.830
Let's see if that's the case.

NOTE Confidence: 0.798821513333333

3ad5562b-b680-4356-89a2-276733fdfef9
01:01:50.830 --> 01:01:52.660
That's maybe universal

NOTE Confidence: 0.798821513333333

f77287fb-8b72-4a74-b9c4-31b509f9c808
01:01:52.660 --> 01:01:53.880
container requirements.

NOTE Confidence: 0.6584351012

81648a7c-d671-48e4-9793-a5f997ebe04e
01:01:56.130 --> 01:01:59.150
No, it's specific OK for.

NOTE Confidence: 0.785815308461538

acaebda1-46a0-44b3-8764-3a9e7abc27dd
01:02:03.210 --> 01:02:05.016
Why is this? Why is this only

NOTE Confidence: 0.785815308461538

564ccf21-4c92-4b08-8040-72afbd96b382
01:02:05.016 --> 01:02:06.890
calling out pre append range here?

NOTE Confidence: 0.785815308461538

f2920bd0-3b2c-4de1-be6c-5183da523dc8
01:02:06.890 --> 01:02:09.230
What about prepend?

NOTE Confidence: 0.785815308461538

9bc44e48-cfc0-49ca-96a8-32539b94aa78
01:02:09.230 --> 01:02:10.862
Covered by general requirements.

NOTE Confidence: 0.785815308461538

fff6d5ef-695c-45c4-9d84-991b334ce95c
01:02:10.862 --> 01:02:15.950
Ohh is it is is it general? Yes.

NOTE Confidence: 0.785815308461538

61cc7b0e-7240-47f4-a016-f3ab743868e8
01:02:15.950 --> 01:02:17.658
Why? Why is only a penny range

NOTE Confidence: 0.785815308461538

e4421b55-1767-463f-8321-28cdb905a870
01:02:17.658 --> 01:02:18.969
being called out here then?

NOTE Confidence: 0.785815308461538

496ffc80-a90f-48cd-bca1-44c6b4eeb640
01:02:18.970 --> 01:02:20.540
Now there must be something

NOTE Confidence: 0.785815308461538

8de209cd-c2c0-48ea-aa58-fd034f6bf02a
01:02:20.540 --> 01:02:22.710
special about a pin range. Yeah.

NOTE Confidence: 0.6658008475

1208acde-6105-4992-9f54-beb3aa56a9ff
01:02:25.700 --> 01:02:27.348
Multiple elements is linear.

NOTE Confidence: 0.622705091666667

786a11dc-a02c-4fde-b969-bb724072aab9
01:02:32.230 --> 01:02:33.649
Doesn't affect iterators

NOTE Confidence: 0.622705091666667

54c96b62-9bd4-4ce7-a7e4-da68c4608a29
01:02:33.649 --> 01:02:35.068
and references maybe?

NOTE Confidence: 0.622705091666667

8c77ce54-3c5a-48f5-a7a0-6eaf16cdc165
01:02:35.070 --> 01:02:38.290
But Prepend should be exactly the same.

NOTE Confidence: 0.622705091666667

00fc284f-5e45-46f3-a2c5-c600dd35a1ee
01:02:38.290 --> 01:02:39.898
This is just an editorial thing

NOTE Confidence: 0.622705091666667

ebf6870f-61b5-4e0f-a7f6-b989b2c12dc7
01:02:39.898 --> 01:02:40.970
that prepended rain should

NOTE Confidence: 0.622705091666667

760d9824-65ea-4239-9512-294e308a1b96
01:02:41.018 --> 01:02:42.218
have been called out here.

NOTE Confidence: 0.622705091666667

04a3181c-3f39-419c-b435-d0df3db6f18c
01:02:42.220 --> 01:02:42.980
What? What is this?

NOTE Confidence: 0.622705091666667

154df5a9-41c9-4541-8737-9e4764245429
01:02:42.980 --> 01:02:44.120
This is a list dot modifiers.

NOTE Confidence: 0.622705091666667

acb85c95-6327-4d38-8062-c5617835dc5e
01:02:44.120 --> 01:02:45.260
Let's actually look at the standard.

NOTE Confidence: 0.63023879045

2b3e7ae5-94e1-463d-8891-5f47fb57a689
01:02:52.960 --> 01:02:55.616
Retainers sequence like don't

NOTE Confidence: 0.63023879045

96027051-d927-4fdd-8b2b-e7ba034512b8
01:02:55.616 --> 01:02:59.600
want the synopsis of what the

NOTE Confidence: 0.63023879045

354c38b6-c367-45ee-a634-13a8d014ac1f
01:02:59.713 --> 01:03:02.637
actual thing modifiers OK.

NOTE Confidence: 0.63023879045

5221dc27-9f03-406c-8567-c0e539f10956
01:03:02.640 --> 01:03:06.756
Go away. I want to die zoom OK.

NOTE Confidence: 0.850088519

b7beeec5-19cc-4d86-9a9f-74b0d4cfcfda
01:03:09.000 --> 01:03:11.920
Oh, I see. It's just a whole bunch of spam.

NOTE Confidence: 0.850088519

0cb311b7-c142-449c-9065-7ae99ca54378
01:03:11.920 --> 01:03:13.006
Preponderant pushback pushback

NOTE Confidence: 0.850088519

fdfdbae3-e9b9-4ff6-a93b-00138124b15d
01:03:13.006 --> 01:03:15.095
append range all of them, OK?

NOTE Confidence: 0.850088519

24c28b7c-3d3e-4785-816a-f5e2e3f441c8
01:03:15.095 --> 01:03:17.020
I think that I was just confused

NOTE Confidence: 0.850088519

fc837f74-79a4-479b-872d-cec2d617532e
01:03:17.020 --> 01:03:18.733
by reading Oh yeah, here we go.

NOTE Confidence: 0.850088519

f1d9defe-0834-4ec1-a6af-e4cd5bffb59e
01:03:18.733 --> 01:03:20.865
OK so actually yeah it is the whole spam

NOTE Confidence: 0.850088519

16b5c069-8731-4d6e-81ea-8fe949655a5a
01:03:20.865 --> 01:03:22.677
since we've got this existing stuff.

NOTE Confidence: 0.850088519

cadc5898-5a1e-4572-bbe9-3f8f35fbe95c
01:03:22.680 --> 01:03:23.588
I was confused too.

NOTE Confidence: 0.850088519

632d2c47-2d2c-411b-b650-5f50786199c9
01:03:23.588 --> 01:03:25.083
By the way, you you're moving

NOTE Confidence: 0.850088519

f32a4aaf-baaf-46bf-935b-fe623e274701
01:03:25.083 --> 01:03:26.438
the wording around fast enough.

NOTE Confidence: 0.850088519

d172d130-bafc-410b-878d-8fef2c2fa90f
01:03:26.440 --> 01:03:27.500
I thought that was synopsis.

NOTE Confidence: 0.850088519

847f1bbb-a1bb-469e-9a7e-0e4ea50011b2
01:03:27.500 --> 01:03:31.136
Still, I didn't realize these were

NOTE Confidence: 0.850088519

42ea20c8-29dc-4e7e-ae36-085586e39c20
01:03:31.136 --> 01:03:32.954
exactly detailed declarations.

NOTE Confidence: 0.850088519

0f967ad9-83aa-4a87-8540-ca47417e85d2
01:03:32.960 --> 01:03:34.244
Yeah, I thought I was looking

NOTE Confidence: 0.850088519

3067c87e-db59-47d5-9bd9-941537af5016
01:03:34.244 --> 01:03:35.320
at synopsis up here too.

NOTE Confidence: 0.850088519

ec537276-6df4-417b-aec5-7f1adae243b2
01:03:35.320 --> 01:03:37.300
OK, so that's good.

NOTE Confidence: 0.850088519

40c4f8c0-4806-4ebd-982e-d64144e7ce20
01:03:37.300 --> 01:03:39.099
So it is this is required to

NOTE Confidence: 0.850088519

85896309-e9c6-4c33-8fa8-869f7c7cecbd
01:03:39.099 --> 01:03:40.520
have the strong guarantee,

NOTE Confidence: 0.850088519

0240bfc0-6576-430d-bb53-64dbc9144b99
01:03:40.520 --> 01:03:42.776
which is why we're doing this insert up.

NOTE Confidence: 0.850088519

b677c17c-5469-4987-aa28-2c2652556448
01:03:42.780 --> 01:03:45.168
If we were simply.

NOTE Confidence: 0.850088519

967d8344-6feb-4051-b6e7-a4070b28ca9e
01:03:45.170 --> 01:03:46.685
Directly Prepending UM,

NOTE Confidence: 0.850088519

8d9f9a76-8e0a-4273-903b-b326020cf4fd
01:03:46.685 --> 01:03:51.249
then it would be harder for us to unwind.

NOTE Confidence: 0.850088519

ea42bd9d-43fc-46e0-a40c-5a80c39f6f88
01:03:51.250 --> 01:03:52.318
We could, UM,

NOTE Confidence: 0.850088519

b6697471-0a00-4aa1-8d20-6584bfbd7439
01:03:52.318 --> 01:03:56.329
but we'd be doing a lot of extra work here.

NOTE Confidence: 0.850088519

a82c2dd7-154e-41cf-b633-3e0489a84e0c
01:03:56.330 --> 01:03:57.596
We get to make that chain,

NOTE Confidence: 0.850088519

262cf22c-1b41-4bbd-8e66-46944b6b2271
01:03:57.600 --> 01:03:59.216
and we only have to stitch it at

NOTE Confidence: 0.850088519

06087139-2016-4dff-814c-18c5e01ae443
01:03:59.216 --> 01:04:01.079
the very end to the beginning of

NOTE Confidence: 0.850088519

7cf31323-d907-409c-98e0-04f18df8c77a
01:04:01.079 --> 01:04:02.484
the list by appending essentially

NOTE Confidence: 0.850088519

bd352855-fef5-42a7-a458-fe5312529721
01:04:02.539 --> 01:04:04.405
the end of the beginning rather

NOTE Confidence: 0.850088519

970d4901-001c-4fc4-8023-3d8cf2059bc4
01:04:04.405 --> 01:04:05.649
than like repeatedly inserting.

NOTE Confidence: 0.850088519

0a88068f-6a61-4163-aa79-0e4a4da071d5
01:04:05.650 --> 01:04:06.750
So this is efficient.

NOTE Confidence: 0.850088519

9149eb1c-7e37-4d27-9bd2-b4fcdff7bc39
01:04:06.750 --> 01:04:07.575
This is good.

NOTE Confidence: 0.889930885714286

dcc2590c-ee2b-4551-941a-2309b1d26291
01:04:10.180 --> 01:04:12.070
Yes, I see nothing wrong with this.

NOTE Confidence: 0.75859012875

335c2980-e0c8-4f85-b916-360a536b5630
01:04:15.470 --> 01:04:17.078
And this just structurally

NOTE Confidence: 0.75859012875

8a6b72cb-eb01-413a-a462-64db4ce90d13
01:04:17.078 --> 01:04:18.686
guarantees strong exception safety,

NOTE Confidence: 0.75859012875

6d9eeab7-e7f8-49a0-9bc7-f1275545c816
01:04:18.690 --> 01:04:20.570
so I don't even need to ask for.

NOTE Confidence: 0.75859012875

76d9b38a-f73c-491f-97b8-219db81b3072
01:04:20.570 --> 01:04:21.458
Hey, you know, we should have,

NOTE Confidence: 0.75859012875

cb723a98-91cf-4ab7-8a76-428d9b3efed7
01:04:21.460 --> 01:04:22.995
like you know, some exception

NOTE Confidence: 0.75859012875

f2b283aa-fc32-4999-9543-fa296d476cf3
01:04:22.995 --> 01:04:24.223
handling tests or something.

NOTE Confidence: 0.75859012875

0ffb530d-bd6e-4869-aef9-c53afeb4caaf
01:04:24.230 --> 01:04:25.595
OK, so that means the pen range

NOTE Confidence: 0.75859012875

9a510aa0-014d-4d44-ab32-366ce40f445b
01:04:25.595 --> 01:04:27.085
is going to look very similar

NOTE Confidence: 0.75859012875

a338215e-2898-4937-8fdb-d92fbb6fc719
01:04:27.085 --> 01:04:28.505
if dev people containers ranges,

NOTE Confidence: 0.75859012875

c24da800-51a8-4153-bc4a-e0c3406904c4
01:04:28.510 --> 01:04:30.170
and because this is Casey,

NOTE Confidence: 0.75859012875

108aa365-d39c-4ab8-ab8b-224da0266cb5
01:04:30.170 --> 01:04:32.468
I'm pretty confident that all of

NOTE Confidence: 0.75859012875

41e13215-12e4-4c30-8a9e-0464242890bd
01:04:32.468 --> 01:04:34.904
these methods are being added in

NOTE Confidence: 0.75859012875

7315043c-0e73-4705-a286-33aba8191657
01:04:34.904 --> 01:04:36.994
sorted order matching sorted mean

NOTE Confidence: 0.75859012875

01d10df0-cf69-4501-9792-3e763f765a72
01:04:36.994 --> 01:04:39.430
matching the order and the standard.

NOTE Confidence: 0.75859012875

8b097877-ee33-4138-a055-5829938b4f46
01:04:39.430 --> 01:04:41.830
I can even see here it's

NOTE Confidence: 0.75859012875

1e4ef052-18aa-47ea-8b9c-c663eb917444
01:04:41.916 --> 01:04:44.000
push front prepend range.

NOTE Confidence: 0.75859012875

1022f8db-a00a-48fc-84dd-0b097b2c4a78
01:04:44.000 --> 01:04:46.817
I guess pop front this is not the synopsis.

NOTE Confidence: 0.75859012875

11315729-ba28-4513-b229-81a8f5c85907
01:04:46.820 --> 01:04:48.236
It should really match synopsis order.

NOTE Confidence: 0.75859012875

ba09a510-1a14-4680-b476-23fe590adf98
01:04:48.240 --> 01:04:49.458
Here we go.

NOTE Confidence: 0.75859012875

b24486bd-06af-4a86-b8e2-21b413fb5e8f
01:04:49.458 --> 01:04:51.894
Push front prepend range pop fronts.

NOTE Confidence: 0.75859012875

e7ac7e82-7c27-49ca-9945-7edfabd3c461
01:04:51.900 --> 01:04:53.430
That's why they're being inserted

NOTE Confidence: 0.75859012875

b875a350-e168-41b8-a196-a91523d3bb3e
01:04:53.430 --> 01:04:55.198
in that order, so this is good.

NOTE Confidence: 0.75859012875

73545d35-0738-4805-b2d9-8443fca65b44
01:04:55.198 --> 01:04:57.233
It helps to sort of verify that the

NOTE Confidence: 0.75859012875

b71475a8-c8fa-4618-aea4-7c9e95b7f30f
01:04:57.233 --> 01:04:58.649
implementation match the standard.

NOTE Confidence: 0.75859012875

8cc4a40b-65e6-48f1-aec5-fc72702e8d63
01:04:58.650 --> 01:05:00.450
We did not use to be disciplined about that.

NOTE Confidence: 0.75859012875

4fec0901-71f9-49bd-98ee-a19ca310cdbb
01:05:00.450 --> 01:05:02.586
Casey is disciplined, which is great.

NOTE Confidence: 0.75859012875

f86425ee-87b3-4dac-8ae4-3df7fa7b3667
01:05:02.590 --> 01:05:04.040
I have definitely been converted

NOTE Confidence: 0.75859012875

7bf53e9e-b68c-4e33-be0d-318c0d8174af
01:05:04.040 --> 01:05:05.708
over to the philosophy of, hey,

NOTE Confidence: 0.75859012875

8163417c-a143-4638-b29c-9496ba992554
01:05:05.708 --> 01:05:07.016
you know, that's the standard order.

NOTE Confidence: 0.75859012875

c5d6a470-fd43-4c60-b41b-c47269b0ea22
01:05:07.020 --> 01:05:08.357
Unless there's a good reason not to.

NOTE Confidence: 0.788737526111111

f27f4f97-ddc1-40b6-bf38-37707c4f228c
01:05:10.760 --> 01:05:12.044
OK, so if dev containers ranges

NOTE Confidence: 0.788737526111111

d4a378c2-c6d9-4252-ad27-9b0d7cac31ce
01:05:12.044 --> 01:05:13.674
same sort of deal I can just

NOTE Confidence: 0.788737526111111

b53daad4-6366-4d4e-8646-a8ec476e8d11
01:05:13.674 --> 01:05:14.879
compare these against each other,

NOTE Confidence: 0.788737526111111

d3840937-9a44-4d2d-8ac9-a2c7d7063df8
01:05:14.880 --> 01:05:17.015
append range again the insert OPP we

NOTE Confidence: 0.788737526111111

80fba6d8-58cc-4312-bfe3-1f23092ee1ef
01:05:17.015 --> 01:05:19.993
do the exact same thing but we attach

NOTE Confidence: 0.788737526111111

6251699c-78d3-4692-8fd3-69f866fb3e37
01:05:19.993 --> 01:05:21.988
differently instead of attached before.

NOTE Confidence: 0.788737526111111

10e4a2ab-bb6e-4ecc-94e6-0e819701780b
01:05:21.990 --> 01:05:24.662
Which is. Umm? At the front of the

NOTE Confidence: 0.788737526111111

e11562b0-2354-4d55-909c-51d33ad7f195
01:05:24.662 --> 01:05:27.387
list here we just say attach an end.

NOTE Confidence: 0.788737526111111

81558d36-65c9-46c8-ad9b-d10fa2fd83e4
01:05:27.390 --> 01:05:32.518
Yep, that's good. OK, that's pen range.

NOTE Confidence: 0.788737526111111

94abae79-6e35-43e3-8055-2a6c02f11239
01:05:32.520 --> 01:05:36.308
And then assign unchecked.

NOTE Confidence: 0.788737526111111

704358e5-00be-4f4a-adf7-c932bcb8c7f0
01:05:36.310 --> 01:05:40.306
That will help with assign range.

NOTE Confidence: 0.788737526111111

6526d181-3a33-4686-91c0-782f130a3fa5
01:05:40.310 --> 01:05:43.250
This is. Quite large interesting.

NOTE Confidence: 0.824285932222222

7b17e80d-a476-4040-9fbc-824ca4424515
01:05:47.660 --> 01:05:50.099
It's a little bit different than a sign cast.

NOTE Confidence: 0.7208733

f278211e-13b6-4661-b277-00112c0183da
01:05:55.260 --> 01:05:56.996
But significantly different OK?

NOTE Confidence: 0.7208733

72680bfc-da2b-41d9-93e5-98e37c6f711e
01:05:56.996 --> 01:05:58.298
What are you?

NOTE Confidence: 0.7208733

00413b5d-6956-4353-813d-e7a05fa85aa2
01:05:58.300 --> 01:06:01.696
Where did assign cast come from?

NOTE Confidence: 0.7208733

e667a4cc-4572-4a5b-80eb-cd8b1634b6e8
01:06:01.700 --> 01:06:03.815
This is new in the sense it was added.

NOTE Confidence: 0.7208733

52cb71d2-6d82-4928-9921-51818775b329
01:06:03.820 --> 01:06:05.190
Like yeah this is added

NOTE Confidence: 0.7208733

7e177103-16db-4b76-bc36-979429d42419
01:06:05.190 --> 01:06:06.560
like the last five years.

NOTE Confidence: 0.7208733

edc419ff-76fa-4472-a9e9-049d4e4ff5eb
01:06:06.560 --> 01:06:08.576
So as far as I'm concerned it's new.

NOTE Confidence: 0.7208733

20950971-e87f-4e77-bbd7-0e9580d802fd
01:06:08.580 --> 01:06:10.578
I have pretty good memories from

NOTE Confidence: 0.7208733

a93a32c4-fae5-4ca8-93ec-d3f259a10fd8
01:06:10.578 --> 01:06:12.653
like when I originally learned all

NOTE Confidence: 0.7208733

fd9fe0ba-f1be-4363-a931-6600a4d8cf5c
01:06:12.653 --> 01:06:14.693
the containers like 10 years ago.

NOTE Confidence: 0.7208733

85748c5b-254e-457a-82db-b69b0b12c923
01:06:14.700 --> 01:06:17.262
OK, this is being used over in

NOTE Confidence: 0.7208733

408d36cd-921d-41b8-9a33-857a1f7bb51e
01:06:17.262 --> 01:06:18.360
the unordered containers.

NOTE Confidence: 0.7208733

22a68c6d-4018-4fc5-95ba-cc5e2a85ca1b
01:06:18.360 --> 01:06:22.616
OK, so. It's likely this is Billy

NOTE Confidence: 0.7208733

6a5f0cad-f3f9-4a7f-a16a-22710a4d76a8
01:06:22.616 --> 01:06:23.832
O'Neill overhauling.

NOTE Confidence: 0.7208733

5fe6d1d7-0c41-48c0-a404-3a71ae065b06
01:06:23.840 --> 01:06:27.494
Yeah yeah, when we do a move.

NOTE Confidence: 0.7208733

58ea889c-1dab-4ccb-825a-9fb287a46ec3
01:06:27.500 --> 01:06:30.122
Construction or sorry,

NOTE Confidence: 0.7208733

e0660cc0-5ab2-49d3-b035-867ebaf1c2bb
01:06:30.122 --> 01:06:31.870
move assignment.

NOTE Confidence: 0.7208733

65a0f9e9-5fc5-4b71-95d2-3e24df192b60
01:06:31.870 --> 01:06:34.546
If we're supposed to propagate allocators,

NOTE Confidence: 0.7208733

4b044140-c800-46a4-a3d3-88536d4411e2
01:06:34.550 --> 01:06:37.497
or sorry if we're not supposed to

NOTE Confidence: 0.7208733

7e480cd5-e4f7-45cb-9195-ae1fe451766f
01:06:37.497 --> 01:06:38.339
propagate allocators.

NOTE Confidence: 0.7208733

0cf4d331-1699-4233-8b14-de8ee2ec11dd
01:06:38.340 --> 01:06:44.257
Then we just assign the guts in place.

NOTE Confidence: 0.889037425

4372af59-7923-451f-8fbc-96e2cba99b8e
01:06:50.710 --> 01:06:52.362
Because we want to reuse as much

NOTE Confidence: 0.889037425

da079cda-38ac-4318-8d31-117b0b1d1726
01:06:52.362 --> 01:06:53.919
memory as we have basically.

NOTE Confidence: 0.801971463529412

3f3d2d3e-7dc6-484d-bee1-c25e293bae5f
01:06:59.720 --> 01:07:02.452
Yeah, we say hey list we need to sign you and

NOTE Confidence: 0.801971463529412

86c675e1-9c20-47c9-9349-2ec705010e95
01:07:02.452 --> 01:07:04.666
then reinsert everything into the buckets.

NOTE Confidence: 0.801971463529412

dd9235a4-e6da-4e75-a1fc-843e18ef414a
01:07:04.670 --> 01:07:06.038
OK, so that's where this is coming from.

NOTE Confidence: 0.801971463529412

da241e61-4b88-4def-8008-133f1da964d2
01:07:06.040 --> 01:07:08.498
Interesting, so we since you have a private

NOTE Confidence: 0.801971463529412

f53724fc-a789-484e-92e8-24451f7c96b8
01:07:08.498 --> 01:07:10.864
member function on lists that exists only

NOTE Confidence: 0.801971463529412

f97cd00f-bf43-4894-a890-e5058240a25e
01:07:10.864 --> 01:07:12.958
for the purpose of unordered because

NOTE Confidence: 0.801971463529412

981d5f14-6b7b-474f-be04-9cb3a1085a23
01:07:12.958 --> 01:07:14.853
we implemented the unordered containers

NOTE Confidence: 0.801971463529412

1ba386bf-07fd-496e-bc61-557f8097ba6a
01:07:14.853 --> 01:07:18.078
bidirectional link list, because why not?

NOTE Confidence: 0.801971463529412

72f64782-9fa3-4b6f-b63e-25b1229a329f
01:07:18.080 --> 01:07:20.906
Taking away constantly can assign to.

NOTE Confidence: 0.801971463529412

91ea9f25-5f07-4b1b-8966-056f42afec06
01:07:20.910 --> 01:07:25.990
Yeah, yeah, that's really dirty things.

NOTE Confidence: 0.801971463529412

f6026bdc-fb38-4295-8896-10a7fea65288
01:07:25.990 --> 01:07:27.686
Look away, look away.

NOTE Confidence: 0.801971463529412

6887729e-f65a-41e8-b5c7-09f813079f5f
01:07:27.686 --> 01:07:29.354
OK, this is doing something

NOTE Confidence: 0.801971463529412

8137f4d3-f5a0-4fd7-9671-25fb26ada818
01:07:29.354 --> 01:07:30.287
significantly less evil,

NOTE Confidence: 0.801971463529412

d49c99fa-e4b7-44da-902a-02fcfdb0ebd5
01:07:30.290 --> 01:07:31.290
but still sort of similar,

NOTE Confidence: 0.801971463529412

1ba9af0a-7f39-4941-82a7-550af2cb866d
01:07:31.290 --> 01:07:33.765
which is why it's being added at this place.

NOTE Confidence: 0.801971463529412

8a89ad48-81f8-4dfc-abd1-051e95e69689
01:07:33.770 --> 01:07:36.969
So this is now templated on Iterator

NOTE Confidence: 0.801971463529412

c28bed95-969f-4854-a6b0-d9325ee15074
01:07:36.969 --> 01:07:39.105
and Sentinel assign unchecked

NOTE Confidence: 0.801971463529412

8d7a87a8-2dcf-487b-84c1-d2a8b6b78799
01:07:39.105 --> 01:07:41.825
interfirst consentino last assign

NOTE Confidence: 0.801971463529412

e7b83ccb-f7a1-4384-aad0-7cf3e169da77
01:07:41.825 --> 01:07:44.545
inclusive first exclusive last.

NOTE Confidence: 0.801971463529412

13cf33a2-e986-4acd-b022-087554211902
01:07:44.550 --> 01:07:48.090
OK, consulado, my end is my prior to my head,

NOTE Confidence: 0.801971463529412

aac01822-cbc6-4dee-a6c3-4518f7c1cb35
01:07:48.090 --> 01:07:49.810
so that's the Sentinel pointer.

NOTE Confidence: 0.801971463529412

9efee580-6677-41e0-8182-42c107958edf
01:07:49.810 --> 01:07:53.986
Auto old is my end next.

NOTE Confidence: 0.801971463529412

e180c05f-0e80-4f79-be81-2c7354bb7244
01:07:53.990 --> 01:07:57.476
OK, all points to in general

NOTE Confidence: 0.801971463529412

4802053b-72ad-4a1e-8d68-cb3c51fdc042
01:07:57.476 --> 01:08:00.400
the first element of the.

NOTE Confidence: 0.801971463529412

317cad68-6ee1-4d15-9f39-913c60779784
01:08:00.400 --> 01:08:02.600
List or the Sentinel itself,

NOTE Confidence: 0.801971463529412

e0615e1b-58f4-4246-9676-5779423c4b76
01:08:02.600 --> 01:08:04.550
if the list is empty, OK,

NOTE Confidence: 0.801971463529412

b918c132-5770-4cf5-a735-083db6f99ad1
01:08:04.550 --> 01:08:05.900
so this is saying forever.

NOTE Confidence: 0.801971463529412

fe5fb9f6-67d4-4a2a-bd25-ef11c5135fd0
01:08:05.900 --> 01:08:08.060
Attempt to reuse a node.

NOTE Confidence: 0.801971463529412

b4383083-be36-4f5f-819f-e1e3c7cbb4de
01:08:08.060 --> 01:08:10.676
If first is equal to last,

NOTE Confidence: 0.801971463529412

b05285ec-970c-42aa-a58b-389d43283052
01:08:10.680 --> 01:08:12.468
that means we are now done.

NOTE Confidence: 0.801971463529412

bcdbfb95-58ff-476c-965e-657ef9a8c5fe
01:08:12.470 --> 01:08:13.841
We've consumed everything

NOTE Confidence: 0.801971463529412

6ffcc0b7-3613-4c32-944f-dadddd136b4b
01:08:13.841 --> 01:08:15.669
from the simple range,

NOTE Confidence: 0.801971463529412

70a3738b-be0d-4011-8c6c-851f1da324da
01:08:15.670 --> 01:08:17.450
so indeed input sequence exhausted,

NOTE Confidence: 0.801971463529412

cf5cb2e5-f474-4976-acd7-f42ee348e7b5
01:08:17.450 --> 01:08:19.652
destroying the allocate any tail of

NOTE Confidence: 0.801971463529412

130a2b98-f838-4180-96f3-e0237a019ab9
01:08:19.652 --> 01:08:21.825
unneeded notes unchecked, erased from old.

NOTE Confidence: 0.801971463529412

dffff46a-ff32-4989-894f-7d22743315c8
01:08:21.825 --> 01:08:24.310
All the way up to my end.

NOTE Confidence: 0.801971463529412

130d00b9-c3b8-4b89-b2c9-bc1b744bba8a
01:08:24.310 --> 01:08:26.305
Which could be empty if we've exhausted

NOTE Confidence: 0.801971463529412

80338871-8c78-44bd-8237-f00fe1e95cc6
01:08:26.305 --> 01:08:28.188
everything exactly, then return void.

NOTE Confidence: 0.801971463529412

0ab4c2a5-dbb6-4992-a3e6-c49319cb31f7
01:08:28.188 --> 01:08:31.750
OK otherwise first is not equal to last,

NOTE Confidence: 0.801971463529412

97c89727-5bbe-4709-aefa-79f5a38bed79
01:08:31.750 --> 01:08:34.074
so we do need to assign something

NOTE Confidence: 0.801971463529412

4204720c-c2b0-4abe-8538-2a97ba393b1d
01:08:34.080 --> 01:08:37.496
if old is equal to my end.

NOTE Confidence: 0.801971463529412

022bd04a-8325-4f0e-aaf9-32ff66b89428
01:08:37.500 --> 01:08:39.378
Then we've run out of notes.

NOTE Confidence: 0.801971463529412

f852379e-babe-4cac-bdb6-f18ee7c78b1c
01:08:39.380 --> 01:08:40.330
No more notes to reuse.

NOTE Confidence: 0.801971463529412

3c1744f2-4ec2-4c87-bc88-816425725f0e
01:08:40.330 --> 01:08:44.058
Append the rest so.

NOTE Confidence: 0.801971463529412

758dcc63-0e69-49ef-a597-244b23529b96
01:08:44.060 --> 01:08:46.640
This is going to have strong

NOTE Confidence: 0.801971463529412

b8a784df-8a6b-401b-8328-b9b71e482f37
01:08:46.640 --> 01:08:47.500
exception safety.

NOTE Confidence: 0.801971463529412

85529fde-60b4-4c7f-9f6e-d2abbbd69ad9
01:08:47.500 --> 01:08:49.060
Which I'm not convinced is necessary.

NOTE Confidence: 0.801971463529412

04b5f569-a980-4a46-9d84-f24ed9d8a959
01:08:49.060 --> 01:08:52.966
We'll check that we'll append everything.

NOTE Confidence: 0.801971463529412

2eba907d-c591-4b7c-b433-1c2796ad9dd5
01:08:52.970 --> 01:08:54.402
By moving in first,

NOTE Confidence: 0.801971463529412

e6a79dfa-d9b5-4d02-9f66-8d6f383dc532
01:08:54.402 --> 01:08:56.938
because you no longer need that and

NOTE Confidence: 0.801971463529412

4a2dd3fe-6489-4df0-825c-4b4fe15c6930
01:08:56.938 --> 01:08:59.150
last and then attach at the end.

NOTE Confidence: 0.801971463529412

b61cb11c-0204-4176-85f6-51fb286758ab
01:08:59.150 --> 01:09:00.011
And then return.

NOTE Confidence: 0.801971463529412

3798174f-26e4-4c0f-b0ca-c2fd00041b1c
01:09:00.011 --> 01:09:02.427
OK, I'll come back to see if we

NOTE Confidence: 0.801971463529412

f065d29d-3539-444b-aad4-28079b2942f7
01:09:02.427 --> 01:09:04.127
actually need this insert up,

NOTE Confidence: 0.801971463529412

6ae9ce12-aa8a-4013-bfa0-e6aa0e73a4a0
01:09:04.130 --> 01:09:06.302
otherwise we can reuse a node

NOTE Confidence: 0.801971463529412

82406b1b-22c0-4d1a-8098-2c6fbebd16f6
01:09:06.302 --> 01:09:08.929
so old points to node to reuse,

NOTE Confidence: 0.801971463529412

1c5d6248-9357-4ef6-9bcd-ee3a519be001
01:09:08.930 --> 01:09:13.106
assign my Val whatever is in deara first.

NOTE Confidence: 0.801971463529412

782cc748-5299-4172-a5ce-b2534004214e
01:09:13.110 --> 01:09:16.320
Step forward the old pointer.

NOTE Confidence: 0.801971463529412

36564cfb-a94f-43dd-9c1d-71f1e7a63de2
01:09:16.320 --> 01:09:18.216
Which might circle around to my

NOTE Confidence: 0.801971463529412

a148d27f-599e-4bc5-b034-5eabaf45c3e5
01:09:18.216 --> 01:09:19.860
end and will detect that.

NOTE Confidence: 0.801971463529412

78bfbd16-5d9c-4bec-aba5-f182d64ce3ae
01:09:19.860 --> 01:09:22.520
And then also increment first.

NOTE Confidence: 0.801971463529412

b29b827a-f547-42cf-b84d-712838be0919
01:09:22.520 --> 01:09:25.320
OK, this all looks good.

NOTE Confidence: 0.801971463529412

26ed8827-515a-41cf-a607-244f6ba33ce0
01:09:25.320 --> 01:09:27.534
Question here is do we actually

NOTE Confidence: 0.801971463529412

484b1a69-c430-43df-a87a-041fda9dc149
01:09:27.534 --> 01:09:29.967
need and this may actually there's

NOTE Confidence: 0.801971463529412

f5cc303b-18cb-4e3c-bce8-315d65699028
01:09:29.967 --> 01:09:32.589
no real extra expense to using

NOTE Confidence: 0.801971463529412

81515622-fd3b-405e-bdbb-53b9a34970b6
01:09:32.589 --> 01:09:34.980
the strong exception machinery

NOTE Confidence: 0.801971463529412

5560bad7-ac76-4255-8c44-8c554eede145
01:09:34.980 --> 01:09:36.760
compared to just depending stuff.

NOTE Confidence: 0.801971463529412

bb488cbe-d419-4603-959e-8cc7e2c035b4
01:09:36.760 --> 01:09:38.976
So let's see what a sign range says.

NOTE Confidence: 0.801971463529412

c9d4d41e-7745-4d8f-9433-6295d573be17
01:09:38.980 --> 01:09:40.666
Cuz like certainly we've done work

NOTE Confidence: 0.801971463529412

a945c07c-952a-411b-b5dd-3360f722b515
01:09:40.666 --> 01:09:42.501
like this doesn't actually does not

NOTE Confidence: 0.801971463529412

f65931c7-1359-47ee-af8d-3c06eb8f4d53
01:09:42.501 --> 01:09:43.813
actually achieve strong exception

NOTE Confidence: 0.801971463529412

c0eef16d-a977-48e2-a8e0-31a917adea7d
01:09:43.813 --> 01:09:45.125
safety because we've already

NOTE Confidence: 0.801971463529412

6b573148-4cfb-492f-b769-2254ff1e716e
01:09:45.173 --> 01:09:47.029
like rewritten an existing notes.

NOTE Confidence: 0.8762075175

6385cedd-5e04-4a53-af58-757e7d5490fa
01:09:49.720 --> 01:09:50.768
It's not a modifier.

NOTE Confidence: 0.704361863333333

573847d3-39c2-4cdc-a697-c952dd3be509
01:09:53.500 --> 01:09:55.810
Just assign range.

NOTE Confidence: 0.704361863333333

b6ae7026-cbe1-44a3-8e40-18f2845b0a7e
01:09:55.810 --> 01:09:57.970
I don't think that has any.

NOTE Confidence: 0.704361863333333

c289cf8b-43fa-4ff7-a9db-3c0a9f0cc490
01:09:57.970 --> 01:09:59.845
Let's see? OK, let's actually

NOTE Confidence: 0.704361863333333

e47ab2da-e809-4b49-b774-cea7d1106042
01:09:59.845 --> 01:10:00.970
search the standard.

NOTE Confidence: 0.704361863333333

0e2080cd-b4d0-49bb-b621-bfb747a9401f
01:10:00.970 --> 01:10:03.610
I'm search for assign range.

NOTE Confidence: 0.749535774285714

dc8bf8c6-6ff0-4ff4-91c0-11f2cca819f0
01:10:06.080 --> 01:10:07.648
Quite a bit for to catch up.

NOTE Confidence: 0.869820525714286

4a70eeab-4d2e-450f-b628-154dc47b5a64
01:10:09.780 --> 01:10:13.525
Of course it exists on many containers.

NOTE Confidence: 0.869820525714286

eb58d664-2fd0-4312-9f9b-ccfddbe27e1e
01:10:13.530 --> 01:10:16.460
It's basic string. This is,

NOTE Confidence: 0.869820525714286

ccb72566-d370-410a-9f51-0d2bcf2bc248
01:10:16.460 --> 01:10:17.876
Oh yeah, there's no more tables.

NOTE Confidence: 0.869820525714286

3e32641d-dec4-4e92-b6a5-f49bdeeadf2e
01:10:17.880 --> 01:10:20.155
The 4910 got rid of that horrible

NOTE Confidence: 0.869820525714286

b1003a00-6f20-4113-aab4-9d5ed2cabe71
01:10:20.155 --> 01:10:21.504
container requirements table and

NOTE Confidence: 0.869820525714286

ae05edb2-376f-49e0-8986-1dca3684a152
01:10:21.504 --> 01:10:23.079
it's now just normal paragraphs.

NOTE Confidence: 0.869820525714286

ab6fd6a9-4e3e-4ec7-94e9-f9bda68b6392
01:10:23.080 --> 01:10:25.075
This is so like a it's readable,

NOTE Confidence: 0.869820525714286

23712fd3-b2bf-4698-8ee3-1526f49e0be0
01:10:25.080 --> 01:10:26.634
but it's so weird because it's

NOTE Confidence: 0.869820525714286

37a75c6b-21d0-4526-88bf-1c610cfd1522
01:10:26.634 --> 01:10:27.670
like totally different than

NOTE Confidence: 0.869820525714286

c4c19fd7-a8e3-4fcd-8d0b-2c398175f477
01:10:27.722 --> 01:10:29.018
what we used to wade through.

NOTE Confidence: 0.869820525714286

fc3bc45f-4a90-4d8d-8a85-d048fc2a1ff6
01:10:29.020 --> 01:10:30.469
So I've gotta get used to this new work.

NOTE Confidence: 0.869820525714286

f181ee02-662d-4143-b328-0f5b2ac0d38d
01:10:30.470 --> 01:10:31.910
This is the first time I had to look at it.

NOTE Confidence: 0.740828994285714

2b72e60e-9c14-44dd-9a18-0897263c28b5
01:10:34.140 --> 01:10:38.550
Umm OK, so it says assign range.

NOTE Confidence: 0.740828994285714

7a413e3e-d77e-44e1-8c39-7694f503d7ce
01:10:38.550 --> 01:10:39.680
OK, here we go. Resolve.

NOTE Confidence: 0.740828994285714

c5366f7c-e026-4409-8c15-d79935028265
01:10:39.680 --> 01:10:41.546
Voyage mandates a bunch of stuff

NOTE Confidence: 0.740828994285714

b27c3b82-5ae6-46c5-a194-fb04f8b81e0b
01:10:41.546 --> 01:10:43.230
preconditions, a bunch of stuff, effects,

NOTE Confidence: 0.740828994285714

4b2bdffd-0779-49b4-8b58-9e4e13f81efd
01:10:43.230 --> 01:10:44.778
replaces elements name with a copy

NOTE Confidence: 0.740828994285714

050d60d0-c243-4a52-af9e-391908bda455
01:10:44.778 --> 01:10:46.509
of each element range and validates.

NOTE Confidence: 0.740828994285714

f49db87e-5d00-416f-a20d-ec6768e9e27b
01:10:46.510 --> 01:10:48.010
Everybody also validates past the

NOTE Confidence: 0.740828994285714

b61829d6-1723-4f5b-b187-1b87aa77054d
01:10:48.010 --> 01:10:49.810
end iterator for vector and deck.

NOTE Confidence: 0.740828994285714

2af57495-b8a2-461e-b81a-8b7ccb25b399
01:10:49.810 --> 01:10:52.050
Each iterator dereference exactly once.

NOTE Confidence: 0.740828994285714

f18dd51f-7aa6-4758-a8f3-eb1fbff35ba4
01:10:52.050 --> 01:10:54.048
There are no exception safety requirements,

NOTE Confidence: 0.740828994285714

01b97847-6548-4287-a88b-1eda67bb6e34
01:10:54.050 --> 01:10:55.172
which is reasonable because if you've

NOTE Confidence: 0.740828994285714

8157f5a2-bedb-4802-90bc-f02b4cb591d1
01:10:55.172 --> 01:10:56.449
assigned a bunch of existing stuff,

NOTE Confidence: 0.740828994285714

4488e157-15be-4845-91ac-a4b50b9bfa93
01:10:56.450 --> 01:10:59.006
there's no way you're unwind that.

NOTE Confidence: 0.740828994285714

27ad3761-8132-4db9-a5c5-f47dd3b79c51
01:10:59.010 --> 01:11:01.056
So it's unclear to me whether

NOTE Confidence: 0.740828994285714

0dfc70fc-2514-4e59-99a2-e9c5bef6b712
01:11:01.056 --> 01:11:02.690
we actually need this op.

NOTE Confidence: 0.740828994285714

f256e39c-325c-4dae-ad59-1680456c9ad2
01:11:02.690 --> 01:11:04.797
UM, could we just keep inserting nodes?

NOTE Confidence: 0.921119651538462

6a2a3c5d-17cf-461a-9fd4-459c5ef07515
01:11:08.310 --> 01:11:10.424
The question is, do we have a

NOTE Confidence: 0.921119651538462

1ebcd057-5007-42af-aae7-f9d3565cf0fc
01:11:10.424 --> 01:11:12.090
more efficient way to do this?

NOTE Confidence: 0.921119651538462

f47172d8-4fde-4e79-89be-441ae64396ce
01:11:12.090 --> 01:11:13.364
I don't think so. This may actually

NOTE Confidence: 0.921119651538462

0ab03ab8-e64b-469b-8c35-65171da9721d
01:11:13.364 --> 01:11:14.868
end up being the most convenient way.

NOTE Confidence: 0.65783366

dbefbeb1-9849-4526-b179-aae163cd3611
01:11:17.130 --> 01:11:18.498
Uh, let me see.

NOTE Confidence: 0.815514966666667

4dc8b440-551f-4e94-bfe9-1718f36b2859
01:11:21.830 --> 01:11:25.286
It's certainly not. It's not inefficient.

NOTE Confidence: 0.815514966666667

f8b5f29f-993f-4b2b-86dc-6d135194a6cc
01:11:25.290 --> 01:11:27.649
There's other places like in Vector where

NOTE Confidence: 0.815514966666667

a10e1823-5d55-43bc-9b5a-4c5210b529d0
01:11:27.649 --> 01:11:29.601
calling the strong exception safety

NOTE Confidence: 0.815514966666667

58b28dc3-1c52-4517-a86a-6085aae77e68
01:11:29.601 --> 01:11:31.806
stuff is theoretically less efficient.

NOTE Confidence: 0.815514966666667

d0ea6113-566f-42c6-b447-a13bf78e98a6
01:11:31.810 --> 01:11:33.818
So let's say I'm looking at lists here.

NOTE Confidence: 0.638209818333333

b5eb8d79-399c-459f-8d1b-75e94b68d7dd
01:11:35.980 --> 01:11:38.596
This would be where a pending.

NOTE Confidence: 0.820104682

29ee0b80-5b49-4c61-b77b-3b87202f13a4
01:11:42.970 --> 01:11:46.460
So that's the insert one.

NOTE Confidence: 0.820104682

a317b990-3545-4a3d-8b09-0cf205cf6830
01:11:46.460 --> 01:11:47.900
We would have to call insert to end,

NOTE Confidence: 0.820104682

08744a4c-e965-4248-bb73-b42c0f463738
01:11:47.900 --> 01:11:51.463
but that's an arbitrary one and that

NOTE Confidence: 0.820104682

b0d1802e-0a03-4644-852c-861d3bc767a1
01:11:51.463 --> 01:11:54.529
inserted end has a lot of logic.

NOTE Confidence: 0.820104682

359d8410-5e0c-40e2-8d02-601059ef784f
01:11:54.530 --> 01:11:57.809
There's append N.

NOTE Confidence: 0.820104682

5a820d31-7688-4ea2-a115-c69b6384d770
01:11:57.810 --> 01:11:59.834
We could do repeated.

NOTE Confidence: 0.820104682

a0111a65-cbea-4798-ba2c-b9ba335c3e6b
01:11:59.834 --> 01:12:02.364
Essentially it's a repeated pushbacks.

NOTE Confidence: 0.820104682

3422de1d-854b-4f62-bb72-6f72ff5ec1af
01:12:02.370 --> 01:12:04.272
Uhm, or place backs really what

NOTE Confidence: 0.820104682

148511be-62fd-420d-b49b-b5bf57577790
01:12:04.272 --> 01:12:06.269
is in place back look like.

NOTE Confidence: 0.649456534

c83c1f9e-9d77-4408-899d-e0ca8e8d8948
01:12:09.590 --> 01:12:11.180
And place back inserted end.

NOTE Confidence: 0.766450816

4057d76a-0137-47e4-85dd-90db3a07a92b
01:12:14.570 --> 01:12:17.940
Emplace give it my head.

NOTE Confidence: 0.766450816

b478e7c2-f224-42ba-8d69-e3ad12a584a3
01:12:17.940 --> 01:12:20.670
And it's got that special return thing.

NOTE Confidence: 0.766450816

96adb66f-7583-4065-9160-03914c70be51
01:12:20.670 --> 01:12:22.980
There's some place implemented. Is it above?

NOTE Confidence: 0.766450816

ec7c1576-76c0-490b-bb4a-ac9d30a9ed36
01:12:22.980 --> 01:12:26.958
It's probably below. I want kiss.

NOTE Confidence: 0.785109846666667

24f3f59d-87ef-437e-9850-005f40508a61
01:12:32.060 --> 01:12:34.139
Place. OK, if we in place we

NOTE Confidence: 0.785109846666667

71546cf3-f92a-4ff9-9fcd-18cf5dddb7f0
01:12:34.139 --> 01:12:36.456
actually use an in place up as well,

NOTE Confidence: 0.785109846666667

03640238-2eee-45f5-94a1-44f0fd273269
01:12:36.460 --> 01:12:37.828
and then we transfer.

NOTE Confidence: 0.785109846666667

f53b4d80-1639-474f-bf41-231c3b72af6c
01:12:37.828 --> 01:12:39.880
So I see no advantage to

NOTE Confidence: 0.785109846666667

6f808696-4ae6-493d-bef7-0b2683fa74dd
01:12:39.961 --> 01:12:42.265
trying to avoid the insert off.

NOTE Confidence: 0.785109846666667

d7085860-f6e0-4421-bbfd-4dc6d26e2786
01:12:42.270 --> 01:12:43.590
We should just use it, agreed.

NOTE Confidence: 0.77113642

718593bd-9505-49a3-8f55-7f3f037e2e25
01:12:45.650 --> 01:12:50.810
OK, great assign. Ohh interesting,

NOTE Confidence: 0.77113642

bf1d7c0f-0ad4-45c1-9b72-184e79713662
01:12:50.810 --> 01:12:54.205
so our list assign used to actually

NOTE Confidence: 0.77113642

0b9188b4-306e-41bc-a3ab-45d61afb3988
01:12:54.205 --> 01:12:57.518
go through that assign cast which.

NOTE Confidence: 0.77113642

77cd0a43-8d38-4334-90c6-60d03c47e597
01:12:57.520 --> 01:13:00.935
Existed primarily for the unordered

NOTE Confidence: 0.77113642

87ec3630-cc66-41a8-af2f-0aa1de9b3011
01:13:00.935 --> 01:13:02.580
containers, now it exists purely

NOTE Confidence: 0.77113642

7e913100-9d23-422b-b3d6-0ce9dcce4b8d
01:13:02.580 --> 01:13:04.020
for the unordered containers and we

NOTE Confidence: 0.77113642

c4e062e1-f186-433e-b2ce-1f9d7d93a68c
01:13:04.063 --> 01:13:05.515
don't need to sign cast reference.

NOTE Confidence: 0.817859129285714

5d54bd50-32f3-46c4-8e96-9f4a7a215c93
01:13:08.330 --> 01:13:09.632
Yeah, that's weird.

NOTE Confidence: 0.817859129285714

b8ceee68-fc36-4a5d-8707-de8697d5e742
01:13:09.632 --> 01:13:11.802
Casting existing notes to target

NOTE Confidence: 0.817859129285714

87c896f7-de87-44f3-8490-b97b10bc86f7
01:13:11.802 --> 01:13:14.150
ref to try to reuse stuff.

NOTE Confidence: 0.817859129285714

3e521e68-c043-47e2-b8f1-ae1092656d23
01:13:14.150 --> 01:13:15.710
Yeah, I I like this change.

NOTE Confidence: 0.817859129285714

ddbee883-c0a3-4737-9be8-9d89b0e91044
01:13:15.710 --> 01:13:17.830
Get rid of internal calls to assign cast.

NOTE Confidence: 0.817859129285714

9e443b91-fef1-4b05-a30e-7ac520475615
01:13:17.830 --> 01:13:19.706
Leave it only for the inner containers.

NOTE Confidence: 0.817859129285714

5bc63a30-336f-4883-b7fc-d2d121669cf7
01:13:19.710 --> 01:13:21.242
Assign unchecked. Rooting stuff

NOTE Confidence: 0.817859129285714

82828f77-5b62-4935-a0e8-76220288d143
01:13:21.242 --> 01:13:23.980
through that makes a lot more sense,

NOTE Confidence: 0.817859129285714

7712ea30-85c2-496f-962c-363f52e71be9
01:13:23.980 --> 01:13:26.920
and this exists for all standard modes.

NOTE Confidence: 0.817859129285714

a22037a3-172c-406d-990a-c0da83810a65
01:13:26.920 --> 01:13:29.560
Yes, I like this a lot and then

NOTE Confidence: 0.817859129285714

085b2d8b-322e-40d2-bbdf-531b2a59d4c8
01:13:29.560 --> 01:13:32.178
we just unwrap first and last.

NOTE Confidence: 0.817859129285714

4f841520-d372-4ee2-8544-8e2f5930ffaa
01:13:32.180 --> 01:13:33.384
Why do we not?

NOTE Confidence: 0.817859129285714

8cfe3029-b514-4d78-ab14-752e9e14ad4b
01:13:33.384 --> 01:13:36.079
Why do we not validate the range here?

NOTE Confidence: 0.817859129285714

fb7fa962-8dfd-4d24-86f7-fe73757f49aa
01:13:36.080 --> 01:13:37.526
We just unwrapped that seems wrong.

NOTE Confidence: 0.817859129285714

a182dacd-e85d-4a00-8ad7-1d3c15db36ad
01:13:37.530 --> 01:13:38.964
Just saying the same thing with

NOTE Confidence: 0.817859129285714

858b8667-c768-4d06-ac2f-306f0d8a2d33
01:13:38.964 --> 01:13:39.920
my my mic muted.

NOTE Confidence: 0.817859129285714

ff8d33b9-2334-4045-996e-995ad05bed7d
01:13:39.920 --> 01:13:42.224
We don't verify these.

NOTE Confidence: 0.817859129285714

a8baf6ed-af4a-439e-baed-ceb7a4ac4d0d
01:13:42.224 --> 01:13:43.988
Yeah, that seems wrong.

NOTE Confidence: 0.817859129285714

20fa6778-99b1-4945-a0a1-a97c698a4b39
01:13:43.988 --> 01:13:45.572
We're we're usually pretty

NOTE Confidence: 0.817859129285714

104fbb94-e08c-4abe-9524-fdc64ca56841
01:13:45.572 --> 01:13:47.440
consistent about ADL verifying.

NOTE Confidence: 0.817859129285714

92d57a97-c49e-4af9-be83-a852e353b2ab
01:13:47.440 --> 01:13:48.510
I think this is pretty.

NOTE Confidence: 0.74060863

d2bf8d7c-093b-468f-b020-b0d001cc99b2
01:13:51.570 --> 01:13:52.762
Yeah, but we've already

NOTE Confidence: 0.74060863

68d543d6-ee24-4abb-a06b-52faa69fce94
01:13:52.762 --> 01:13:54.550
unwrapped a sign cast does not.

NOTE Confidence: 0.74060863

1411a618-3a92-4939-b662-282381db585a
01:13:54.550 --> 01:13:55.850
It assumes they're unchecked.

NOTE Confidence: 0.74060863

b4792acc-cd5f-4cdf-8dc7-746c728fb6dc
01:13:55.850 --> 01:13:58.230
I think it's just a bug. Yeah.

NOTE Confidence: 0.74060863

bf3b6a92-c9ae-45cc-91de-ef9baf21e505
01:13:58.230 --> 01:14:01.670
Pre existing bug, but I'll fix it here.

NOTE Confidence: 0.74060863

6b50290f-ffa1-4897-9c7e-f7bb764298ed
01:14:01.670 --> 01:14:03.427
OK, yeah, we don't want to do

NOTE Confidence: 0.74060863

a119582b-73de-492f-b47e-15fa8e3fdb5c
01:14:03.427 --> 01:14:04.710
too many unrelated cleanups,

NOTE Confidence: 0.74060863

68783b5f-bba0-4968-978c-2e220d675fc7
01:14:04.710 --> 01:14:06.558
but I mean here we're just

NOTE Confidence: 0.74060863

b84ac343-8fcc-4b5f-a1aa-bff145a8bde0
01:14:06.558 --> 01:14:07.482
reimplementing or assign.

NOTE Confidence: 0.74060863

458830df-2355-4b4b-b7fa-177cb404828c
01:14:07.490 --> 01:14:09.690
It is reasonable to fix this bug here,

NOTE Confidence: 0.74060863

ce5e2436-476f-4bbd-b408-257ce3cc3f0b
01:14:09.690 --> 01:14:10.762
especially because it's doesn't

NOTE Confidence: 0.74060863

38922bde-f679-4703-9ca3-0348650296d6
01:14:10.762 --> 01:14:12.370
involve like a lot of control

NOTE Confidence: 0.74060863

a19a516f-b3f6-49a7-838a-37a1f57469a1
01:14:12.418 --> 01:14:13.870
flow transformation or something.

NOTE Confidence: 0.74060863

ac0c05ed-5dd7-480b-9e08-70bfa788838c
01:14:13.870 --> 01:14:18.310
It's just atomising verify pre-existing.

NOTE Confidence: 0.74060863

d0b6b9cf-b9e4-46b5-9412-7a7e22b827f7
01:14:18.310 --> 01:14:22.030
Oh wow, we weren't. Umm?

NOTE Confidence: 0.74060863

1ee61930-fe0f-4215-869b-971a68b38183
01:14:22.030 --> 01:14:26.040
ADL verifying this range before.

NOTE Confidence: 0.74060863

b705f707-35d0-4b0c-8f87-b1e196c39e63
01:14:26.040 --> 01:14:30.396
Unwrapping UM, not sure if it's easy to find.

NOTE Confidence: 0.74060863

8845071e-d265-4554-a5ef-f47eb0beeda3
01:14:30.400 --> 01:14:31.846
In theory it might be possible

NOTE Confidence: 0.74060863

90462e5d-bb15-4fa0-88d1-19ea9eb9ce70
01:14:31.846 --> 01:14:32.810
to find other ones.

NOTE Confidence: 0.74060863

cf56888d-f55b-40b9-af90-79040c3158d2
01:14:32.810 --> 01:14:34.714
It would be like to get on wraps.

NOTE Confidence: 0.783965693333333

14f21263-976c-41c1-8414-5ae7c3661066
01:14:36.870 --> 01:14:38.982
I could spell properly

NOTE Confidence: 0.783965693333333

7d42dd77-7b44-4c9c-8da3-5fb2f952c0a1
01:14:38.982 --> 01:14:41.120
with casing. Like this?

NOTE Confidence: 0.842861038333333

16426ed3-5119-4548-85bd-009ac71e4de7
01:14:47.210 --> 01:14:48.650
Yeah wow, we got a bunch,

NOTE Confidence: 0.842861038333333

914d61d4-dcc6-4e1a-ad7f-cb0a3a94c5c6
01:14:48.650 --> 01:14:50.666
so we're essentially involved like scan

NOTE Confidence: 0.842861038333333

a1355493-adf5-41c3-822b-4e47b47adbd4
01:14:50.666 --> 01:14:52.818
through every currence and look for 88

NOTE Confidence: 0.842861038333333

3d94783d-629a-4cb0-81c3-b1f0159a3820
01:14:52.818 --> 01:14:55.254
L verify range on some previous line.

NOTE Confidence: 0.886920637142857

80cb07ed-430e-433c-8039-b329f6df8af0
01:15:00.260 --> 01:15:02.010
It's like you're looking at this one.

NOTE Confidence: 0.637259828

88e4a403-2cab-45a4-9ac3-4959002e111e
01:15:04.510 --> 01:15:05.720
Ah, but we have helpers.

NOTE Confidence: 0.637259828

16437d15-d1ba-4dea-b54c-72536b221b9f
01:15:05.720 --> 01:15:06.656
Get unwrapped, unverified,

NOTE Confidence: 0.637259828

51ecceea-2a07-4270-9a23-8d299848892e
01:15:06.656 --> 01:15:08.162
says hey, we haven't actually

NOTE Confidence: 0.637259828

4b2618ef-53cc-4118-bd15-c884525f3e01
01:15:08.162 --> 01:15:09.338
verified this thing yet,

NOTE Confidence: 0.637259828

6889e830-9c00-4d47-bc45-470e043fcf61
01:15:09.340 --> 01:15:11.115
so we'd really want like

NOTE Confidence: 0.637259828

67a8f97b-945d-464d-948e-9d8b0a4e45a9
01:15:11.115 --> 01:15:12.890
just get unwrapped by itself.

NOTE Confidence: 0.637259828

e0547e2c-b128-498d-8395-55f7d143a772
01:15:12.890 --> 01:15:14.690
Yes, so just making sure.

NOTE Confidence: 0.637259828

380b1cd1-a063-4031-a121-0cd24b115f5f
01:15:14.690 --> 01:15:16.190
Hey, you know, does everybody verify?

NOTE Confidence: 0.637259828

4a2772a5-0ac6-4142-9f92-801d1f7193ed
01:15:16.190 --> 01:15:16.922
And here it does.

NOTE Confidence: 0.637259828

bfebb04d-a6d2-4ed7-a17a-8cb1704fff47
01:15:16.922 --> 01:15:18.588
It looks like we do most of the time.

NOTE Confidence: 0.805464827142857

2652b796-99f8-4346-9143-cc33079451ad
01:15:25.910 --> 01:15:26.958
Like this one, suspicious,

NOTE Confidence: 0.805464827142857

f851e516-c013-4f16-8c73-edc679657aed
01:15:26.958 --> 01:15:28.530
so I'm not actually sure how

NOTE Confidence: 0.805464827142857

59bf1e14-aef0-4d06-ad2f-b62e8571e9ec
01:15:28.582 --> 01:15:29.870
widespread this problem is.

NOTE Confidence: 0.805464827142857

085f4e67-2d27-400c-b683-5ee691402e24
01:15:29.870 --> 01:15:31.067
There could be there could be others.

NOTE Confidence: 0.805464827142857

925ba2db-0f9c-44be-9435-73100c50690f
01:15:31.070 --> 01:15:32.790
I'm not gonna go scan the whole STL,

NOTE Confidence: 0.805464827142857

ec92f172-9707-4635-b739-7a852e49918d
01:15:32.790 --> 01:15:35.328
but I'm like in other containers we do like.

NOTE Confidence: 0.805464827142857

40d327ef-ee32-41dc-ba30-d4590f53a3d4
01:15:35.330 --> 01:15:36.842
Here's deck, assign deck,

NOTE Confidence: 0.805464827142857

ec34bf6a-cdc4-4155-a519-961c9ede44ec
01:15:36.842 --> 01:15:39.503
assign does verify range and then unwrap

NOTE Confidence: 0.805464827142857

c5459693-cbfa-445c-abb5-d8c7415d9c12
01:15:39.503 --> 01:15:41.750
so it looks like just list maybe.

NOTE Confidence: 0.730694332

9c1cc60c-bee0-4f44-b35e-0b1adb6d1589
01:15:44.060 --> 01:15:45.450
Yeah, even forward list is

NOTE Confidence: 0.730694332

cbcf150d-0a30-463d-852c-d5c1004b552d
01:15:45.450 --> 01:15:46.840
decent about a sign verify,

NOTE Confidence: 0.730694332

fbbcbb68-3949-4da8-908a-32883f15b63a
01:15:46.840 --> 01:15:48.680
so hopefully it's just isolated.

NOTE Confidence: 0.730694332

ee98b31a-e62d-45e9-b91e-2458e75a974b
01:15:48.680 --> 01:15:49.992
Doesn't demand a whole

NOTE Confidence: 0.730694332

49eb4ef0-1806-4dd4-ab3e-d6e7a24b4ef5
01:15:49.992 --> 01:15:51.440
still wide audit. This is.

NOTE Confidence: 0.730694332

48ac0bef-c108-4e54-9ae3-6fa82ab880c3
01:15:51.440 --> 01:15:53.280
Yep, here's the one we found in list.

NOTE Confidence: 0.730694332

e57c3b49-9ea8-4daf-860c-86a77f3a2173
01:15:53.280 --> 01:15:56.070
That's the the bad one.

NOTE Confidence: 0.730694332

d9f67cb5-80e5-41dc-be31-17c480d7850f
01:15:56.070 --> 01:15:59.598
OK yeah, well one line fixed up is fine.

NOTE Confidence: 0.730694332

1a59fa3b-2376-4ee5-a395-7a7d7f076e86
01:15:59.600 --> 01:16:04.330
OK. Find all the bugs.

NOTE Confidence: 0.730694332

d28a082e-f6ab-4b5f-9291-73014fd8c2b9
01:16:04.330 --> 01:16:06.090
Uh, Next up maybe we'll get through list.

NOTE Confidence: 0.730694332

644513bc-4af0-4cde-b8b5-3fd6c3bde223
01:16:06.090 --> 01:16:07.101
Uh, let's see.

NOTE Confidence: 0.730694332

a02ee312-e3b3-45f6-993c-c00a17e9a50e
01:16:07.101 --> 01:16:08.449
We're a sign range.

NOTE Confidence: 0.83538481

3a71c7d8-3bc0-46fe-951e-ec215332993d
01:16:10.490 --> 01:16:13.045
Let's go back to the actual paper.

NOTE Confidence: 0.83538481

8022417c-a818-4dcf-9c4e-22160a1be479
01:16:13.050 --> 01:16:17.880
Assign range temp if dev containers ranges.

NOTE Confidence: 0.83538481

3814cf97-7574-492b-bbc8-fdaaf417f032
01:16:17.880 --> 01:16:21.918
Yep, template container compatible range RNG.

NOTE Confidence: 0.83538481

acbfac9a-348b-4bac-9d19-6eff8960c391
01:16:21.920 --> 01:16:23.834
Void assign Range Range Rover Range

NOTE Confidence: 0.83538481

775285b6-02f0-443e-b16d-128371b111f6
01:16:23.834 --> 01:16:25.788
we can directly call sign unchecked

NOTE Confidence: 0.83538481

5d67bcee-0720-440b-bda9-e67c03d5fe94
01:16:25.788 --> 01:16:27.958
because we know the range is good,

NOTE Confidence: 0.83538481

18015cd8-7603-4904-8623-41c2687b46d9
01:16:27.960 --> 01:16:30.426
we don't need to validate anything.

NOTE Confidence: 0.83538481

677cbc9c-820b-460d-bea4-b6fef981a536
01:16:30.430 --> 01:16:32.758
OK, so that's the sign range.

NOTE Confidence: 0.83538481

c6e30e9c-8e48-445e-9d15-533b699c72a4
01:16:32.760 --> 01:16:36.772
Here. Insert. This is unwrapping.

NOTE Confidence: 0.83538481

c277b042-9d1d-45be-9e2a-054ce4eb2997
01:16:36.772 --> 01:16:39.880
I'm OK with this moderate level

NOTE Confidence: 0.83538481

05ecfca4-3404-43f1-aa35-dbebfac1bc57
01:16:39.969 --> 01:16:42.337
of Clang format unwrapping.

NOTE Confidence: 0.83538481

aba95d47-23a3-4652-8e5c-842849d1a462
01:16:42.340 --> 01:16:43.450
I don't know why clang format.

NOTE Confidence: 0.83538481

5313cfc5-978d-4adc-9abf-48ee8c24c553
01:16:43.450 --> 01:16:44.780
Oh, I see it's a common detach.

NOTE Confidence: 0.83538481

376db7d6-602d-4da8-9ad8-9d8f26f21b6e
01:16:44.780 --> 01:16:46.500
It's not a pure unwrap.

NOTE Confidence: 0.83538481

7cda45f4-0263-451d-b145-bfbe58e58dea
01:16:46.500 --> 01:16:49.068
Yeah, it's fine.

NOTE Confidence: 0.83538481

cd557b72-bc17-4800-9bca-dd49e5c133a9
01:16:49.070 --> 01:16:51.790
I do know that in 1000 line PR.

NOTE Confidence: 0.83538481

c5a0294c-48a5-42fe-a221-2103e2320738
01:16:51.790 --> 01:16:53.505
Maybe this could have been separated out,

NOTE Confidence: 0.83538481

327178e5-e2a4-4409-a99a-b37dda39b439
01:16:53.510 --> 01:16:55.570
but it's it's fine,

NOTE Confidence: 0.83538481

dda11056-bf48-438f-aa71-e06e3bd6596a
01:16:55.570 --> 01:16:57.630
there's not merge conflicts.

NOTE Confidence: 0.83538481

47a7eac2-ba7e-4ec2-9dd9-83f6d0fe1bbd
01:16:57.630 --> 01:16:58.729
If I see a lot of that,

NOTE Confidence: 0.83538481

7db93b04-f3dc-4871-ba3b-4d1c7e7d8b5c
01:16:58.730 --> 01:17:01.190
I'll start grinding my teeth.

NOTE Confidence: 0.83538481

009c51df-69c3-4df6-9abc-afbcb52933af
01:17:01.190 --> 01:17:03.470
If Dev CPV containers ranges OK,

NOTE Confidence: 0.83538481

4f4c2b03-156d-4a2c-9311-03d12b3d70f1
01:17:03.470 --> 01:17:04.854
insert range.

NOTE Confidence: 0.83538481

fbfd5621-0052-43ad-a81b-207c48ca18cf
01:17:04.854 --> 01:17:07.852
This method here template container

NOTE Confidence: 0.83538481

215736bf-c920-44a7-8abe-17e8c15ed63b
01:17:07.852 --> 01:17:10.157
compatible range TR iterator insert

NOTE Confidence: 0.83538481

244ad738-8a96-4d4b-927a-cdc27b4735f4
01:17:10.157 --> 01:17:12.729
range take constant iterator position.

NOTE Confidence: 0.83538481

eecdfa64-1b8f-4d01-b116-d4c9c4aa4745
01:17:12.730 --> 01:17:15.778
We call that where? And.

NOTE Confidence: 0.83538481

3ca170f0-76ae-45cd-9790-86502b97d291
01:17:15.778 --> 01:17:20.670
Range rapper frange Yep. OK.

NOTE Confidence: 0.83538481

e60b4176-160e-47f4-a6c6-503387dedb12
01:17:20.670 --> 01:17:23.106
So if iterator debug levels two,

NOTE Confidence: 0.83538481

88d1e0b1-0085-412c-8d2d-22c0188599e8
01:17:23.110 --> 01:17:24.066
we have a check.

NOTE Confidence: 0.83538481

4c9fd29c-cefe-4c9b-91b8-4f4a02070e4b
01:17:24.066 --> 01:17:25.500
Here I should be looking at

NOTE Confidence: 0.83538481

5ca19fcd-bec8-4241-a6c2-139ff259b7d6
01:17:25.563 --> 01:17:27.090
something pre-existing here.

NOTE Confidence: 0.83538481

5a81b449-f768-4ce5-9105-4130b9c520a3
01:17:27.090 --> 01:17:29.354
Yeah, because it's going to look like this.

NOTE Confidence: 0.83538481

c10f6768-c0df-48bc-a0d1-ec4587c7c369
01:17:29.360 --> 01:17:31.670
We should verify that the where's container

NOTE Confidence: 0.83538481

b35630f8-ff97-45e3-b778-5141bf658f78
01:17:31.670 --> 01:17:34.107
is equal to the address of my data.

NOTE Confidence: 0.83538481

02ab7f46-0f3f-4c31-bfa5-7e6334e8efaf
01:17:34.110 --> 01:17:36.378
Otherwise list insert iterator outside range.

NOTE Confidence: 0.83538481

2bc03010-762f-4b1c-b3c3-8a291338b939
01:17:36.380 --> 01:17:40.178
Yep, usual comment OK or assertion.

NOTE Confidence: 0.83538481

1ac91133-9a7a-4ae5-a50f-3b41bdba99e0
01:17:40.180 --> 01:17:41.800
And then we have a range

NOTE Confidence: 0.83538481

980b31d3-54b6-49ba-a797-fc1a4f8ce33d
01:17:41.800 --> 01:17:42.880
we don't need verify.

NOTE Confidence: 0.83538481

9f4b5061-8ffa-4dda-afa7-7cfa642c9121
01:17:42.880 --> 01:17:44.968
Let's make an insert up with

NOTE Confidence: 0.83538481

70767079-e29c-4aa1-92e4-bbc04e698fb5
01:17:44.968 --> 01:17:46.360
our allocator appending done.

NOTE Confidence: 0.83538481

d4ea468a-7a0d-4531-882b-962a6c7620cc
01:17:46.360 --> 01:17:51.410
Check you begin, you end and then.

NOTE Confidence: 0.83538481

51796f5e-5f0b-4789-a2e7-40dce04a671d
01:17:51.410 --> 01:17:52.970
Make it or attach before.

NOTE Confidence: 0.83538481

8ff0f1a9-10a6-4fc4-ac85-8394dceca2f9
01:17:52.970 --> 01:17:55.820
Yep, exactly the same, it's good.

NOTE Confidence: 0.83538481

c73b738e-cc9d-4fda-b781-696e8019fceb
01:17:55.820 --> 01:17:59.187
And then C tab class template arm

NOTE Confidence: 0.83538481

c3b55d37-ab45-4fad-89bf-5887b7a01f0c
01:17:59.187 --> 01:18:03.040
deduction if Dev cglib containers ranges.

NOTE Confidence: 0.83538481

2cddcdfb-9003-4f8a-b6ad-d8b17ab7699f
01:18:03.040 --> 01:18:07.400
We are template on ranges input range R&amp;amp;G.

NOTE Confidence: 0.83538481

2f774042-c0f7-4100-8d6b-88974763126f
01:18:07.400 --> 01:18:09.748
Class allocator defaults to

NOTE Confidence: 0.83538481

1abe53da-4818-40d8-ad7f-85722ad19173
01:18:09.748 --> 01:18:12.096
stood allocator of ranges.

NOTE Confidence: 0.83538481

05ca5457-8c20-4acd-8aca-05ab34b69975
01:18:12.100 --> 01:18:14.980
Range of value TR and G.

NOTE Confidence: 0.83538481

f7bb19ca-345a-4ea6-b3b6-0df4034d9a96
01:18:14.980 --> 01:18:16.576
And we've got a constraint here.

NOTE Confidence: 0.83538481

967f94db-99e0-4620-96b5-505f348fbe16
01:18:16.580 --> 01:18:18.580
This is going to be.

NOTE Confidence: 0.83538481

2c2fdae6-2a6e-49d3-b69c-293de90c0926
01:18:18.580 --> 01:18:21.100
Standard Y If you're a guide

NOTE Confidence: 0.83538481

9a3793e4-6227-4ed7-857e-5bca44803630
01:18:21.100 --> 01:18:22.780
that's templated on allocator,

NOTE Confidence: 0.83538481

b46f96a3-f051-41bd-b6a5-4305c21f2112
01:18:22.780 --> 01:18:25.419
you actually need to be allocator ish.

NOTE Confidence: 0.83538481

bd052824-576e-4535-a9ec-545555e86c38
01:18:25.420 --> 01:18:27.597
That's what everybody else is constrained on.

NOTE Confidence: 0.83538481

f3dbcf9b-114b-4702-b231-234ff5ab1134
01:18:27.600 --> 01:18:30.510
Like if I can expand this.

NOTE Confidence: 0.83538481

ef56c22a-dc71-42e1-83ee-e0245ce36649
01:18:30.510 --> 01:18:34.278
Yeah here enable if.

NOTE Confidence: 0.83538481

c40c5f08-3422-4029-a923-2c4acb6edfc5
01:18:34.280 --> 01:18:37.200
Is allocator alloc value.

NOTE Confidence: 0.83538481

ff0abe33-3d33-4c8f-bcea-ebdda48e4b20
01:18:37.200 --> 01:18:40.719
OK, in zero do we have another allocator V?

NOTE Confidence: 0.83538481

96c1a6fa-360b-4c72-8e65-8428c70de999
01:18:40.720 --> 01:18:43.970
Or is it only a struct?

NOTE Confidence: 0.853506643333333

545dc8ca-0d93-4cbf-9f7a-7b2875f8e6c7
01:18:47.550 --> 01:18:49.770
Looks like it's only a struct.

NOTE Confidence: 0.853506643333333

5ff80667-ab61-4102-ad94-2b41471c6538
01:18:49.770 --> 01:18:50.628
OK, that's fine.

NOTE Confidence: 0.464060232857143

eefc3c76-91bc-44a9-92d9-6233d0243f71
01:18:53.380 --> 01:18:57.279
List from range T range ref ref.

NOTE Confidence: 0.464060232857143

da587f75-1e91-4991-a799-3c5bbad85ced
01:18:57.280 --> 01:19:01.537
Alec by value is equal to Alec pren pren.

NOTE Confidence: 0.464060232857143

fe928b53-d1f3-43da-8bb8-732c3d6dfcef
01:19:01.540 --> 01:19:02.716
Deduce list of ranges,

NOTE Confidence: 0.464060232857143

609283db-3f7e-4389-9064-1090e8e057ad
01:19:02.716 --> 01:19:05.150
range of value TR and that allocator.

NOTE Confidence: 0.464060232857143

f6c4776c-0d47-4712-8736-c15a4110d1c5
01:19:05.150 --> 01:19:07.030
OK good that's list.

NOTE Confidence: 0.464060232857143

7af00b6f-278f-486b-b63f-c97485d01d72
01:19:07.030 --> 01:19:08.490
Yeah, we got through a container.

NOTE Confidence: 0.870867328

4b7c5dc5-a6de-4e27-8380-d3c74b636775
01:19:10.610 --> 01:19:14.860
OK, let's see it is.

NOTE Confidence: 0.870867328

f94c8b91-355b-41c2-83f4-fca7028cfcf9
01:19:14.860 --> 01:19:16.911
525I think this may be a good

NOTE Confidence: 0.870867328

6eab4e07-cab4-4656-9180-98787778b06a
01:19:16.911 --> 01:19:18.599
place to pause the review.

NOTE Confidence: 0.870867328

55f98ec5-4dc9-4452-83f1-34a4fcf69a1e
01:19:18.600 --> 01:19:22.074
We may be coming back to this next week.

NOTE Confidence: 0.870867328

a9abd4fa-46a5-4f16-a245-b28392b94a72
01:19:22.080 --> 01:19:23.910
Because we've got all the other

NOTE Confidence: 0.870867328

eef771c0-f25e-4721-9aab-3116bf6763bd
01:19:23.910 --> 01:19:25.432
containers to go through and

NOTE Confidence: 0.870867328

b4a1c9bc-57e6-425d-9be6-dc89b6b7ac3c
01:19:25.432 --> 01:19:27.147
then a whole bunch of test code.

NOTE Confidence: 0.870867328

85adf0f8-7584-4f37-a680-d0bfff9eeb25
01:19:27.150 --> 01:19:28.565
Hopefully most of the containers

NOTE Confidence: 0.870867328

22e6efbe-79b1-48d0-9394-d64aa5e945a9
01:19:28.565 --> 01:19:30.410
except for vector will look similar.

NOTE Confidence: 0.870867328

fbdf69b6-1a9c-44d6-acf3-364fe87b4fd1
01:19:30.410 --> 01:19:32.930
Ish vector special because of its

NOTE Confidence: 0.870867328

ccfa1ef2-f339-47dc-898f-b68178b6ce6f
01:19:32.930 --> 01:19:34.610
strong exception safety guarantees,

NOTE Confidence: 0.870867328

073f8006-2641-4efa-bb14-69cd92ba7f9d
01:19:34.610 --> 01:19:37.850
but I'm hoping that these change the product

NOTE Confidence: 0.870867328

9ad17576-74b9-4020-b827-16cd60e7d21a
01:19:37.850 --> 01:19:41.050
changes are now going to be more mechanical.

NOTE Confidence: 0.870867328

1f17f83e-5f5b-42c1-aef0-2a540a9b485d
01:19:41.050 --> 01:19:41.970
Yeah, deck is always special

NOTE Confidence: 0.870867328

99ed5b54-989d-489b-9c89-cdacba87a854
01:19:41.970 --> 01:19:42.706
because of the proxy.

NOTE Confidence: 0.870867328

1d23c537-0331-4799-962f-de0e537a3802
01:19:42.710 --> 01:19:44.186
I'm just sort of go OK.

NOTE Confidence: 0.870867328

2a367ba2-f7c4-4b68-a557-d70c41c8ea9b
01:19:44.190 --> 01:19:46.668
We got some guard stuff here.

NOTE Confidence: 0.870867328

e73bde8d-05f5-40f9-949b-da03d1cca2ad
01:19:46.670 --> 01:19:48.146
OK, there is a fair amount

NOTE Confidence: 0.870867328

51fa62ee-afab-4ffe-94fd-e843afa1a7cd
01:19:48.146 --> 01:19:49.130
of container surgery fun.

NOTE Confidence: 0.791154752105263

9a167433-2452-4280-a55b-04b92632660f
01:19:52.090 --> 01:19:54.170
Yeah, I think if even if I start

NOTE Confidence: 0.791154752105263

80130e89-e90e-4bb6-9ee5-4e3b3bf51e11
01:19:54.170 --> 01:19:56.162
forward list forward list actually does

NOTE Confidence: 0.791154752105263

567ffdb3-74be-45ad-afba-85a1eacf26d4
01:19:56.162 --> 01:19:58.077
look pretty similar to list. Yeah,

NOTE Confidence: 0.791154752105263

81ef0da1-5b17-40fa-8c78-f283e45a571c
01:19:58.077 --> 01:19:59.730
I don't think I can do that in five minutes.

NOTE Confidence: 0.791154752105263

a6451262-8e7a-4b0d-bc73-3ac248e78620
01:19:59.730 --> 01:20:01.224
OK, I think this is a good stopping point.

NOTE Confidence: 0.791154752105263

6f9090bc-570f-41a2-941e-5c4142010f92
01:20:01.230 --> 01:20:03.366
I will submit a very very partial review.

NOTE Confidence: 0.791154752105263

08794205-0263-4bcd-b6ce-05ee42e9f548
01:20:03.370 --> 01:20:05.986
Five out of 117 files viewed,

NOTE Confidence: 0.791154752105263

116b1cf6-fee4-4d99-8340-621bb57adffc
01:20:05.990 --> 01:20:08.240
but we got a chance to look at how one

NOTE Confidence: 0.791154752105263

3a88e8ff-d98e-49e9-965e-f6921e5f4bdc
01:20:08.303 --> 01:20:10.793
container is implemented and the overall

NOTE Confidence: 0.791154752105263

a06d6f0d-617c-4bf9-aaba-4f858ff08b83
01:20:10.793 --> 01:20:13.570
feature, so hopefully that was useful.

NOTE Confidence: 0.791154752105263

d32c5f0a-bad5-4b91-95f5-3f652b6420fe
01:20:13.570 --> 01:20:15.226
If you have any questions let us know.

NOTE Confidence: 0.791154752105263

e3bffe3c-9d0a-425b-9dad-cfdc1d70c7c7
01:20:15.230 --> 01:20:16.305
Otherwise we'll see you on

NOTE Confidence: 0.791154752105263

ecd9f7ca-c3c4-49ec-98d8-56b20ca73e4a
01:20:16.305 --> 01:20:17.380
the next open code review.

NOTE Confidence: 0.791154752105263

b23d6b79-5222-4684-8c78-f4be28392c3d
01:20:17.380 --> 01:20:18.118
Thanks for watching.

