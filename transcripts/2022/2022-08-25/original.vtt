WEBVTT

NOTE duration:"01:16:50"

NOTE recognizability:0.763

NOTE language:en-us

NOTE Confidence: 0.728032577272727

50173495-d368-4363-94ed-de703e0650e2
00:00:09.340 --> 00:00:11.176
Hi and welcome back to another

NOTE Confidence: 0.728032577272727

10274678-6bb4-447c-96db-3e52a31c4a1d
00:00:11.176 --> 00:00:12.740
VC libraries open coder view.

NOTE Confidence: 0.728032577272727

8f69c843-778c-4f3d-acac-c4d6a64a4b0d
00:00:12.740 --> 00:00:14.770
Today we'll be looking at the STL's

NOTE Confidence: 0.728032577272727

b92f72d6-9779-4970-b4b6-558ff7a313ac
00:00:14.770 --> 00:00:16.479
favoritest attribute in the whole world.

NOTE Confidence: 0.728032577272727

1b7bf030-d600-40b0-a262-ae00d6ce9c58
00:00:16.480 --> 00:00:19.840
No discard. We have a PR from our

NOTE Confidence: 0.728032577272727

bb70629b-4fab-4b30-8053-2df84997b6e8
00:00:19.840 --> 00:00:22.976
contributor Alex Guteneck, number 2211.

NOTE Confidence: 0.728032577272727

65060327-079e-4600-a2a1-fd1d51c226c9
00:00:22.976 --> 00:00:25.160
No discard messages,

NOTE Confidence: 0.728032577272727

8573dbc3-9c82-47dc-8092-dbb5450fd145
00:00:25.160 --> 00:00:27.968
so we've been looking at this.

NOTE Confidence: 0.728032577272727

dd633059-7a5b-419b-854f-c1969e2eb70b
00:00:27.970 --> 00:00:29.270
Which addresses a couple of,

NOTE Confidence: 0.728032577272727

01278438-f82a-4a3c-a8b1-dae65e0b9390
00:00:29.270 --> 00:00:30.886
uh, enhancement issues that

NOTE Confidence: 0.728032577272727

c4b5fc18-8ee4-4179-b75c-01fa35b54f58
00:00:30.886 --> 00:00:33.310
we had filed a while ago.

NOTE Confidence: 0.728032577272727

ce942ddf-4320-42c8-82d7-3f9c4ceb5d55
00:00:33.310 --> 00:00:35.354
But first I wanted to give some

NOTE Confidence: 0.728032577272727

11b2a9d1-d792-4c25-bab0-fd9b8e7d8925
00:00:35.354 --> 00:00:37.349
background on what is this attribute,

NOTE Confidence: 0.728032577272727

fd4f8d76-c2d7-411e-8917-9fd1e3940552
00:00:37.350 --> 00:00:39.744
what does the STL use it for,

NOTE Confidence: 0.728032577272727

b7039183-d785-474b-a36b-283ce2fc8e76
00:00:39.750 --> 00:00:42.850
and what do we want to do in this PR?

NOTE Confidence: 0.728032577272727

638f183b-31ca-402f-a142-70e5380b5567
00:00:42.850 --> 00:00:44.929
So if you haven't heard of notice

NOTE Confidence: 0.728032577272727

56396924-44ae-4b78-b50f-7a0b4214d838
00:00:44.929 --> 00:00:46.509
card or attributes in general,

NOTE Confidence: 0.728032577272727

45891ada-dfb8-4a86-ad8f-85beee1234af
00:00:46.510 --> 00:00:49.016
there's a way to mark things like

NOTE Confidence: 0.728032577272727

4bdbf49e-54bf-49ea-b4e3-195d30648497
00:00:49.016 --> 00:00:51.664
functions or data members, but in

NOTE Confidence: 0.728032577272727

1a3945d2-4238-4bfe-98db-e8747494fbc9
00:00:51.664 --> 00:00:54.466
this case it's applicable to functions.

NOTE Confidence: 0.728032577272727

5fbfb5c3-64df-4e2d-a798-201aeae7b844
00:00:54.470 --> 00:00:56.054
In ways that.

NOTE Confidence: 0.728032577272727

69dd9b48-6795-4cb6-985c-bc2cfd8cf7b8
00:00:56.054 --> 00:00:58.166
Don't necessarily carry required

NOTE Confidence: 0.728032577272727

331500bf-b9f6-4b75-abe1-769ad0eac21b
00:00:58.166 --> 00:01:00.860
semantic meaning for the compiler,

NOTE Confidence: 0.728032577272727

b00d979d-e254-410c-addc-353a6b1f58a0
00:01:00.860 --> 00:01:02.810
meaning that in theory the attribute

NOTE Confidence: 0.728032577272727

3957af1c-6c7b-42b6-bf7f-62aac990e54d
00:01:02.810 --> 00:01:05.121
should be ignorable and you should still

NOTE Confidence: 0.728032577272727

8f028fee-4cd1-4d4a-a8f5-62bcce201aaa
00:01:05.121 --> 00:01:07.354
get the same behavior you would otherwise.

NOTE Confidence: 0.728032577272727

3bb3d4b4-c60e-4e28-b701-a835ae1c19ff
00:01:07.360 --> 00:01:08.950
But sometimes it can help the

NOTE Confidence: 0.728032577272727

4188eaee-f3b8-4567-9b6b-467bf171a7a8
00:01:08.950 --> 00:01:10.260
compiler emit better code Gen,

NOTE Confidence: 0.728032577272727

4f33156c-915e-4254-b0f5-b764e3471000
00:01:10.260 --> 00:01:11.478
it can help the compiler mid,

NOTE Confidence: 0.728032577272727

f843caa0-2a32-467b-9abb-e22fcf286e70
00:01:11.480 --> 00:01:12.672
better diagnostics,

NOTE Confidence: 0.728032577272727

d36a4c28-0028-4825-b3e5-8fd3db653718
00:01:12.672 --> 00:01:14.460
things like that.

NOTE Confidence: 0.728032577272727

bd0ca4da-dae4-4e56-a174-37f496fea0ee
00:01:14.460 --> 00:01:15.600
This rule isn't strictly

NOTE Confidence: 0.728032577272727

32918730-4b74-428c-a352-493dd9a4d1f9
00:01:15.600 --> 00:01:16.740
followed by the standard,

NOTE Confidence: 0.728032577272727

df7b7962-80ae-4223-9eef-5a5871570d3e
00:01:16.740 --> 00:01:18.756
there's things like no unique address that

NOTE Confidence: 0.728032577272727

0e6a48b1-9c79-43d1-a7c1-3c51337b1f0a
00:01:18.756 --> 00:01:21.565
do have a bit more of an effect than others.

NOTE Confidence: 0.728032577272727

9ebcab82-f8ce-43be-b5cb-65d313569638
00:01:21.570 --> 00:01:23.348
Notice card is very much a classic

NOTE Confidence: 0.728032577272727

91a64e7c-a63d-4a31-b114-0949fd181d54
00:01:23.348 --> 00:01:24.993
attribute where you could ignore every

NOTE Confidence: 0.728032577272727

2d19222c-91ff-499c-a5bc-787e77e86bc2
00:01:24.993 --> 00:01:26.655
single notice card in the program.

NOTE Confidence: 0.728032577272727

cf5f7a2d-516a-4c03-a7ec-6c094939ed5f
00:01:26.660 --> 00:01:29.190
And aside from compiler warnings,

NOTE Confidence: 0.728032577272727

c6751892-eb17-49a4-bc7e-f4dbf44c8860
00:01:29.190 --> 00:01:30.570
it should have no effect.

NOTE Confidence: 0.728032577272727

3b0416a2-cf59-48c2-aae8-89a27de5913e
00:01:30.570 --> 00:01:32.110
But the effect that it

NOTE Confidence: 0.728032577272727

63bc9b0c-b2bd-4d1b-8e23-5a88cc611d16
00:01:32.110 --> 00:01:33.650
does have is quite useful.

NOTE Confidence: 0.728032577272727

56177189-1097-4ce2-9de3-185374d21473
00:01:33.650 --> 00:01:35.810
So I can open up.

NOTE Confidence: 0.728032577272727

e08cfd2a-0423-407a-b5a5-78aca70ac0fd
00:01:35.810 --> 00:01:38.064
Let me open up the STL here

NOTE Confidence: 0.728032577272727

03ad46f7-f9c1-4839-aaa9-5dfb1ca2b5ab
00:01:38.064 --> 00:01:40.190
locally and if I do a search,

NOTE Confidence: 0.728032577272727

e81f80b8-fdd1-471e-a641-eab3636f6a8b
00:01:40.190 --> 00:01:41.565
a global search for every

NOTE Confidence: 0.728032577272727

e0bb398b-affa-4046-ba59-17718b2f67b0
00:01:41.565 --> 00:01:42.665
occurrence of notice card,

NOTE Confidence: 0.728032577272727

481d0a64-bf19-408a-9d28-01502d6eedef
00:01:42.670 --> 00:01:44.469
we use a macro in our product

NOTE Confidence: 0.728032577272727

52db1138-6878-479e-83e3-8c424f70a01f
00:01:44.469 --> 00:01:46.230
code that is internal to us.

NOTE Confidence: 0.728032577272727

c23574fc-fbf7-4423-8ec0-9c15a0350e12
00:01:46.230 --> 00:01:47.665
It should not be used by users.

NOTE Confidence: 0.728032577272727

69f78b85-a071-4892-acfc-3702881270cc
00:01:47.670 --> 00:01:50.328
Discard if I can type correctly.

NOTE Confidence: 0.728032577272727

53a3684d-c65c-4d6f-aab3-d579e8c4698c
00:01:50.330 --> 00:01:51.212
Here we go.

NOTE Confidence: 0.728032577272727

9c1e2ba7-d1bf-4123-8e82-647721944e06
00:01:51.212 --> 00:01:51.800
There are

NOTE Confidence: 0.802791882857143

170f0c18-e720-42d3-be4d-3ab82d34327e
00:01:54.030 --> 00:01:56.110
5541 occurrences of this

NOTE Confidence: 0.802791882857143

3633ca37-8433-455c-80e6-c5151809ea14
00:01:56.110 --> 00:01:57.670
notice card annotation.

NOTE Confidence: 0.802791882857143

2a2aea85-a878-4243-9eb1-0d8edfa7fe2a
00:01:57.670 --> 00:02:00.750
In the STL we use this everywhere,

NOTE Confidence: 0.802791882857143

7064df98-c30b-4369-b30d-d10362de7c4a
00:02:00.750 --> 00:02:02.942
and in fact we use it much more

NOTE Confidence: 0.802791882857143

83870a72-dbf8-43ca-b528-f8dfb4e7de26
00:02:02.942 --> 00:02:04.509
than suggested by the standard.

NOTE Confidence: 0.802791882857143

91f19fb4-d9ff-43ca-92ba-e928bcc46e24
00:02:04.510 --> 00:02:08.227
All of this is quality of implementation.

NOTE Confidence: 0.802791882857143

16f73913-76d2-4e4c-9027-412d20d599fb
00:02:08.230 --> 00:02:09.530
Implementations of the STL are

NOTE Confidence: 0.802791882857143

60e96d9a-8e38-4d75-a842-40febd0a60c8
00:02:09.530 --> 00:02:11.110
not required to use notice card,

NOTE Confidence: 0.802791882857143

3fd3d2aa-dfd4-4280-8f70-d1410bec0c82
00:02:11.110 --> 00:02:14.422
but we love it so much we've put 3004

NOTE Confidence: 0.802791882857143

d42e0947-81af-40f7-8491-bf1774960062
00:02:14.422 --> 00:02:16.182
thousand 5000 in counting occurrences.

NOTE Confidence: 0.802791882857143

f0de7805-4422-4b9f-aca6-6acdd1e51dcc
00:02:16.182 --> 00:02:18.270
So why do we do this?

NOTE Confidence: 0.802791882857143

0af85b09-8c71-40f9-9516-0e32fd2f465a
00:02:18.270 --> 00:02:20.132
Why is it so important to not

NOTE Confidence: 0.802791882857143

ab6fe99d-d0c9-4951-925a-6b1f55b02027
00:02:20.132 --> 00:02:21.640
discard the results of function?

NOTE Confidence: 0.802791882857143

e8c9f6d9-cc4e-4bcf-9a02-61aff8691c6f
00:02:21.640 --> 00:02:24.802
So some I've seen when talking

NOTE Confidence: 0.802791882857143

b6cbcefb-28c8-4cca-bbd1-6bc837c71e0f
00:02:24.802 --> 00:02:26.010
to people's reactions,

NOTE Confidence: 0.802791882857143

4253b021-e30a-4913-91ac-d3f583556b41
00:02:26.010 --> 00:02:28.050
to no discard or sort of.

NOTE Confidence: 0.802791882857143

86162a37-0fba-4e1b-903f-6f9e232beeff
00:02:28.050 --> 00:02:29.040
Some people are like, you know,

NOTE Confidence: 0.802791882857143

55a56df4-3589-4076-b981-ab6f42ef1230
00:02:29.040 --> 00:02:29.940
as soon as they see it, they're like,

NOTE Confidence: 0.802791882857143

18d49972-b9e6-47da-8a9a-7d9465bd802d
00:02:29.940 --> 00:02:30.920
oh cool, I should go use this.

NOTE Confidence: 0.802791882857143

45c1d0ec-dc18-4878-a3a9-630469073195
00:02:30.920 --> 00:02:32.186
And other people are very skeptical,

NOTE Confidence: 0.802791882857143

0246a540-b886-4a27-b0cb-5c74391fbe65
00:02:32.190 --> 00:02:33.425
and it's reasonable to be

NOTE Confidence: 0.802791882857143

c67c5024-fb96-4e3d-b728-70c5c99af515
00:02:33.425 --> 00:02:34.660
skeptical of a new technology,

NOTE Confidence: 0.802791882857143

b450d817-098f-4449-8bfb-e73fe75c8609
00:02:34.660 --> 00:02:36.590
especially if it increases verbosity.

NOTE Confidence: 0.802791882857143

be377c2e-15f0-46b1-a0ef-e9b1d7f51375
00:02:36.590 --> 00:02:40.538
If you've got a function like say

NOTE Confidence: 0.802791882857143

9e8ff204-2553-4f0f-8799-9ea3fa18ee50
00:02:40.538 --> 00:02:43.990
no discard int square taking an int,

NOTE Confidence: 0.802791882857143

d1ee22d1-ffa1-4dd9-aded-feadf3483b39
00:02:43.990 --> 00:02:48.102
and that returns a couple ends here,

NOTE Confidence: 0.802791882857143

a5dbce6c-65ef-42b1-b417-aa99572a2c85
00:02:48.102 --> 00:02:52.678
I can print out the use of square.

NOTE Confidence: 0.802791882857143

2025b6b2-0d9c-41c8-8379-2c0694aa2f5e
00:02:52.680 --> 00:02:53.648
And it should print.

NOTE Confidence: 0.802791882857143

18e01487-a429-4747-8182-cc17c5251829
00:02:53.648 --> 00:02:56.210
There we go once I get the syntax, right?

NOTE Confidence: 0.802791882857143

fc563503-682b-4d4d-94ad-2dc202af4d44
00:02:56.210 --> 00:02:58.360
Yeah, so that works fine.

NOTE Confidence: 0.802791882857143

d3aa473e-43a6-469d-9c10-721bda594e6e
00:02:58.360 --> 00:03:00.761
So what notice card does is it

NOTE Confidence: 0.802791882857143

623488fb-2fc1-42b4-b98d-9420715c7f0e
00:03:00.761 --> 00:03:02.174
diagnoses incorrect uses like

NOTE Confidence: 0.802791882857143

ac09211e-aae6-464f-81eb-fb3a8e22f9ad
00:03:02.174 --> 00:03:04.094
this where you call a function,

NOTE Confidence: 0.802791882857143

1d54dca0-3507-4dc5-8fcf-a72a4b3929d2
00:03:04.100 --> 00:03:06.740
it drops the return value on the floor,

NOTE Confidence: 0.802791882857143

c877ede4-6e02-4227-8130-d06ef75aac29
00:03:06.740 --> 00:03:07.934
which is valid,

NOTE Confidence: 0.802791882857143

e4443d2a-3d7a-4b97-b903-3dc4cb015c92
00:03:07.934 --> 00:03:10.720
but here the compiler will warn because

NOTE Confidence: 0.802791882857143

cfd26521-c0bc-499f-bfc8-dd4cde98da22
00:03:10.802 --> 00:03:13.336
we marked it as no discard warning.

NOTE Confidence: 0.802791882857143

79a59f5d-1d68-4efb-8768-97887d561b94
00:03:13.340 --> 00:03:14.930
C 4834 discarding return value

NOTE Confidence: 0.802791882857143

8eeb0b30-b7d3-401b-a5a7-aaf9c1028b4d
00:03:14.930 --> 00:03:16.520
function with no discard attribute.

NOTE Confidence: 0.802791882857143

91bb2dd9-a848-4cdf-9aaf-ad4395529325
00:03:16.520 --> 00:03:18.386
Which is a reminder to the

NOTE Confidence: 0.802791882857143

a48c30ed-4e18-4b67-87c4-4a8a34330704
00:03:18.386 --> 00:03:19.319
programmer that hey,

NOTE Confidence: 0.802791882857143

16ffe63e-903f-4926-b68d-8e6628d6337b
00:03:19.320 --> 00:03:22.587
did you mean to do something with square 5?

NOTE Confidence: 0.802791882857143

6701dad0-f869-4ae8-95cb-ad7694f0b7fc
00:03:22.590 --> 00:03:23.928
Here this function is an example

NOTE Confidence: 0.802791882857143

664fd033-295e-4c0b-821b-7d0ea104f069
00:03:23.928 --> 00:03:25.608
of what we call a pure observer.

NOTE Confidence: 0.802791882857143

0ff97b18-b8be-4bd5-bfb1-b121da309252
00:03:25.610 --> 00:03:28.067
It exists only to take some arguments,

NOTE Confidence: 0.802791882857143

945d06cb-f215-4b4f-86a6-2ea6d238933d
00:03:28.070 --> 00:03:29.510
compute some stuff and return it.

NOTE Confidence: 0.802791882857143

72f545d7-1d3c-4561-bb43-6ef2d0a8b8eb
00:03:29.510 --> 00:03:32.470
So if you drop the return value on the floor,

NOTE Confidence: 0.802791882857143

fac8de91-eb13-4e92-81dd-e124693c99b0
00:03:32.470 --> 00:03:34.102
why did you call the function in the

NOTE Confidence: 0.802791882857143

7c82d9aa-d59e-45ec-8be0-5d77697d5c0d
00:03:34.102 --> 00:03:36.530
1st place? That had no side effects.

NOTE Confidence: 0.802791882857143

8f4d532a-aac5-415e-a194-a2e98f66cab4
00:03:36.530 --> 00:03:38.994
So this is the most common reason we

NOTE Confidence: 0.802791882857143

d91fc996-b593-4eba-b142-2cbd4b8480df
00:03:38.994 --> 00:03:41.277
mark things as no discard in the STL.

NOTE Confidence: 0.802791882857143

c0a923fd-2307-4fbb-8dfc-0ca10a77748b
00:03:41.280 --> 00:03:43.926
So one of the reasons why we can use

NOTE Confidence: 0.802791882857143

d0ee7a0e-7344-4edc-b18b-a8a200a35831
00:03:43.926 --> 00:03:46.843
over 5000 occurrences is that as long

NOTE Confidence: 0.802791882857143

ed460082-a9a0-4866-8180-964f183daf41
00:03:46.843 --> 00:03:49.260
as your programs operating properly,

NOTE Confidence: 0.802791882857143

efd83042-a7ed-4c14-aab0-b2861df55aa0
00:03:49.260 --> 00:03:51.171
you know you're actually using all the

NOTE Confidence: 0.802791882857143

5f538feb-5579-4f17-aab9-5f140c9f3afd
00:03:51.171 --> 00:03:52.890
return thing values that we've marked.

NOTE Confidence: 0.802791882857143

48b8e8af-dec3-48f9-8155-0f0d35c83585
00:03:52.890 --> 00:03:53.826
You get no warnings.

NOTE Confidence: 0.802791882857143

33a18b2b-c3e4-4ad3-8339-380ab72cc1c5
00:03:53.826 --> 00:03:54.060
Um,

NOTE Confidence: 0.802791882857143

8ebe00eb-72d7-43b9-84c9-23466bbb3777
00:03:54.060 --> 00:03:56.193
as long as we're very careful to apply no,

NOTE Confidence: 0.802791882857143

1441d921-b58b-4257-b429-10dfdcb2af6a
00:03:56.200 --> 00:03:56.604
discard.

NOTE Confidence: 0.802791882857143

88219c2c-b288-45a8-8946-7b234d407e25
00:03:56.604 --> 00:03:59.028
Only when we're highly confident that

NOTE Confidence: 0.802791882857143

8da442ff-52ec-40ca-8700-e164f1b1f05d
00:03:59.028 --> 00:04:01.180
warnings will indicate actual bugs or,

NOTE Confidence: 0.802791882857143

e6954e9e-10c6-4496-bd33-5af6122d643b
00:04:01.180 --> 00:04:03.160
you know, actual forgotten code,

NOTE Confidence: 0.802791882857143

daf04036-822f-4036-aa53-8c27f168596a
00:04:03.160 --> 00:04:04.888
then we avoid the false positives.

NOTE Confidence: 0.802791882857143

845e16d0-b3b0-49ff-9ea1-16adf681f11f
00:04:04.890 --> 00:04:07.458
Because users hate false positive warnings.

NOTE Confidence: 0.802791882857143

c05c5386-615f-4510-89d1-6af5fe15d7f5
00:04:07.460 --> 00:04:07.982
They're noisy,

NOTE Confidence: 0.802791882857143

5d0e9676-a344-488b-82b6-8003c7216d2c
00:04:07.982 --> 00:04:09.287
they cause people to just

NOTE Confidence: 0.802791882857143

17702f03-f508-4e09-90f3-5212563fa948
00:04:09.287 --> 00:04:10.520
turn off the warning.

NOTE Confidence: 0.802791882857143

da39678d-80ef-416d-a7c2-2c6a87e63e8e
00:04:10.520 --> 00:04:12.340
With our warning disable switch,

NOTE Confidence: 0.802791882857143

216a400c-5314-4ec0-bc56-e000f65055c4
00:04:12.340 --> 00:04:13.716
that would significantly degrade

NOTE Confidence: 0.802791882857143

b39b5b14-6c29-4ef3-8714-af409693a089
00:04:13.716 --> 00:04:15.436
the utility of the feature.

NOTE Confidence: 0.802791882857143

93f32004-a9c8-4bdf-af74-2f97ebbc1bba
00:04:15.440 --> 00:04:16.336
So with notice card,

NOTE Confidence: 0.802791882857143

260cda45-31b8-4bd0-adb5-fb913c7b3b6b
00:04:16.336 --> 00:04:18.250
we try to strictly apply it to cases

NOTE Confidence: 0.802791882857143

8c7b989c-ad0b-4807-b1b5-1b4fa32ea737
00:04:18.250 --> 00:04:19.555
where we're highly confident that

NOTE Confidence: 0.802791882857143

0a6c809a-5f82-4346-a423-754ad8a4a10f
00:04:19.555 --> 00:04:21.370
it's going to find actual problems,

NOTE Confidence: 0.802791882857143

d4aec545-ff17-458d-a65c-26f079a4fd7d
00:04:21.370 --> 00:04:22.778
and only in a couple of places have

NOTE Confidence: 0.802791882857143

3628a50b-3bba-4060-a9d4-86f52796af13
00:04:22.778 --> 00:04:24.278
we been a little bit too overeager.

NOTE Confidence: 0.802791882857143

5167fe76-78a4-4577-8adb-34c0c2ec2682
00:04:24.280 --> 00:04:26.584
No discard have had to pull it back.

NOTE Confidence: 0.802791882857143

f98c843c-761c-467a-907b-5eb65b996e8f
00:04:26.590 --> 00:04:29.257
It does mean that there are some

NOTE Confidence: 0.802791882857143

ec63ba51-ad63-49fb-9d2e-6c29c200130a
00:04:29.257 --> 00:04:31.944
cases like unique putter release

NOTE Confidence: 0.802791882857143

28dc5a07-6e53-433b-9da3-76e9844680d4
00:04:31.944 --> 00:04:35.215
where 90% of discards are a bug but

NOTE Confidence: 0.802791882857143

31e5a34d-708f-47c0-885d-07c79fd6dd41
00:04:35.215 --> 00:04:38.252
10% or maybe valid and because that

NOTE Confidence: 0.802791882857143

a62b01de-8231-4b15-9a84-d87bb7ea694a
00:04:38.252 --> 00:04:40.100
10% that we don't want to emit noise,

NOTE Confidence: 0.745558965714286

5a5a78b9-8b35-414e-871a-84b95b43c069
00:04:40.100 --> 00:04:41.644
we don't mark the thing as no discard

NOTE Confidence: 0.745558965714286

cd9ec845-02dc-491d-8f68-907308783db2
00:04:41.644 --> 00:04:42.819
even though it would find bugs.

NOTE Confidence: 0.745558965714286

23c56f9c-79ce-4259-a5b7-9a4bb41ee653
00:04:42.820 --> 00:04:45.460
The cost and false positives is too great.

NOTE Confidence: 0.745558965714286

6e86fa23-d73e-4d7b-96f3-7048132a2002
00:04:45.460 --> 00:04:48.320
So maybe this is compelling.

NOTE Confidence: 0.745558965714286

7250b1ec-44dc-4d0a-9da9-01e7f5b1236a
00:04:48.320 --> 00:04:50.024
You know seeing this notice card saying wow

NOTE Confidence: 0.745558965714286

35ad6fea-586d-456f-a28f-d3904e9db246
00:04:50.024 --> 00:04:51.755
you caught a bug but maybe you're thinking,

NOTE Confidence: 0.745558965714286

3b922449-4f08-4fe0-a68a-ff1b23e5def8
00:04:51.760 --> 00:04:54.469
OK, how often am I gonna just.

NOTE Confidence: 0.745558965714286

a19ee73c-2c7e-4665-802c-f40e43688125
00:04:54.470 --> 00:04:55.807
All a function drop its value on

NOTE Confidence: 0.745558965714286

447ee4d7-0eb0-4e84-9484-84b34e56e8ba
00:04:55.807 --> 00:04:57.259
the floor and I wanted it anyways.

NOTE Confidence: 0.745558965714286

96efca38-ad82-4611-a5b6-52ba7c6a84a2
00:04:57.260 --> 00:04:58.394
You know, how bad could that be?

NOTE Confidence: 0.745558965714286

e8667a41-3e91-4232-b654-c6a357aedae4
00:04:58.400 --> 00:05:00.872
So let me present the the most compelling

NOTE Confidence: 0.745558965714286

0d49c7dd-35f9-469f-89fb-c5589f5efc6a
00:05:00.872 --> 00:05:03.018
reason that I've seen for no discard.

NOTE Confidence: 0.745558965714286

caa8011e-d5a0-487d-aa87-1e4667b4c006
00:05:03.020 --> 00:05:05.156
It has found a few bugs

NOTE Confidence: 0.745558965714286

a3ce64b1-77d1-4620-9b3d-8bebbdcfa5f2
00:05:05.156 --> 00:05:06.580
in production code bases,

NOTE Confidence: 0.745558965714286

03f6ad16-a4ad-4ecb-ad4c-d612e905d86d
00:05:06.580 --> 00:05:08.520
so let's change this.

NOTE Confidence: 0.745558965714286

22bef9cb-307b-4795-874e-8902067935d3
00:05:08.520 --> 00:05:13.220
Let's have a couple containers.

NOTE Confidence: 0.745558965714286

c573a610-5d16-4c42-b0e1-80a83b62c66b
00:05:13.220 --> 00:05:16.800
Let's have the speed 102030.

NOTE Confidence: 0.745558965714286

7f78951b-80dd-4e72-b854-b438d920ef94
00:05:16.800 --> 00:05:22.037
Vector in two is 405060.

NOTE Confidence: 0.745558965714286

5437f1af-aa46-4523-af3f-193419b24bb3
00:05:22.037 --> 00:05:26.699
Let's iterate over both of these

NOTE Confidence: 0.745558965714286

62551d5b-e4ba-44e8-9cc5-ebbaf9f688dc
00:05:26.699 --> 00:05:29.030
containers simultaneously SO4.

NOTE Confidence: 0.745558965714286

597bda58-e32c-4617-879d-d7f233d56e1d
00:05:29.030 --> 00:05:36.720
Auto I is V1 begin comma J is V2 begin.

NOTE Confidence: 0.745558965714286

53fc9af0-dd0f-4cf5-a51f-c71c5d98e1ff
00:05:36.720 --> 00:05:37.728
the condition,

NOTE Confidence: 0.745558965714286

c8996e84-d209-467a-aeeb-fbfffbd68d19
00:05:37.728 --> 00:05:42.372
as long as I is not equal V1 and

NOTE Confidence: 0.745558965714286

bcccb1c2-a800-4d83-9515-076986add036
00:05:42.372 --> 00:05:45.816
comma J not equal V2 and semi

NOTE Confidence: 0.745558965714286

8a0e0123-a018-4ab2-b95c-e7780af63bbc
00:05:45.816 --> 00:05:49.618
and then we want to increment I,

NOTE Confidence: 0.745558965714286

983fccc9-6758-4f8e-b1c2-f41e9a7c1966
00:05:49.620 --> 00:05:52.040
comma increment J and then

NOTE Confidence: 0.745558965714286

f4b0e5ac-52f0-45cd-98b1-014a7194ae66
00:05:52.040 --> 00:05:54.960
we're going to say see out.

NOTE Confidence: 0.745558965714286

ea6b5355-5c01-4512-b2d4-fa270c535ae3
00:05:54.960 --> 00:05:57.018
We'd like to dereference the iterator.

NOTE Confidence: 0.745558965714286

3d581995-a743-42a9-90e4-fb26617c8e2c
00:05:57.020 --> 00:05:59.592
Nope, can't do that.

NOTE Confidence: 0.745558965714286

164784c9-9452-4678-8493-9e860a084ab8
00:05:59.592 --> 00:06:02.264
Derek FI. And then a comma.

NOTE Confidence: 0.745558965714286

cf7e4ac8-951e-4318-be05-5bb9e59e51f8
00:06:02.264 --> 00:06:04.848
I see Casey and Kohler smiling because

NOTE Confidence: 0.745558965714286

4c1c0fcd-8785-4936-b3c0-d6ed6f5ee9a7
00:06:04.848 --> 00:06:07.352
they know it's coming. Derek FJ.

NOTE Confidence: 0.745558965714286

5753fb47-493d-41e0-b019-767353e3e39c
00:06:07.352 --> 00:06:10.054
And then maybe print a new line.

NOTE Confidence: 0.745558965714286

9f4033ba-f536-4684-84e6-ba5497e0ab96
00:06:10.060 --> 00:06:13.111
OK, and let me warning disable 4834.

NOTE Confidence: 0.745558965714286

fc0495a6-6c03-4668-a726-6b00fab382de
00:06:13.111 --> 00:06:16.079
So we pretend what happens if the still

NOTE Confidence: 0.745558965714286

fb21c38c-63f8-465f-91b0-11465fed7fac
00:06:16.079 --> 00:06:18.677
does not have no discard warnings?

NOTE Confidence: 0.745558965714286

7c58a8a2-3e44-427a-9a9f-f81c03d46f5a
00:06:18.680 --> 00:06:19.550
What happens here?

NOTE Confidence: 0.745558965714286

830b495d-a79f-409c-9949-b08b08d6e573
00:06:19.550 --> 00:06:21.580
OK, so maybe I'll put a space

NOTE Confidence: 0.745558965714286

85b8e737-179c-4ef9-9eb5-b2bbd477db5f
00:06:21.647 --> 00:06:23.037
here to make it pretty.

NOTE Confidence: 0.745558965714286

82de5e81-ae4b-47cd-8015-8a551b7127aa
00:06:23.040 --> 00:06:24.926
So hey, this program compiled, it,

NOTE Confidence: 0.745558965714286

fc18674c-7915-457a-8e4e-f17e305782ac
00:06:24.926 --> 00:06:26.756
ran, it, worked, everything's good,

NOTE Confidence: 0.745558965714286

b026a527-db6f-4d7c-811b-64e3a5fbae7f
00:06:26.760 --> 00:06:27.072
right?

NOTE Confidence: 0.745558965714286

fd7948f8-5ed7-4d95-8875-78da2ccf361c
00:06:27.072 --> 00:06:27.696
I mean,

NOTE Confidence: 0.745558965714286

2b1cd177-f5a1-4149-ab67-70ce91f300ee
00:06:27.696 --> 00:06:31.056
I got 10 and 4020 and 5030 and 60 printed.

NOTE Confidence: 0.745558965714286

97e4401d-db85-4e2e-8010-47b694e34ee6
00:06:31.060 --> 00:06:33.040
Well, there is a bug here.

NOTE Confidence: 0.745558965714286

6ed9492e-902c-481c-a46a-7202559b2388
00:06:33.040 --> 00:06:35.790
Let's see what the bug is by enabling the no

NOTE Confidence: 0.745558965714286

de5d8118-0adb-4894-a12d-7f713a4c7bb0
00:06:35.861 --> 00:06:38.613
discard warning as it is enabled by default.

NOTE Confidence: 0.745558965714286

cb1d5307-59b3-473f-9cb6-c6dd47abf05a
00:06:38.620 --> 00:06:40.504
And I think,

NOTE Confidence: 0.745558965714286

72a36667-7036-4412-b35d-eeccf33258ae
00:06:40.504 --> 00:06:41.760
think, think.

NOTE Confidence: 0.745558965714286

cf864523-ba5c-4a9f-a774-308ded6f42fc
00:06:41.760 --> 00:06:45.216
Why am I not getting the notice card warning?

NOTE Confidence: 0.745558965714286

bec77984-1d9b-4050-ad4b-6442a1bf2c00
00:06:45.220 --> 00:06:46.273
Or under latest,

NOTE Confidence: 0.745558965714286

6b42cb21-f932-4f6d-9005-7d875590df6b
00:06:46.273 --> 00:06:48.730
did the thing actually recompile for us?

NOTE Confidence: 0.669249055

490ed7c1-60bd-4d44-998c-b02d053396cc
00:06:51.280 --> 00:06:53.490
We totally should have done

NOTE Confidence: 0.669249055

2e6dd5db-8be7-42d7-965e-de10dbe5c0a3
00:06:53.490 --> 00:06:55.140
the warning here. Yeah.

NOTE Confidence: 0.66271448875

ef788421-6190-43eb-91da-e6a59c0767be
00:06:57.950 --> 00:06:59.718
Sometimes I've seen compiler

NOTE Confidence: 0.66271448875

d650c791-0e27-4042-bf81-95667a911c0a
00:06:59.718 --> 00:07:01.486
Explorer doesn't always recompile.

NOTE Confidence: 0.66271448875

70c9c188-d296-4e8b-90d1-a3f7858c02a2
00:07:01.490 --> 00:07:03.380
OK, now I have a mystery because this really,

NOTE Confidence: 0.66271448875

ce24a593-07b4-4d85-8e4d-2bd8e52432b4
00:07:03.380 --> 00:07:05.135
really should have.

NOTE Confidence: 0.66271448875

c6a540fe-13c2-4d3d-a568-93c476d5a459
00:07:05.135 --> 00:07:08.060
Omitted the no discard warning.

NOTE Confidence: 0.66271448875

bdd4a09a-908c-400c-a764-08998edb97e8
00:07:08.060 --> 00:07:10.598
Uh, let's see, we've got iterators.

NOTE Confidence: 0.66271448875

473472f4-d660-4cf2-9f43-316280ce3b13
00:07:10.600 --> 00:07:14.210
We are totally ohh. Ohh,

NOTE Confidence: 0.66271448875

433f6d8f-a980-439e-b6fe-402b8735b1d7
00:07:14.210 --> 00:07:16.130
I think I found a compiler limitation here.

NOTE Confidence: 0.66271448875

d0ba4251-30a1-4dbf-ba60-46024ad7d558
00:07:16.130 --> 00:07:17.558
It's a good thing we've got

NOTE Confidence: 0.66271448875

f3311084-033b-495f-b2a3-c20e5bb8aa8e
00:07:17.558 --> 00:07:19.050
a compiler dev on the call.

NOTE Confidence: 0.66271448875

84afbe0d-ea4f-4bac-ac30-2a03afccca48
00:07:19.050 --> 00:07:20.060
OK, so this is interesting.

NOTE Confidence: 0.66271448875

aa125264-47ea-4b60-bd0e-94465ab5a8af
00:07:20.060 --> 00:07:21.604
Let me downgrade us to C + 17

NOTE Confidence: 0.66271448875

b681a6a4-27bb-46d2-8d1b-b94ecce75ffd
00:07:21.604 --> 00:07:23.288
because I really want this example.

NOTE Confidence: 0.66271448875

a2b8dd03-45a0-4aad-97a8-483c909ed919
00:07:23.290 --> 00:07:24.555
Then we'll talk about what

NOTE Confidence: 0.66271448875

54f0929d-4644-418a-af73-191dff20b50e
00:07:24.555 --> 00:07:25.820
I think I just discovered.

NOTE Confidence: 0.567006814

d45b8c9c-38c8-4458-80c2-bf4354965383
00:07:28.680 --> 00:07:29.790
OK, everybody's learning

NOTE Confidence: 0.567006814

ff262b83-41af-4fcd-8356-db41ba654054
00:07:29.790 --> 00:07:31.272
something today, including me.

NOTE Confidence: 0.567006814

248f3063-f913-499d-90e0-91d3ba107149
00:07:31.272 --> 00:07:33.950
So it's compiling under 17 mode. Here we go.

NOTE Confidence: 0.567006814

cfc92696-ddba-4b93-910f-c84b923c889c
00:07:33.950 --> 00:07:35.639
OK, so this is the warning I expected to see.

NOTE Confidence: 0.567006814

5d0e2294-d357-42aa-ae41-a6300d8a1500
00:07:35.640 --> 00:07:36.720
And then in a bit we'll get to

NOTE Confidence: 0.567006814

f49a3842-333b-49dc-b1b9-26f3b2f4deaf
00:07:36.720 --> 00:07:37.879
why we didn't see the warning.

NOTE Confidence: 0.567006814

aa9585d3-2696-436f-bbcd-aa782a393645
00:07:37.880 --> 00:07:41.016
So we get a squiggle on line 11,

NOTE Confidence: 0.567006814

5252ec4b-fd1c-4f23-854f-f127027908b7
00:07:41.020 --> 00:07:42.468
warning, discarding return value

NOTE Confidence: 0.567006814

5512c515-ff75-46e6-bea6-3083c87e6bc3
00:07:42.468 --> 00:07:44.278
function with no discard attribute.

NOTE Confidence: 0.567006814

5903db23-eca3-4c4e-be2f-232b9bb42a95
00:07:44.280 --> 00:07:45.360
Oh, that's interesting.

NOTE Confidence: 0.567006814

692ebb9b-8732-4579-b8aa-fc7fa366655e
00:07:45.360 --> 00:07:47.520
I said I not equal V1.

NOTE Confidence: 0.567006814

c5b7df1a-23fc-45b6-a1d9-12c57fdd9113
00:07:47.520 --> 00:07:49.572
End comma, and I put that

NOTE Confidence: 0.567006814

60a977f1-64a6-42dd-bb05-f658673d0950
00:07:49.572 --> 00:07:50.940
comment in there intentionally.

NOTE Confidence: 0.567006814

7beb1f75-d3fd-4c0c-868c-0f189c08696e
00:07:50.940 --> 00:07:52.700
J not equal V2. End.

NOTE Confidence: 0.567006814

bbb37170-1307-45a7-85b1-a429fd6fb2bb
00:07:52.700 --> 00:07:54.124
This comma is wrong.

NOTE Confidence: 0.567006814

a228b09b-30d6-4e54-bf14-3ced3d3ef668
00:07:54.124 --> 00:07:57.004
The comma here is necessary because you got

NOTE Confidence: 0.567006814

50dbf487-76b8-419c-8de6-b1327057097b
00:07:57.004 --> 00:07:59.214
to define two variables here, the comma.

NOTE Confidence: 0.567006814

992be5fc-e7cc-442d-85e3-e32dfa36216c
00:07:59.214 --> 00:07:59.738
Is necessary.

NOTE Confidence: 0.567006814

05bc41fc-314d-4ab8-ad30-a175be41eaed
00:07:59.738 --> 00:08:00.786
It's a comma operator.

NOTE Confidence: 0.567006814

736888de-9f67-436f-aa3a-e445a45e0544
00:08:00.790 --> 00:08:02.833
We're going to increment both I and J here.

NOTE Confidence: 0.567006814

e29f5c86-2b10-42ac-b671-226de54f6ff3
00:08:02.840 --> 00:08:04.758
You do not want a comma because

NOTE Confidence: 0.567006814

1624d19e-27b5-40dc-ab0a-ee2ed9301b07
00:08:04.758 --> 00:08:06.558
if you put a comma there,

NOTE Confidence: 0.567006814

88f1ac3b-0f51-42e2-8020-d5e1560751df
00:08:06.560 --> 00:08:08.420
we ignore the left hand side

NOTE Confidence: 0.567006814

e4b877b0-93cd-4143-a8ea-4542336e7ac8
00:08:08.420 --> 00:08:10.360
because we compare 2 iterators.

NOTE Confidence: 0.567006814

584b5196-4604-42f7-9772-3234ebf87c21
00:08:10.360 --> 00:08:10.964
We got a pool,

NOTE Confidence: 0.567006814

10d50fc0-157a-4690-8fe7-83c1be222004
00:08:10.964 --> 00:08:12.160
then we drop it on the floor,

NOTE Confidence: 0.567006814

23791b99-d999-43fc-9941-0a56291dc5a7
00:08:12.160 --> 00:08:16.144
and the result of this is only J.

NOTE Confidence: 0.567006814

01b25f61-dc9f-4b67-ab10-0b77654e5fae
00:08:16.150 --> 00:08:19.839
So what we really wanted was operator

NOTE Confidence: 0.567006814

00933393-b2e6-4ba6-bae7-9253bf103d2f
00:08:19.839 --> 00:08:21.742
Ant this is a bug and the reason

NOTE Confidence: 0.567006814

36a18fa5-3d63-40b3-b70c-3bb555be2223
00:08:21.742 --> 00:08:23.370
why I say this is my favorite

NOTE Confidence: 0.567006814

df7f18c3-3ead-42d7-a5e2-b365e1de79d2
00:08:23.370 --> 00:08:25.204
example is we have seen like at

NOTE Confidence: 0.567006814

31dc58d7-4caf-4b42-818a-81880615a5de
00:08:25.204 --> 00:08:26.674
least two or three occurrences

NOTE Confidence: 0.567006814

f0d30a16-d203-4bfd-8b1a-e3df9f012385
00:08:26.674 --> 00:08:28.316
in real production code bases.

NOTE Confidence: 0.567006814

b71baa8b-97fa-4d86-9042-e490af92a0e4
00:08:28.316 --> 00:08:30.978
I will avoid naming names where

NOTE Confidence: 0.567006814

d194b8bd-a4bc-48c6-8603-a71bce201708
00:08:30.978 --> 00:08:33.274
people ship this to users and the

NOTE Confidence: 0.567006814

1e46b305-7c46-447e-8442-b8c4c77c2747
00:08:33.274 --> 00:08:35.189
code was behaving incorrectly and

NOTE Confidence: 0.567006814

17abebe0-b350-4082-892f-9d8e53ae5613
00:08:35.189 --> 00:08:37.961
in this case it misbehaves if the

NOTE Confidence: 0.567006814

84eb9d12-3c6e-4afa-8233-25cc6a3d3802
00:08:38.036 --> 00:08:40.426
vectors are ever different lengths.

NOTE Confidence: 0.567006814

ae0f493c-6880-45a2-ac3a-5a55b09f0f32
00:08:40.430 --> 00:08:42.182
You want this to end as soon as

NOTE Confidence: 0.567006814

355a5925-b563-4986-8d45-767ce4c56d0a
00:08:42.182 --> 00:08:44.123
one of the two vectors is exhausted

NOTE Confidence: 0.567006814

7745960f-6f81-4cfa-9e6d-82ecf60a9d4d
00:08:44.123 --> 00:08:45.860
and not only when the 2nd.

NOTE Confidence: 0.567006814

40cc476c-1c7c-49c6-a7bc-08596f2ff374
00:08:45.860 --> 00:08:46.602
Actors exhausted?

NOTE Confidence: 0.567006814

7510d728-aac5-4884-be3d-add093186e1a
00:08:46.602 --> 00:08:49.199
Um, so having a comma there is

NOTE Confidence: 0.567006814

a4655a37-fdb0-401f-89c5-50a8c848aeef
00:08:49.199 --> 00:08:51.289
a real bug in this case,

NOTE Confidence: 0.567006814

556a1075-4a62-4d9a-bc39-8be56b3db8ab
00:08:51.290 --> 00:08:53.468
it seems seemed to work fine,

NOTE Confidence: 0.567006814

5d9e0c71-2639-4f3c-93d0-c8b2ca1a212d
00:08:53.470 --> 00:08:57.930
but if I had let's see if I

NOTE Confidence: 0.567006814

461c7cd2-903c-4ad0-86e1-433c43d98b64
00:08:57.930 --> 00:08:59.350
have too many elements,

NOTE Confidence: 0.567006814

138e6a33-05de-421f-a986-3c22c6f2e88b
00:08:59.350 --> 00:08:59.996
we would.

NOTE Confidence: 0.567006814

4ec97214-0f2d-4cf6-9cfd-6f8554064b29
00:08:59.996 --> 00:09:03.710
And as V2 and so it would seem to work fine.

NOTE Confidence: 0.567006814

8a6e79dd-20a5-47b9-ab7c-389233c97ab5
00:09:03.710 --> 00:09:05.774
But if V1 does not have enough elements,

NOTE Confidence: 0.567006814

fe15fee0-7653-4388-b6c8-882d6642064c
00:09:05.780 --> 00:09:07.772
the and will work properly where

NOTE Confidence: 0.567006814

e3dd9d42-9d47-40b3-9a99-7461b479bbdf
00:09:07.772 --> 00:09:10.122
we stop as soon as we consume

NOTE Confidence: 0.567006814

2998c37d-e3a9-4e9a-927c-2cf207521a43
00:09:10.122 --> 00:09:12.012
the final element 20 of V1.

NOTE Confidence: 0.567006814

04823021-c889-4186-b301-3bf778540374
00:09:12.020 --> 00:09:14.012
But the comma will give us

NOTE Confidence: 0.567006814

00cd46b4-a8ef-4447-a1a1-153c5b38b5b0
00:09:14.012 --> 00:09:15.753
undefined behavior and it will

NOTE Confidence: 0.567006814

0ad7dab8-5bf9-4bce-b440-d2d4008d09ab
00:09:15.753 --> 00:09:17.458
be diagnosed in debug mode.

NOTE Confidence: 0.567006814

e4b607d6-7af3-4712-8834-8aaf5dd789ae
00:09:17.460 --> 00:09:18.122
Ohh yeah,

NOTE Confidence: 0.567006814

e224cc3f-88c1-4581-8295-f025dda22c49
00:09:18.122 --> 00:09:20.108
we let's disable the notice card

NOTE Confidence: 0.567006814

91a1fb59-4a7a-4e69-b3b5-30bc94d79328
00:09:20.108 --> 00:09:23.275
warning 4834 and if we compile in debug

NOTE Confidence: 0.567006814

cae5970e-ca51-401c-b96f-5b4ad74742eb
00:09:23.275 --> 00:09:26.350
mode we'll get the debug assertion.

NOTE Confidence: 0.567006814

a206c53e-5fbf-4c1c-91ad-76ab6934ec18
00:09:26.350 --> 00:09:28.768
Yeah, where I think you think.

NOTE Confidence: 0.567006814

10e07e83-86c8-4841-8145-22533cb7f877
00:09:28.770 --> 00:09:29.121
Yeah,

NOTE Confidence: 0.567006814

b0b35f68-a331-4803-93d6-cfea23fc2f36
00:09:29.121 --> 00:09:30.525
it intentionally crashes because

NOTE Confidence: 0.567006814

d4ac0583-2c08-4f94-a6d2-244eae8a07b1
00:09:30.525 --> 00:09:32.938
we get our debug check and in

NOTE Confidence: 0.567006814

b7357ca6-e379-43f3-ab67-a5388f21e9ce
00:09:32.938 --> 00:09:34.433
release mode we briefly saw

NOTE Confidence: 0.567006814

7ed3917c-2ba1-4806-8ecf-c57666dd982f
00:09:34.433 --> 00:09:35.910
you get undefined behavior.

NOTE Confidence: 0.567006814

94443f3e-c523-40cf-8d04-36b0bfbe6563
00:09:35.910 --> 00:09:38.943
But in practice what we get here is garbage.

NOTE Confidence: 0.567006814

29f9a960-5002-43ce-828e-ad3ad3b7ab3c
00:09:38.950 --> 00:09:40.990
So there's a real bug if you say

NOTE Confidence: 0.567006814

51529b58-55cf-44f8-89ce-234ca0b07491
00:09:40.990 --> 00:09:42.855
comma and no discard catches it

NOTE Confidence: 0.567006814

c40a065b-96b2-4faf-a34a-55459803a6ba
00:09:42.855 --> 00:09:45.289
because the IT gets the library to

NOTE Confidence: 0.567006814

f55ba30a-07f7-411a-a29b-e76e3a66f03a
00:09:45.289 --> 00:09:47.469
communicate information to the compiler.

NOTE Confidence: 0.567006814

5c1fca06-333e-4eb7-90bf-b466ead3da08
00:09:47.470 --> 00:09:49.054
The compiler just sees a function

NOTE Confidence: 0.567006814

e516d7b0-7c26-4449-9f03-cb8c9ea5aebb
00:09:49.054 --> 00:09:50.450
call here operator not equal.

NOTE Confidence: 0.567006814

728c08b0-2255-4887-8885-03f438ed05dc
00:09:50.450 --> 00:09:51.700
For a vector int iterator,

NOTE Confidence: 0.567006814

d4124de6-ef08-4b79-8566-7f5ec48bb6f5
00:09:51.700 --> 00:09:53.050
which is a class type,

NOTE Confidence: 0.567006814

f5094124-ef3e-4f7d-ad39-2d13b9ee33ab
00:09:53.050 --> 00:09:54.610
it's reasonable to call a function

NOTE Confidence: 0.567006814

bfe1acb2-83b1-4433-8f17-8c32d8316fa7
00:09:54.610 --> 00:09:56.659
and then drop its value on the floor.

NOTE Confidence: 0.567006814

613fc81d-73c8-4c06-9daa-bc70a7de9549
00:09:56.660 --> 00:09:57.728
That's what happens when you call.

NOTE Confidence: 0.567006814

1d891e2d-a004-4e1f-b82e-bfaef87069b6
00:09:57.730 --> 00:09:57.917
Staff,

NOTE Confidence: 0.567006814

37ccf70b-3dd7-4d1d-b391-471bbd0c3eeb
00:09:57.917 --> 00:09:59.413
did you know the printf returns an int?

NOTE Confidence: 0.567006814

998c170e-ebd9-4ed9-876b-018314c2c679
00:09:59.420 --> 00:10:00.850
Almost everybody ignores that in

NOTE Confidence: 0.567006814

de08d766-2189-424c-aefe-3e9cbc863590
00:10:00.850 --> 00:10:02.280
because it's not really useful.

NOTE Confidence: 0.567006814

9b1e50cd-0d6e-4578-8ad3-6aee66b7b9cb
00:10:02.280 --> 00:10:04.758
But here we really want this pure

NOTE Confidence: 0.567006814

54dffaa9-979a-4d88-bced-799b0272c42a
00:10:04.758 --> 00:10:07.260
observer not equal to not be discarded,

NOTE Confidence: 0.567006814

ddc6adb7-88c8-4d68-8c3f-746fd1279eb9
00:10:07.260 --> 00:10:09.528
so no discard will find bugs.

NOTE Confidence: 0.842867399

0aef27fd-0138-4343-ad22-6105d1b4da41
00:10:09.530 --> 00:10:10.718
You want this enabled?

NOTE Confidence: 0.842867399

fc54c685-2182-4101-9358-11ab221843ae
00:10:10.718 --> 00:10:12.500
We do enable it by default,

NOTE Confidence: 0.842867399

5f123753-464a-45a0-b872-6b2aacdd5148
00:10:12.500 --> 00:10:14.132
and ideally pointed this code review

NOTE Confidence: 0.842867399

d9c61bc2-1a04-4166-a544-2666423b6083
00:10:14.132 --> 00:10:16.473
is to try to convince you to start

NOTE Confidence: 0.842867399

5cb5158e-0a7d-418a-bb07-eb9db8f7643d
00:10:16.473 --> 00:10:18.673
marking your own functions as no discard

NOTE Confidence: 0.842867399

37fe4316-6bd2-47d3-93e4-3e5c787878aa
00:10:18.673 --> 00:10:20.719
when they meet the proper criteria.

NOTE Confidence: 0.842867399

bfecbd16-fdc0-4ce9-83dc-f845077d72b4
00:10:20.720 --> 00:10:22.638
Yes, it's a little bit of repository,

NOTE Confidence: 0.842867399

a848bd44-f657-4516-b86c-25bea62b0449
00:10:22.640 --> 00:10:24.250
almost always it's not going to find

NOTE Confidence: 0.842867399

35218daf-fc71-46d5-bd9d-bcf5e6812c63
00:10:24.250 --> 00:10:25.935
anything, but when I find something

NOTE Confidence: 0.842867399

229ef2ee-1559-49b1-bf58-714520c6656f
00:10:25.935 --> 00:10:27.740
you're going to be really glad.

NOTE Confidence: 0.842867399

25d662a4-d105-4d33-be8d-c31f112a3486
00:10:27.740 --> 00:10:30.458
Um, OK, so let's pop the stack here and

NOTE Confidence: 0.842867399

a14b8124-a12a-47e2-9aeb-c53b5f7632a8
00:10:30.458 --> 00:10:33.184
let's go back to why we did not see this.

NOTE Confidence: 0.842867399

f6a145bc-61be-4681-8428-1d5b79000edc
00:10:33.190 --> 00:10:36.680
Let's. I think C + 20 will find the issue.

NOTE Confidence: 0.842867399

6d32c119-643e-4f50-b830-60dd181474dc
00:10:36.680 --> 00:10:38.790
So in C + + 20 we've got the comma

NOTE Confidence: 0.842867399

6fb2af39-2599-4169-9689-8cecd00b7730
00:10:38.857 --> 00:10:40.657
here and it's not diagnosing,

NOTE Confidence: 0.842867399

08a96f4a-9a24-4ad2-9422-969abf89d35e
00:10:40.660 --> 00:10:42.118
so I think this is actually a compiler bug.

NOTE Confidence: 0.842867399

669259ff-8219-431c-9253-cd58a5fe7bbd
00:10:42.120 --> 00:10:44.642
I'm going to need to report

NOTE Confidence: 0.842867399

848c3d21-5de4-40ae-9c3f-b9f382b3e766
00:10:44.642 --> 00:10:46.530
this after this video.

NOTE Confidence: 0.842867399

82f2c1e2-1d7e-4542-8dfa-294b76946136
00:10:46.530 --> 00:10:49.210
Or perhaps one of the STL maintainers here

NOTE Confidence: 0.842867399

1dd64bb0-f13e-404e-810c-34b7f8565f1c
00:10:49.210 --> 00:10:51.647
can report the compiler bug as I talk.

NOTE Confidence: 0.842867399

8d53d122-3e10-441a-9462-8627a4c25630
00:10:51.650 --> 00:10:55.943
The issue here is that I am calling operator,

NOTE Confidence: 0.842867399

e163d1a5-72ca-4bdb-8201-cd5a4bb2e468
00:10:55.950 --> 00:10:57.237
not equal in.

NOTE Confidence: 0.842867399

b84c9f4c-36c9-4b5c-bbc1-c98d6d50fa49
00:10:57.237 --> 00:11:00.240
C20 mode we got the spaceship operator

NOTE Confidence: 0.842867399

70427c77-d9c7-4b0c-a436-6d78556fdcca
00:11:00.325 --> 00:11:03.328
and along with the spaceship operator we

NOTE Confidence: 0.842867399

7cab280d-5ea6-428e-92a1-1152f568282f
00:11:03.328 --> 00:11:07.028
got a bunch of cool rules that says that

NOTE Confidence: 0.842867399

be06ac6c-e5a0-4569-8831-5fe924cc2f53
00:11:07.028 --> 00:11:09.916
a class only needs to provide operator equal.

NOTE Confidence: 0.842867399

ea8b7a6f-e1d2-4df8-9b3b-ec9e3c438bd4
00:11:09.916 --> 00:11:11.920
Let me add some comments here.

NOTE Confidence: 0.842867399

afc0b7ec-7369-401d-a468-317bddf6a687
00:11:11.920 --> 00:11:15.118
Up equal and then if you

NOTE Confidence: 0.842867399

dcede4ef-1cbe-456e-b26f-fea300c96748
00:11:15.118 --> 00:11:16.717
provide operator spaceship.

NOTE Confidence: 0.842867399

7caeaeb4-da97-43dc-800a-ff864fb6e52d
00:11:16.720 --> 00:11:19.896
Then the equal will be used to generate,

NOTE Confidence: 0.842867399

90c96694-5854-432f-85d8-5bffd02ea6aa
00:11:19.900 --> 00:11:20.779
um, not equal.

NOTE Confidence: 0.842867399

788c4e1d-cf1f-45fc-910f-83c19358f3eb
00:11:20.779 --> 00:11:22.537
Or really if you say not

NOTE Confidence: 0.842867399

cc4f7e4d-6e00-48e0-83f5-94bfa862869e
00:11:22.537 --> 00:11:24.080
equal it gets rewritten,

NOTE Confidence: 0.842867399

b0cf3bf4-69f5-4d81-92fd-185909e6e954
00:11:24.080 --> 00:11:26.628
I should say rewritten.

NOTE Confidence: 0.842867399

1b2f6b8e-ac78-47db-af76-e19bb04e4f52
00:11:26.630 --> 00:11:31.845
So usage of not equal is rewritten.

NOTE Confidence: 0.842867399

e7e75454-d009-412d-96de-822536f3369c
00:11:31.850 --> 00:11:35.258
Return to equal, equal and with

NOTE Confidence: 0.842867399

ea8c6fe6-303a-417e-aa8f-82f46889169c
00:11:35.258 --> 00:11:38.690
spaceship any usage of less than,

NOTE Confidence: 0.842867399

b86d8035-2d03-4065-a844-420b50eec92e
00:11:38.690 --> 00:11:39.157
greater,

NOTE Confidence: 0.842867399

b0541963-fc4c-4309-9095-8c69db91bee7
00:11:39.157 --> 00:11:40.091
less, equal,

NOTE Confidence: 0.842867399

59a48a64-c0df-4aba-8687-e922540d010a
00:11:40.091 --> 00:11:43.360
greater or equal is rewritten to spaceship.

NOTE Confidence: 0.550376622

39152db0-244a-404e-85df-21dc94a101e5
00:11:45.820 --> 00:11:48.780
Umm the there's articles, uh,

NOTE Confidence: 0.550376622

e11cf7fa-2e34-4498-b9c0-71ef0040a06d
00:11:48.780 --> 00:11:52.248
that will explain why equal and

NOTE Confidence: 0.550376622

aa2fc413-e737-4582-8047-1c6ad04f7d0f
00:11:52.248 --> 00:11:54.560
spaceship are treated differently.

NOTE Confidence: 0.550376622

8462a364-2da0-4908-bd63-f9345d21e77d
00:11:54.560 --> 00:11:56.300
But the quick answer is that

NOTE Confidence: 0.550376622

004507f9-99e6-4487-b02d-e5ffd5b9172d
00:11:56.300 --> 00:11:58.031
for some things equality can be

NOTE Confidence: 0.550376622

7df3def5-c157-4a55-ba0f-70a873c10fc9
00:11:58.031 --> 00:11:59.573
answered faster than a full less

NOTE Confidence: 0.550376622

2470cba5-af04-44ff-af94-7ca64d89fee6
00:11:59.573 --> 00:12:01.460
than or greater than comparison.

NOTE Confidence: 0.550376622

7b75fea5-46a6-420f-b2a3-502f9f7e2172
00:12:01.460 --> 00:12:03.356
For example, if you have two

NOTE Confidence: 0.550376622

ea07b1b1-72b0-4c33-9de7-b94c81e5ee86
00:12:03.356 --> 00:12:04.620
vectors of different lengths,

NOTE Confidence: 0.550376622

10b992fe-6952-4b73-9498-c8a51c865627
00:12:04.620 --> 00:12:06.660
we can see instantly that they are non

NOTE Confidence: 0.550376622

bf787c18-da21-4626-84d2-349dca49b2af
00:12:06.660 --> 00:12:08.699
equal by just comparing their links.

NOTE Confidence: 0.550376622

ae8fed8e-a076-4619-ac30-0f1cf7ff7efa
00:12:08.700 --> 00:12:10.278
Whereas if you want to know

NOTE Confidence: 0.550376622

60fbd748-3688-4644-9336-ada81e7e2770
00:12:10.278 --> 00:12:12.020
is 1 less than the other,

NOTE Confidence: 0.550376622

5c47f53d-e2f7-44e9-898b-3b70938d982a
00:12:12.020 --> 00:12:14.068
we actually have to look at every element

NOTE Confidence: 0.550376622

590378c5-104b-4268-9393-d947307ee693
00:12:14.068 --> 00:12:15.916
because if one has the same elements.

NOTE Confidence: 0.550376622

99f392f7-4696-43ce-998b-751f067b0ef0
00:12:15.920 --> 00:12:18.710
Is another and is simply a prefix or suffix.

NOTE Confidence: 0.550376622

17c84bd3-2fbd-4f0c-a6af-563a3522246f
00:12:18.710 --> 00:12:21.094
Then we actually do need to compare all

NOTE Confidence: 0.550376622

adaec9ac-b081-4b54-bf70-981a8d659a53
00:12:21.094 --> 00:12:23.410
the elements until we exhaust one of them,

NOTE Confidence: 0.550376622

e9bcb856-8ec9-48d5-9133-143e41c3af53
00:12:23.410 --> 00:12:25.642
so that's why they can't be fully fully

NOTE Confidence: 0.550376622

22e7145e-5ace-4408-a6e1-595ca80392bb
00:12:25.642 --> 00:12:27.850
unified all the time into just spaceship.

NOTE Confidence: 0.550376622

cbea0f04-f600-475e-ba03-fb81d1253cf4
00:12:27.850 --> 00:12:29.810
But we can always generate.

NOTE Confidence: 0.550376622

d154e88b-96f5-428c-a0ca-f8e8f6681a04
00:12:29.810 --> 00:12:31.772
Or we can always rewrite not equal and equal,

NOTE Confidence: 0.550376622

b57c77dc-f785-434c-be3c-4610fe19605c
00:12:31.780 --> 00:12:33.628
and the STL Now takes advantage

NOTE Confidence: 0.550376622

f671e51b-37ef-4d83-bf65-1d2bab6333bc
00:12:33.628 --> 00:12:35.629
of this in C + 20 mode.

NOTE Confidence: 0.550376622

a4a8fbae-8541-412f-8661-772a67cf0b99
00:12:35.630 --> 00:12:37.846
I can actually dig up the relevant code.

NOTE Confidence: 0.550376622

0e5119ec-298d-48d0-b08c-9c6880aa245d
00:12:37.850 --> 00:12:39.298
Let's go to vector.

NOTE Confidence: 0.874836726666667

8b5d545e-d227-4995-8a3f-9ab12bff259f
00:12:41.580 --> 00:12:43.530
Here we go. Let's look at.

NOTE Confidence: 0.874836726666667

9d5e30ed-92cb-4386-8c53-456128802f35
00:12:43.530 --> 00:12:45.000
Let's just search for occurrences

NOTE Confidence: 0.874836726666667

11417ed5-73cd-447a-b23d-7a6173aa46ee
00:12:45.000 --> 00:12:46.176
of operator equal equal.

NOTE Confidence: 0.874836726666667

8a2d9470-03fd-47c4-9da2-4cec1d197101
00:12:46.180 --> 00:12:48.346
So in our internal implementation vector

NOTE Confidence: 0.874836726666667

a253e1e7-f284-47ca-9294-86c3b06b7f81
00:12:48.346 --> 00:12:50.553
iterators we have something called under

NOTE Confidence: 0.874836726666667

8c876dff-24c9-4a30-adcc-fae6ff84ff92
00:12:50.553 --> 00:12:52.328
score capital vector constant iterator

NOTE Confidence: 0.874836726666667

be3f7c80-f823-4187-90c2-0c63cad19e96
00:12:52.328 --> 00:12:54.779
and another one for modifiable iterators.

NOTE Confidence: 0.874836726666667

dbd95004-f0f7-4c1f-a313-07905e94075c
00:12:54.780 --> 00:12:57.505
We always provide an operator

NOTE Confidence: 0.874836726666667

ada1d197-45de-4b64-a653-82821bc62a0b
00:12:57.505 --> 00:13:00.436
equal equal in C + + 20 mode.

NOTE Confidence: 0.874836726666667

8705990a-fa52-44e8-b3a6-af1667338e94
00:13:00.440 --> 00:13:03.688
Here's our internal macro to indicate that we

NOTE Confidence: 0.874836726666667

c2808fdc-7a29-4a9e-8ee4-33a41b9a9303
00:13:03.688 --> 00:13:06.677
also provide a spaceship in non CF 20 mode.

NOTE Confidence: 0.874836726666667

2e81c7e3-fd2c-47a1-b331-24dfce500fa0
00:13:06.680 --> 00:13:08.960
We then need to provide not equal less,

NOTE Confidence: 0.874836726666667

bc4bdd23-f500-4b24-bc59-182f5dcf5b56
00:13:08.960 --> 00:13:11.010
greater less equal greater equal.

NOTE Confidence: 0.874836726666667

fa8e3834-9cba-464b-9a8c-d716d12ec63f
00:13:11.010 --> 00:13:13.026
But when when when we're in 20 mode,

NOTE Confidence: 0.874836726666667

efe11560-4a6c-4a14-a95c-0289cf3a9629
00:13:13.030 --> 00:13:14.806
all we need is a quality and spaceship,

NOTE Confidence: 0.874836726666667

a7b64663-300b-449f-8a98-59df81151969
00:13:14.810 --> 00:13:17.084
and the rest will be rewritten

NOTE Confidence: 0.874836726666667

8de5c793-3a34-4f8e-a9f5-84ced5d4db6e
00:13:17.084 --> 00:13:19.179
to one of these two O.

NOTE Confidence: 0.874836726666667

992d0687-f78e-4662-ae83-ee2ff3c0c2db
00:13:19.180 --> 00:13:22.620
Going back to why I was momentarily confused.

NOTE Confidence: 0.874836726666667

6aa57727-5a10-4eb5-b16c-d73cc6e7daac
00:13:22.620 --> 00:13:24.420
Um, we have very carefully marked

NOTE Confidence: 0.874836726666667

c1ed3d4e-dee0-4ffa-a2be-151feb4c6768
00:13:24.420 --> 00:13:26.747
all of these things as no discard

NOTE Confidence: 0.874836726666667

c3510baa-f5b0-48d8-a7b6-df8d9a66efe8
00:13:26.747 --> 00:13:28.883
because calling any of these iterator

NOTE Confidence: 0.874836726666667

799b9cc7-43ec-4bf2-bbcd-67413e5f0cda
00:13:28.883 --> 00:13:30.380
comparisons is a pure observer,

NOTE Confidence: 0.874836726666667

5339ddfc-d9b1-4f55-a47f-7b706330334a
00:13:30.380 --> 00:13:32.360
and if you drop that on the floor while you

NOTE Confidence: 0.874836726666667

c1ea4dd5-913d-4822-8f71-8a7f0211d724
00:13:32.412 --> 00:13:34.260
probably have a book like I just showed.

NOTE Confidence: 0.874836726666667

8bb1a1dc-c0c1-4c5d-9fae-9c03f2583363
00:13:34.260 --> 00:13:34.652
However,

NOTE Confidence: 0.874836726666667

a3de1255-6c65-4e28-be96-5f392e655e9f
00:13:34.652 --> 00:13:38.180
this has shown that if the compiler if the

NOTE Confidence: 0.874836726666667

40ca085e-690a-4bff-aa3d-05c5bb5fe0df
00:13:38.259 --> 00:13:41.715
user has written me being the user not equal,

NOTE Confidence: 0.874836726666667

7334cae5-43bf-44ea-9ad6-f933a4655363
00:13:41.720 --> 00:13:43.260
and then the compiler says,

NOTE Confidence: 0.874836726666667

4d9834c2-5c2e-427c-85f4-a822516a4793
00:13:43.260 --> 00:13:44.660
oh, we're in C + 20 mode,

NOTE Confidence: 0.874836726666667

025c6986-8a73-49d7-b0ff-4c5051407c26
00:13:44.660 --> 00:13:46.346
I'm going to rewrite that into

NOTE Confidence: 0.874836726666667

f5741b5d-7e81-4bd7-8904-9417085c6641
00:13:46.346 --> 00:13:48.172
equal equal because I see that

NOTE Confidence: 0.874836726666667

8e7eb21d-578d-44d6-8008-88ceb29d810e
00:13:48.172 --> 00:13:49.468
operator and this iterator.

NOTE Confidence: 0.874836726666667

b8d5f495-e890-499f-b409-1cb19cfd59c7
00:13:49.470 --> 00:13:52.358
Class did not provide a not equal operator.

NOTE Confidence: 0.874836726666667

55f234c1-b381-47de-800d-a62fdf5a5f3e
00:13:52.360 --> 00:13:54.436
When the compiler does that rewriting,

NOTE Confidence: 0.874836726666667

5dfa7194-e91a-4065-a6a4-4c8219fe7886
00:13:54.440 --> 00:13:57.616
it is not carrying along the node discard.

NOTE Confidence: 0.874836726666667

9994e6fc-930e-48e5-80bd-da45c2e37eb4
00:13:57.620 --> 00:13:59.215
We marked the actual operator

NOTE Confidence: 0.874836726666667

9435a453-8042-47c9-81b8-ba36738f363e
00:13:59.215 --> 00:14:01.340
that's being called as no discard,

NOTE Confidence: 0.874836726666667

336b31c4-3cc0-4a67-8785-8bf668b028c0
00:14:01.340 --> 00:14:03.236
but that bit is being lost

NOTE Confidence: 0.874836726666667

2d74fe9e-171c-4923-931c-f199e89f274e
00:14:03.236 --> 00:14:04.500
when the rewrite happens.

NOTE Confidence: 0.874836726666667

d2401605-7a06-4e1e-9032-dc48851347a6
00:14:04.500 --> 00:14:07.353
That should not be the case for this rewrite.

NOTE Confidence: 0.874836726666667

ea53cb6a-a52b-4f11-b111-2f7985ac9b7c
00:14:07.360 --> 00:14:08.524
If the function that's

NOTE Confidence: 0.874836726666667

2c98b490-96b9-442e-95e9-2fd20821b0ca
00:14:08.524 --> 00:14:09.979
ultimately called is no discard,

NOTE Confidence: 0.874836726666667

8645cd57-66aa-4ac4-ae73-87bf07259346
00:14:09.980 --> 00:14:11.420
then the rewritten call should

NOTE Confidence: 0.874836726666667

604cdac0-b696-4d40-b308-9861274d9249
00:14:11.420 --> 00:14:13.300
absolutely emit a no discard warning.

NOTE Confidence: 0.874836726666667

e6130ab8-a424-4433-9b9a-35d371c7d9e8
00:14:13.300 --> 00:14:14.820
So we should get a warning for that.

NOTE Confidence: 0.874836726666667

5c71e559-4224-4ec5-b020-7aac88aeb292
00:14:14.820 --> 00:14:16.956
I see a new bubble in the chat.

NOTE Confidence: 0.874836726666667

3fe3a517-d871-4650-b904-a8bfd74cf923
00:14:16.960 --> 00:14:18.472
Did we get something?

NOTE Confidence: 0.874836726666667

bea0fee9-7b9a-41fb-b9cc-90e87b0c0bd7
00:14:18.472 --> 00:14:19.606
Here we go.

NOTE Confidence: 0.874836726666667

7f0072d5-6ae4-450f-8310-4026f5fc9985
00:14:19.610 --> 00:14:21.872
OK yeah there Casey Nicole are

NOTE Confidence: 0.874836726666667

52b74132-f408-4edd-8b35-f2a92da99711
00:14:21.872 --> 00:14:23.665
asking who should report Cameron?

NOTE Confidence: 0.874836726666667

62dd1d41-f20a-4068-90e4-2bb509234234
00:14:23.665 --> 00:14:25.375
Our compiler Dev says can't confirm

NOTE Confidence: 0.874836726666667

4d541692-baf2-4acf-9668-9b678b9c957f
00:14:25.375 --> 00:14:27.722
I have a bucket of Casey Bugs and

NOTE Confidence: 0.874836726666667

ebc412b9-b54b-4d1f-8870-b690157f0416
00:14:27.722 --> 00:14:29.482
Nicole reports that GCC exhibits

NOTE Confidence: 0.874836726666667

708d8bd5-c956-499d-a833-16f76c572d99
00:14:29.482 --> 00:14:31.958
the same bug but Clang does not.

NOTE Confidence: 0.874836726666667

c9be72c8-2bfb-4270-8d2a-a0257422949f
00:14:31.960 --> 00:14:34.336
So we have some compiler variation,

NOTE Confidence: 0.874836726666667

5dabf992-2fc9-49a3-b438-9c9de5ed26fe
00:14:34.340 --> 00:14:36.538
but hopefully in the future all compilers

NOTE Confidence: 0.874836726666667

586e951d-4838-43ab-9e77-b589fbf5c256
00:14:36.538 --> 00:14:38.468
will properly carry over notice cards.

NOTE Confidence: 0.874836726666667

4d0db112-9f29-4a0a-8cad-8e12280aba4d
00:14:38.470 --> 00:14:40.255
So this is actually good to know.

NOTE Confidence: 0.874836726666667

62d94424-3469-49b8-936c-bafbc2245f98
00:14:40.260 --> 00:14:43.372
I did not realize that this was language

NOTE Confidence: 0.874836726666667

f4c21a7a-144c-4c3c-a78c-c0b6c172a351
00:14:43.372 --> 00:14:46.137
mode sensitive until I wrote this example.

NOTE Confidence: 0.874836726666667

ef0faea4-ee43-4c5a-859f-9b727f133ad5
00:14:46.140 --> 00:14:46.388
OK,

NOTE Confidence: 0.874836726666667

4c4b7677-1d60-4ce7-8cde-759acd481754
00:14:46.388 --> 00:14:48.124
Casey is 1 argument that it's not

NOTE Confidence: 0.874836726666667

db535ab9-1108-462b-a860-da056f7b5789
00:14:48.124 --> 00:14:50.443
a bug that not X equal equal Y

NOTE Confidence: 0.874836726666667

c3ed3186-7826-4ecf-9a72-84cc0bba61b4
00:14:50.443 --> 00:14:52.197
doesn't discard the result of X = Y,

NOTE Confidence: 0.874836726666667

ac7bdaf1-78a4-4048-9f31-adbbdcb4e310
00:14:52.200 --> 00:14:53.475
But it's really the compiler

NOTE Confidence: 0.874836726666667

03c48f16-3752-4a22-a9e2-bbb29abc5fd9
00:14:53.475 --> 00:14:54.495
should because it can.

NOTE Confidence: 0.874836726666667

a29cb268-2e47-45d5-a257-489750892af0
00:14:54.500 --> 00:14:56.649
The compiler is doing the rewriting so

NOTE Confidence: 0.874836726666667

6c49b356-fe18-4e57-960d-83dee4bc2a0e
00:14:56.649 --> 00:14:59.561
it can see that the top level invocation

NOTE Confidence: 0.874836726666667

2248412a-fe4f-437d-8ba0-ce0db652a2ad
00:14:59.561 --> 00:15:03.380
is being discarded, and it really should.

NOTE Confidence: 0.874836726666667

3b21670f-9310-48cb-ae95-8eed61cdbf0a
00:15:03.380 --> 00:15:07.420
And then yeah, Cameron has an example where.

NOTE Confidence: 0.874836726666667

3ca4c9c6-bc74-4515-9544-930571f259b9
00:15:07.420 --> 00:15:08.000
Oh, interesting.

NOTE Confidence: 0.874836726666667

8cd6f63b-1869-4615-a0a0-aa69c97a58a7
00:15:08.000 --> 00:15:09.160
So I wonder why?

NOTE Confidence: 0.874836726666667

9752e2d0-c8f2-43c0-a441-b2ead8bb2f57
00:15:09.160 --> 00:15:11.638
Why cling handles some of them?

NOTE Confidence: 0.874836726666667

fb9e9dd2-4ec1-4cb1-aa6b-a85bde868287
00:15:11.640 --> 00:15:13.584
OK, so a little bit more

NOTE Confidence: 0.874836726666667

e22a5b60-77e5-45d0-9845-8b1347308231
00:15:13.584 --> 00:15:14.556
investigation needed there.

NOTE Confidence: 0.874836726666667

16738a2c-5fe5-4fb3-b581-f785cd24610a
00:15:14.560 --> 00:15:17.220
So that's the idea behind no discard.

NOTE Confidence: 0.874836726666667

6d8a8fe4-b8cd-4825-98a7-a8f8f058e874
00:15:17.220 --> 00:15:19.500
Now let me quickly explain what

NOTE Confidence: 0.874836726666667

23879e6f-46f9-49ca-ab5a-5e074186755a
00:15:19.500 --> 00:15:21.980
this PR is going to look at.

NOTE Confidence: 0.874836726666667

c7ab0cfb-5ea7-4003-8254-ec0aba4b61da
00:15:21.980 --> 00:15:24.817
Notice card was added in C-17

NOTE Confidence: 0.874836726666667

ab10b615-f10a-4ab4-b2a1-2a5f690d8804
00:15:24.817 --> 00:15:28.279
and we are now using that.

NOTE Confidence: 0.874836726666667

7c20a365-1175-4069-9427-83c6275e7924
00:15:28.280 --> 00:15:28.908
In fact,

NOTE Confidence: 0.874836726666667

b8a068ae-0bcd-4f6f-8238-97e701d86605
00:15:28.908 --> 00:15:31.420
we use it even in C + 14

NOTE Confidence: 0.806557117857143

19b3b102-41d3-4576-a0b8-a98d31ee8692
00:15:31.519 --> 00:15:33.519
mode because we have.

NOTE Confidence: 0.806557117857143

16935218-de73-4f18-85d8-8c9512767ea9
00:15:33.520 --> 00:15:36.397
Uh, it it's not permitted as future

NOTE Confidence: 0.806557117857143

17964303-5a88-420e-a2c8-b7142bf59b31
00:15:36.397 --> 00:15:38.826
technology where uh features from

NOTE Confidence: 0.806557117857143

81c26a06-1ba8-418e-80af-0f9499768e84
00:15:38.826 --> 00:15:41.066
future standards are supported.

NOTE Confidence: 0.806557117857143

4a698891-5bb1-45d3-8db4-0ae8bf2b2634
00:15:41.070 --> 00:15:44.200
And C + 20 added notice card with the reason.

NOTE Confidence: 0.806557117857143

34f04b3a-452c-45f6-8d23-257ca12219bc
00:15:44.200 --> 00:15:45.362
So you can now put a string

NOTE Confidence: 0.806557117857143

083c4a11-bd6f-4e84-ba44-d385a8a78224
00:15:45.362 --> 00:15:46.080
literal and notice card.

NOTE Confidence: 0.806557117857143

f6afb610-01cf-4c57-b99c-532eddc64778
00:15:46.080 --> 00:15:46.980
Let's see what that looks like,

NOTE Confidence: 0.806557117857143

8fa848a0-4107-4d32-8185-8ce703cc4b17
00:15:46.980 --> 00:15:48.204
but the compiler.

NOTE Confidence: 0.806557117857143

db33a05f-51a5-4946-af9f-392d33836cfb
00:15:48.204 --> 00:15:51.060
Let me get rid of vector here.

NOTE Confidence: 0.806557117857143

9c193770-323e-4167-9517-372567a35196
00:15:51.060 --> 00:15:53.811
OK, so let me go back to

NOTE Confidence: 0.806557117857143

87b99cf3-66e4-4592-90d9-b8e8063675ad
00:15:53.811 --> 00:15:56.888
this example node discard.

NOTE Confidence: 0.806557117857143

39050803-912b-46a6-9652-adef106e4eff
00:15:56.888 --> 00:16:00.320
Uh, pure observer?

NOTE Confidence: 0.806557117857143

a60c5822-e403-4bf6-b792-43b8b28abea5
00:16:00.320 --> 00:16:05.740
And square and and turn n * N.

NOTE Confidence: 0.806557117857143

4c1aa160-0f63-4e38-9a80-b0e7252d229b
00:16:05.740 --> 00:16:11.260
OK, so I can see out.

NOTE Confidence: 0.806557117857143

78dae2dc-54dd-4e28-b18f-3e833285f535
00:16:11.260 --> 00:16:15.370
Square 5 and everything is good.

NOTE Confidence: 0.806557117857143

e69f2b8b-8f79-452e-99f9-7abecc75d8df
00:16:15.370 --> 00:16:18.628
20 mode warnings enabled, it works,

NOTE Confidence: 0.806557117857143

64ce24e4-e09e-4a9d-a7e2-57a419182266
00:16:18.630 --> 00:16:21.060
but if I call square 5 all by itself

NOTE Confidence: 0.806557117857143

cdcab787-68ce-403e-8da2-e790400ab8f7
00:16:21.060 --> 00:16:24.470
with the semi colon, what happens?

NOTE Confidence: 0.806557117857143

dc74f6a8-633d-4d8d-b33c-017f619154db
00:16:24.470 --> 00:16:26.610
OK, we get warning now.

NOTE Confidence: 0.806557117857143

c8e5e0bd-d89f-4ab6-b66d-9dcaaf897d7c
00:16:26.610 --> 00:16:28.286
The numbers changed 4858.

NOTE Confidence: 0.806557117857143

db0cefdb-ebb5-4578-8db1-fb65e31cec74
00:16:28.286 --> 00:16:31.330
I think that is different than before

NOTE Confidence: 0.806557117857143

7fbf1ac7-025f-42d6-9071-442556f751d5
00:16:31.330 --> 00:16:33.550
discarding return value, pure observer.

NOTE Confidence: 0.806557117857143

0e11fb7f-54b1-470e-97e8-af82e92e2b9c
00:16:33.550 --> 00:16:35.632
So whatever string literal you put

NOTE Confidence: 0.806557117857143

331472a9-cdc1-4aa0-9fd2-14f6c1c3274d
00:16:35.632 --> 00:16:37.919
in this notice card gets emitted.

NOTE Confidence: 0.806557117857143

4131a9ee-7247-44a6-b698-622d1a12608d
00:16:37.920 --> 00:16:39.846
I guess I can try both.

NOTE Confidence: 0.806557117857143

81a3bc55-b49e-48d4-87ba-280c9ab8a4ff
00:16:39.850 --> 00:16:42.846
What if we don't have the reason?

NOTE Confidence: 0.806557117857143

5be5b1e9-8f8f-4b92-b0ca-ae9dc701e38f
00:16:42.850 --> 00:16:45.646
What if we were cubing something?

NOTE Confidence: 0.806557117857143

1cab16bf-2f45-42d5-9250-9ff7e335faef
00:16:45.650 --> 00:16:49.538
And then we call Cuba 5.

NOTE Confidence: 0.806557117857143

3c97f09f-0319-48fd-9a98-4558242d25e2
00:16:49.540 --> 00:16:51.949
There we go.

NOTE Confidence: 0.806557117857143

2ea10746-c7b3-43d2-8eea-3f925828e517
00:16:51.950 --> 00:16:53.790
OK.

NOTE Confidence: 0.806557117857143

0032ded2-3a1a-46bb-a002-26c47b9aec59
00:16:53.790 --> 00:16:54.588
Umm, OK,

NOTE Confidence: 0.806557117857143

c49338a7-fd0b-4166-81ab-c16cbbdafd8f
00:16:54.588 --> 00:16:54.987
yeah,

NOTE Confidence: 0.806557117857143

98df801c-8d34-4cc4-b073-a572745776bd
00:16:54.987 --> 00:16:56.982
indeed they are different warning

NOTE Confidence: 0.806557117857143

5aa0672a-2433-4b48-92b8-38a65bbf18d5
00:16:56.982 --> 00:16:59.607
numbers and we can customize the message

NOTE Confidence: 0.806557117857143

dbe17858-330c-4658-b928-bf3563b1cf7f
00:16:59.607 --> 00:17:01.970
with no discard with the message.

NOTE Confidence: 0.806557117857143

ceae163c-14ca-48f6-a9ea-d912301a2d5a
00:17:01.970 --> 00:17:04.931
So we had filed an issue early

NOTE Confidence: 0.806557117857143

38185497-7c67-46c2-873d-37fc8d273867
00:17:04.931 --> 00:17:06.977
on in the repost history noting

NOTE Confidence: 0.806557117857143

c606e233-271e-4be4-83f0-3c6cc5135861
00:17:06.977 --> 00:17:08.832
when this feature was voted in

NOTE Confidence: 0.806557117857143

5166285a-4b6c-4d7e-90a9-2a5f6801e094
00:17:08.832 --> 00:17:10.941
and one of the two dogs that we

NOTE Confidence: 0.806557117857143

8f2b89ee-a81a-4c3a-9262-7c6cbaa4f13c
00:17:10.941 --> 00:17:12.768
had in mind was maybe we could

NOTE Confidence: 0.806557117857143

1a4e23ea-da18-438b-b9b3-ae86026c2929
00:17:12.768 --> 00:17:15.168
use this in the STL to provide a

NOTE Confidence: 0.806557117857143

b6076ca0-0d47-471e-a457-8cad6a405f97
00:17:15.168 --> 00:17:17.090
little bit more context to users.

NOTE Confidence: 0.806557117857143

5ab9fc80-64f8-436b-8e3b-3424611f12e0
00:17:17.090 --> 00:17:18.946
So as I mentioned,

NOTE Confidence: 0.806557117857143

607ce107-2fb5-4e77-a0cd-03f1b44549ba
00:17:18.946 --> 00:17:22.330
we have a few criteria which we've

NOTE Confidence: 0.806557117857143

28ca6ee0-016f-4331-8dd7-e2f9acde809b
00:17:22.330 --> 00:17:24.360
sort of mentally laid out and we've.

NOTE Confidence: 0.806557117857143

1b42d95e-fc05-41b7-b2e9-eb120109193a
00:17:24.360 --> 00:17:26.184
Explained it like to the Standardization

NOTE Confidence: 0.806557117857143

1181f2e2-25ad-4536-b03e-74a3cdbb6cf7
00:17:26.184 --> 00:17:27.977
Committee a few times because the

NOTE Confidence: 0.806557117857143

ebed7098-c9de-4507-84e3-1131da02def5
00:17:27.977 --> 00:17:29.797
standard is now marking a few things

NOTE Confidence: 0.806557117857143

c24fa44b-8fc0-4406-9279-ea197d5d7f1b
00:17:29.797 --> 00:17:31.443
this notice card which strongly

NOTE Confidence: 0.806557117857143

3ab60e5d-149e-421b-b921-d06e8084d375
00:17:31.443 --> 00:17:33.108
suggests to implementers that they

NOTE Confidence: 0.806557117857143

8d25a73b-eaf3-4ced-8d71-c41f5bd26840
00:17:33.110 --> 00:17:34.550
do that in their implementation,

NOTE Confidence: 0.806557117857143

27239f88-5d7d-46c9-a105-98bdc6183e91
00:17:34.550 --> 00:17:36.040
although it's not a binding

NOTE Confidence: 0.806557117857143

3f92e95f-b291-4187-b862-f419e7d0b8e2
00:17:36.040 --> 00:17:37.530
requirement why you would want

NOTE Confidence: 0.806557117857143

3364eeae-2e48-4665-990e-3732fe609b1e
00:17:37.587 --> 00:17:39.075
to mark things as no discard.

NOTE Confidence: 0.806557117857143

b44be73e-aa64-47b8-85dc-e4a2c1e5ac19
00:17:39.080 --> 00:17:41.474
So by far the most common

NOTE Confidence: 0.806557117857143

1412604b-2a01-405f-814e-553f12f7187a
00:17:41.474 --> 00:17:43.070
reason is pure observers,

NOTE Confidence: 0.806557117857143

19b5a5dd-1616-4d70-83a8-b5cdf3908551
00:17:43.070 --> 00:17:45.961
things that do not have side effects

NOTE Confidence: 0.806557117857143

8d915997-3329-4d24-a7be-0ab61bb85804
00:17:45.961 --> 00:17:49.904
or they have side effects in very rare

NOTE Confidence: 0.806557117857143

c0a2e8e8-1c00-4883-94b4-dc2437f66a45
00:17:49.904 --> 00:17:52.519
and unusually pathological cases so.

NOTE Confidence: 0.806557117857143

34114421-4f20-4fbe-9fab-f18b248c8fb4
00:17:52.520 --> 00:17:52.922
Comparisons.

NOTE Confidence: 0.806557117857143

22bd12b2-8f97-4aef-bffe-b0cc2ff16893
00:17:52.922 --> 00:17:55.334
Those are almost always no discard.

NOTE Confidence: 0.806557117857143

0129e616-8109-48b1-afa8-a6afbd4c7525
00:17:55.340 --> 00:17:58.220
Another example is like stood find.

NOTE Confidence: 0.806557117857143

3f4d63e8-e72f-4396-b75d-fd98fd1efccb
00:17:58.220 --> 00:18:00.190
Stood find takes a range

NOTE Confidence: 0.806557117857143

c43f7055-8cb3-4ceb-8e06-23a8c7c7d248
00:18:00.190 --> 00:18:02.160
of elements and a value,

NOTE Confidence: 0.806557117857143

41998147-8dac-4913-9c8d-53210f10a659
00:18:02.160 --> 00:18:05.107
or find if takes a predicate and

NOTE Confidence: 0.806557117857143

17795736-04d1-4783-a2d4-1bb3f321c5be
00:18:05.107 --> 00:18:07.796
looks for the first occurrence of an

NOTE Confidence: 0.806557117857143

0bdede22-9081-4076-8cff-8ac7419c94cf
00:18:07.796 --> 00:18:09.840
element that's equal to the desired one,

NOTE Confidence: 0.806557117857143

a056d4bc-f86e-4c15-a04e-36d9adc772df
00:18:09.840 --> 00:18:10.990
or satisfies the predicate and

NOTE Confidence: 0.806557117857143

a1565f0a-3439-42fd-9dec-38536af90d36
00:18:10.990 --> 00:18:12.300
then returns an iterator to it,

NOTE Confidence: 0.806557117857143

12907879-1a16-4b23-9c00-82235192375f
00:18:12.300 --> 00:18:14.244
or the end iterator if it

NOTE Confidence: 0.806557117857143

8706644a-218e-4cf1-994e-4e444dd5877c
00:18:14.244 --> 00:18:15.216
didn't find anything.

NOTE Confidence: 0.806557117857143

0a430998-beda-4e90-b98b-423cac1b337b
00:18:15.220 --> 00:18:17.330
That is a pure observer.

NOTE Confidence: 0.806557117857143

a7ebc130-c4aa-4871-bbf5-0a295150c16e
00:18:17.330 --> 00:18:18.959
And if you call a find and you drop

NOTE Confidence: 0.806557117857143

a9b955f4-f4f3-4df0-b264-c65892fa6642
00:18:18.959 --> 00:18:20.679
the value the iterator on the floor,

NOTE Confidence: 0.806557117857143

4710859f-82c4-4afc-a49b-a70c4d2076fd
00:18:20.680 --> 00:18:22.680
you've probably done something wrong.

NOTE Confidence: 0.806557117857143

96c608cb-23dd-4b72-9e83-8932211b091d
00:18:22.680 --> 00:18:23.556
So you're just spending

NOTE Confidence: 0.806557117857143

d1b8c4a4-29a6-43de-afb4-55de5a171507
00:18:23.556 --> 00:18:24.870
cycles when you don't need to.

NOTE Confidence: 0.806557117857143

ed5019b1-c40e-4aeb-aead-abad43af595c
00:18:24.870 --> 00:18:26.544
It is true that either the

NOTE Confidence: 0.806557117857143

9e5a1ccc-7011-4da0-a5dd-df5ec1bb2205
00:18:26.544 --> 00:18:28.038
comparison could have side effects

NOTE Confidence: 0.806557117857143

ec25ce24-a490-4fe2-9444-acab7739af9b
00:18:28.038 --> 00:18:29.976
because it could go long something,

NOTE Confidence: 0.806557117857143

9b140532-685c-4632-be5f-ef5565bdc4b6
00:18:29.980 --> 00:18:31.388
or go modify something,

NOTE Confidence: 0.806557117857143

f39b505b-b187-4526-84fb-067e53517618
00:18:31.388 --> 00:18:32.796
or especially the predicate

NOTE Confidence: 0.806557117857143

a02699ce-04bc-47f9-b754-6ace946acc34
00:18:32.796 --> 00:18:34.836
form could go have side effects

NOTE Confidence: 0.806557117857143

62042392-cc4a-40a5-bbf6-88e528383267
00:18:34.836 --> 00:18:36.744
somewhere even while it upholds the

NOTE Confidence: 0.806557117857143

ea237d81-8930-4717-97e5-e853266a3f84
00:18:36.806 --> 00:18:38.570
standard while it's conformant,

NOTE Confidence: 0.806557117857143

e0a4acd0-259b-4956-8d92-c2e7f2e7e01f
00:18:38.570 --> 00:18:39.860
as long as it returns consistent

NOTE Confidence: 0.806557117857143

bcd351ed-4fee-4d61-a485-b92a2285656d
00:18:39.860 --> 00:18:41.010
results for the same input.

NOTE Confidence: 0.806557117857143

6984c0c2-8f1a-4e01-87e8-9ae00bcb5e98
00:18:41.010 --> 00:18:42.122
The standard actually doesn't

NOTE Confidence: 0.806557117857143

a7be2b9e-3e5b-4ce3-ac86-f87616c2c34a
00:18:42.122 --> 00:18:43.790
care if that predicate has side

NOTE Confidence: 0.695203041818182

a0623c6e-70d8-446b-a2dc-31d8a07a2b33
00:18:43.835 --> 00:18:45.615
effects, but it would be very

NOTE Confidence: 0.695203041818182

54ed2eeb-6839-485e-a61f-769b3eed6161
00:18:45.615 --> 00:18:47.417
unusual to qualifying only for the

NOTE Confidence: 0.695203041818182

fa4dc9bc-6a58-411d-8846-9668a3edaa00
00:18:47.417 --> 00:18:49.037
side effects of the predicates.

NOTE Confidence: 0.695203041818182

3272673d-51e2-441b-8d78-82007a2dfe8e
00:18:49.040 --> 00:18:50.528
It doesn't mean it never happens.

NOTE Confidence: 0.695203041818182

cc28eac0-2328-48ea-a5a0-7dbf4ea60b10
00:18:50.530 --> 00:18:51.465
In fact, I've seen the

NOTE Confidence: 0.695203041818182

455e0e17-7469-47a9-bb7d-c9461fc4b111
00:18:51.465 --> 00:18:52.700
compiler do it once or twice.

NOTE Confidence: 0.695203041818182

5e958696-b9a2-4aec-97d8-92a84d9f8cb9
00:18:52.700 --> 00:18:55.310
Um, but it's very unusual.

NOTE Confidence: 0.695203041818182

c6e5bb8e-21f8-4918-af34-242dd8861fe0
00:18:55.310 --> 00:18:57.417
So this is not the case where

NOTE Confidence: 0.695203041818182

e307bdef-6390-4099-8d6a-69c71ec88947
00:18:57.417 --> 00:18:59.104
like 10% of calls are totally

NOTE Confidence: 0.695203041818182

4e547476-6734-41f8-b583-e03374c5f301
00:18:59.104 --> 00:19:00.932
valid and 90% of calls are bugs,

NOTE Confidence: 0.695203041818182

419f8854-2525-4446-b0c1-fbd145124e0e
00:19:00.932 --> 00:19:03.542
but we care about the 10% we want to

NOTE Confidence: 0.695203041818182

a2a2acf3-eb9d-4742-8213-ed023bdd93c7
00:19:03.542 --> 00:19:05.726
avoid marking things in those card

NOTE Confidence: 0.695203041818182

c87c1d1e-c85b-419a-9a69-3d294f4e261a
00:19:05.726 --> 00:19:08.588
in the case of like find 99.99% of

NOTE Confidence: 0.695203041818182

4d768b3c-863c-4f6c-bd26-d3e555cc2ad9
00:19:08.588 --> 00:19:10.633
invocations that are discarding that

NOTE Confidence: 0.695203041818182

87ac9de1-5a84-459f-bd18-b6513dff2d3d
00:19:10.633 --> 00:19:12.870
iterator are doing so incorrectly.

NOTE Confidence: 0.695203041818182

ee04ae84-b665-4c06-b854-3add4a6b42e2
00:19:12.870 --> 00:19:15.408
And for that point you know O 1% that

NOTE Confidence: 0.695203041818182

764e58df-471a-4ed3-a875-54530a908bee
00:19:15.408 --> 00:19:17.004
really do want those side effects,

NOTE Confidence: 0.695203041818182

e9ed8e2c-e3d0-458d-85b9-ca712ee2055e
00:19:17.010 --> 00:19:19.383
it's reasonable to ask those users to

NOTE Confidence: 0.695203041818182

8950bee8-6897-4c3c-8931-4f75cc7f4218
00:19:19.383 --> 00:19:21.709
silence the warning in a targeted manner.

NOTE Confidence: 0.695203041818182

d7b7fe66-42d9-4d3b-9666-ce613fd3e079
00:19:21.710 --> 00:19:25.284
So applying like slash WD4834 or.

NOTE Confidence: 0.695203041818182

f421fdf6-4a9e-4c40-aadb-c50d47f5a6ab
00:19:25.284 --> 00:19:27.219
Beauty 4858 to silence these

NOTE Confidence: 0.695203041818182

a3b4bb91-86ae-4221-9b3f-73cd60f9d498
00:19:27.219 --> 00:19:28.380
notice card warnings.

NOTE Confidence: 0.695203041818182

33b574f9-a594-44fc-9b7d-03089adeeecf
00:19:28.380 --> 00:19:29.810
That's a very large hammer.

NOTE Confidence: 0.695203041818182

7cefdaed-a732-4234-895e-77ad6f617cfd
00:19:29.810 --> 00:19:31.434
You don't want to use that because it

NOTE Confidence: 0.695203041818182

0989fd7c-adeb-4b35-ac4b-093552bad9a4
00:19:31.434 --> 00:19:33.339
shuts up every single notice card warning.

NOTE Confidence: 0.695203041818182

4e7ed440-42fc-4e5b-a908-967ad396b134
00:19:33.340 --> 00:19:34.985
Instead, if you see a notice card

NOTE Confidence: 0.695203041818182

bde1f02b-63a6-4616-b0f8-b34f594405ec
00:19:34.985 --> 00:19:36.647
warning and you want to silence it,

NOTE Confidence: 0.695203041818182

759b27a4-82d3-4d4f-9b91-cc5714355d07
00:19:36.650 --> 00:19:38.274
you can just cast the thing to void.

NOTE Confidence: 0.695203041818182

b46785c9-4895-4399-bf6a-2042148e6434
00:19:38.280 --> 00:19:39.660
This will tell the compiler,

NOTE Confidence: 0.695203041818182

dca0c1c5-e5c0-4028-97f7-8dbfbd0c55c1
00:19:39.660 --> 00:19:41.522
hey, I really did mean to call

NOTE Confidence: 0.695203041818182

7b11fc0a-f466-4cca-9687-ebfad7be2c08
00:19:41.522 --> 00:19:43.241
this thing and then just ignore

NOTE Confidence: 0.695203041818182

697dcd62-b0e3-4757-9c38-c8e07fe053e9
00:19:43.241 --> 00:19:44.884
what it does most of the time.

NOTE Confidence: 0.695203041818182

3dbc7f91-c1b1-41ca-9a52-62e3615f7c8f
00:19:44.884 --> 00:19:46.052
In fact, almost all the time.

NOTE Confidence: 0.695203041818182

39610aa4-16f6-48b8-af8d-f9740495e84e
00:19:46.052 --> 00:19:47.017
This should not be necessary.

NOTE Confidence: 0.695203041818182

b3ae0b2d-d369-440e-a3c1-f9688b22674d
00:19:47.020 --> 00:19:48.892
But if you ever see a notice card

NOTE Confidence: 0.695203041818182

a9cdb519-9490-4175-a162-74534246558d
00:19:48.892 --> 00:19:50.380
warning that is validly marked

NOTE Confidence: 0.695203041818182

6e10bcbd-a917-4473-98d0-546ecfa996be
00:19:50.380 --> 00:19:52.420
and yet your usage is valid,

NOTE Confidence: 0.695203041818182

4c6122d2-9687-4920-b5e8-5f0b57dc40c6
00:19:52.420 --> 00:19:53.276
but avoid cast there.

NOTE Confidence: 0.695203041818182

2b3c9e73-35df-49e4-bc1a-9b87adf011f2
00:19:53.276 --> 00:19:54.820
And if you don't like parent void,

NOTE Confidence: 0.695203041818182

1a133c6f-f2e2-4767-888c-a1f610a36f6c
00:19:54.820 --> 00:19:55.824
you can also do.

NOTE Confidence: 0.695203041818182

21289b45-12af-4c9c-aaca-166471029615
00:19:55.824 --> 00:19:57.660
Static cast if you really like this.

NOTE Confidence: 0.86903435

8d34dcac-126a-404c-aaaf-075f3d43e77e
00:20:00.060 --> 00:20:04.456
Yes, most of the time this happens

NOTE Confidence: 0.86903435

722b0e26-88d0-47cf-a7d5-1510d081e2cb
00:20:04.460 --> 00:20:06.698
in a compiler and library test,

NOTE Confidence: 0.86903435

fb832a82-23fd-4200-9d44-360001b72ba5
00:20:06.700 --> 00:20:08.450
because we're very interested in

NOTE Confidence: 0.86903435

fc65561f-202d-4287-bb0a-329c03090814
00:20:08.450 --> 00:20:10.200
writing expressions that we verify,

NOTE Confidence: 0.86903435

39b3d9b7-73b4-4e3d-b59b-ef492a8da1df
00:20:10.200 --> 00:20:12.138
compile, or don't crash the compiler,

NOTE Confidence: 0.86903435

c97eceb0-afb1-466d-ba85-8b1e4ab0dd00
00:20:12.140 --> 00:20:12.904
but we're not actually

NOTE Confidence: 0.86903435

20544b85-1fa3-40fc-ab55-3833c8a2af7a
00:20:12.904 --> 00:20:13.859
interested in what they do,

NOTE Confidence: 0.86903435

89f6355e-ae8c-47be-8228-01796b3f76ba
00:20:13.860 --> 00:20:15.417
so we just dropped the value on the floor.

NOTE Confidence: 0.86903435

c6214a90-bcd9-4591-84ea-9f6d99defceb
00:20:15.420 --> 00:20:17.380
So most of the time it's the actual

NOTE Confidence: 0.86903435

9c35d9dc-6591-460e-a125-abdf543c01cb
00:20:17.380 --> 00:20:18.287
library implementers that have

NOTE Confidence: 0.86903435

490f525b-5280-4ebd-bbc3-da433654b207
00:20:18.287 --> 00:20:19.759
to go add a bunch of void casts,

NOTE Confidence: 0.86903435

3b7f6ed3-6895-47b7-b900-07b9562b0c9a
00:20:19.760 --> 00:20:21.182
and we have had to do this in a

NOTE Confidence: 0.86903435

a4e91951-bfcf-43cb-bfef-34e382236d40
00:20:21.182 --> 00:20:23.176
bunch of places, but in user code,

NOTE Confidence: 0.86903435

cda138f5-bd66-45de-8a45-df086ac3525a
00:20:23.176 --> 00:20:25.700
unless you have similar sort of tests,

NOTE Confidence: 0.86903435

a68caa84-a17d-443f-95f4-58db64713b6d
00:20:25.700 --> 00:20:28.418
this should almost never be necessary.

NOTE Confidence: 0.86903435

2ce98e2d-a9d6-4ee3-b2b5-1a54e176eb6a
00:20:28.420 --> 00:20:29.692
OK, so I mentioned.

NOTE Confidence: 0.86903435

63c4a263-6043-4936-b5fa-ff0aa0c80ad1
00:20:29.692 --> 00:20:31.600
Observer is the most common reason,

NOTE Confidence: 0.86903435

d0a86a61-2fb5-4919-9376-255ade786ae2
00:20:31.600 --> 00:20:33.104
but there are other reasons that you would

NOTE Confidence: 0.86903435

8e618992-bbad-44cd-86cf-9c087d4ca51a
00:20:33.104 --> 00:20:34.609
want to mark something as no discard.

NOTE Confidence: 0.86903435

d6077fe8-be38-4479-9d72-122164aa2f46
00:20:34.610 --> 00:20:37.450
So off the top of my head there are

NOTE Confidence: 0.86903435

d42769ae-e4c5-494b-a4aa-974394c061e9
00:20:37.450 --> 00:20:39.350
functions that are easily confused.

NOTE Confidence: 0.86903435

9e98d464-e295-4067-9b66-73799c8537e7
00:20:39.350 --> 00:20:42.704
So vector empty is the classic

NOTE Confidence: 0.86903435

802baf4f-ac71-4c58-b5b0-38e220f12fe1
00:20:42.704 --> 00:20:46.019
one where if you want to.

NOTE Confidence: 0.86903435

bf896920-ccc6-41b3-a7a5-45ff05c8fc79
00:20:46.020 --> 00:20:47.712
If you want to get rid of all of,

NOTE Confidence: 0.86903435

dbbbbd49-2bb5-4298-a081-855e529da0bf
00:20:47.720 --> 00:20:49.015
I'm trying to avoid the words here.

NOTE Confidence: 0.86903435

8552c02f-81f3-40d9-8b72-f78590a18aab
00:20:49.020 --> 00:20:50.483
If you want to get rid of

NOTE Confidence: 0.86903435

00f997ff-2524-45d2-b5cf-646a690790a2
00:20:50.483 --> 00:20:51.759
all the elements in a vector,

NOTE Confidence: 0.86903435

998a7d97-800c-45a7-9655-bc30c388d424
00:20:51.760 --> 00:20:53.818
you might say V dot empty,

NOTE Confidence: 0.86903435

127a5de1-26bf-41ed-828f-bbe8741b08f9
00:20:53.820 --> 00:20:55.638
because empty sounds like a verb.

NOTE Confidence: 0.86903435

424ef3bb-8c18-4f5a-a296-b0c43163bb16
00:20:55.640 --> 00:20:56.600
Unfortunately for the SDL,

NOTE Confidence: 0.86903435

dd50077f-90ef-45aa-a3d4-fb0d9775703e
00:20:56.600 --> 00:20:58.750
empty is an adjective and it returns a pool,

NOTE Confidence: 0.86903435

d35c9575-b7f7-47e0-b183-d1479e720513
00:20:58.750 --> 00:20:59.680
so if you call empty and

NOTE Confidence: 0.86903435

8120b205-d419-41e6-94a4-0204a3b9a39b
00:20:59.680 --> 00:21:00.740
you drop it on the floor,

NOTE Confidence: 0.86903435

d916140c-b16d-4c3e-a9cc-724ca7ba60a0
00:21:00.740 --> 00:21:02.170
you've done nothing rather than

NOTE Confidence: 0.86903435

135a7113-0273-4cce-8fe1-db6fb9c93aa7
00:21:02.170 --> 00:21:03.600
wiping out all your elements.

NOTE Confidence: 0.86903435

765ca334-e373-4559-b17b-95f3ab9d63a6
00:21:03.600 --> 00:21:06.534
What you meant to say was V dot clear,

NOTE Confidence: 0.86903435

a40853d1-abc5-400c-aa09-a1c2d90ac52d
00:21:06.540 --> 00:21:08.964
so this confusion is so notorious

NOTE Confidence: 0.86903435

f6675311-bc72-47c2-9136-fe0102f9d4fb
00:21:08.964 --> 00:21:11.030
that the standard itself has

NOTE Confidence: 0.86903435

557b4d22-20db-4f6f-b958-f73c2cafee24
00:21:11.030 --> 00:21:13.298
marked vector empty as no discard.

NOTE Confidence: 0.86903435

ca535362-deb0-4fa5-9f74-e52409673d4a
00:21:13.300 --> 00:21:14.794
I can actually bring that up

NOTE Confidence: 0.86903435

6929f5ec-f484-4d19-91ac-1aa44da16711
00:21:14.794 --> 00:21:15.790
if people are interested.

NOTE Confidence: 0.86903435

fa270f8a-fed7-4ce3-a14a-cf9245587898
00:21:15.790 --> 00:21:16.774
Um, now, for us,

NOTE Confidence: 0.86903435

7651a65c-6d90-447f-bf46-be9895570893
00:21:16.774 --> 00:21:18.250
that doesn't actually make a difference,

NOTE Confidence: 0.86903435

bcdd882d-e2e9-4bb7-9ad9-072eb179e0b7
00:21:18.250 --> 00:21:18.962
because, um,

NOTE Confidence: 0.86903435

2179291e-e8a5-4b1a-a758-6a6135d59fab
00:21:18.962 --> 00:21:20.742
vector empty also falls under

NOTE Confidence: 0.86903435

dbc30f37-b133-4c95-bb35-3bca357a3671
00:21:20.742 --> 00:21:22.470
the pure observer criterion,

NOTE Confidence: 0.86903435

1917afe6-e4d9-4d37-9fb8-b95ac8d78602
00:21:22.470 --> 00:21:24.846
so we would mark it for that reason alone.

NOTE Confidence: 0.86903435

e439e633-d404-4950-8f4f-8729d5a9b257
00:21:24.850 --> 00:21:26.730
But even if you didn't have, you know,

NOTE Confidence: 0.86903435

21f1a716-919a-4a49-b3c7-bc10cde93e35
00:21:26.730 --> 00:21:28.590
the willingness to go Mark 3005

NOTE Confidence: 0.86903435

c441cd43-d9b2-4823-9732-76e4bddd0254
00:21:28.590 --> 00:21:30.944
thousand functions in your STL is no discard.

NOTE Confidence: 0.86903435

1280022f-c7b2-4dbb-a25a-ac32fbeab0db
00:21:30.950 --> 00:21:33.142
The commonly confused case

NOTE Confidence: 0.86903435

e80d72bc-c052-4573-a14c-7f35ab640710
00:21:33.142 --> 00:21:34.786
is a justification.

NOTE Confidence: 0.86903435

8cdf34b0-4bfe-4955-bc85-025360c2b34d
00:21:34.790 --> 00:21:35.952
Let me actually just bring this up

NOTE Confidence: 0.86903435

2f36cf08-9304-4f58-926d-ced19e0cc514
00:21:35.952 --> 00:21:37.367
so we can see what it looks like.

NOTE Confidence: 0.86903435

dc35004b-305a-49cd-b052-6b4061b2e2f3
00:21:37.370 --> 00:21:38.582
Here's vector.

NOTE Confidence: 0.86903435

7505e47e-4bf7-497f-a84a-645c9183bd8a
00:21:38.582 --> 00:21:41.006
Here's the class definition.

NOTE Confidence: 0.86903435

b92dff4e-c9a1-4503-ad97-f5c97afd827f
00:21:41.010 --> 00:21:44.060
I Scroll down a bit.

NOTE Confidence: 0.86903435

36f615d1-dea8-4303-bac9-06861122668b
00:21:44.060 --> 00:21:47.040
And I've scrolled too far.

NOTE Confidence: 0.86903435

ca9cd398-b72b-47b2-afd9-af82788a03a6
00:21:47.040 --> 00:21:48.072
Here we go.

NOTE Confidence: 0.86903435

78db0677-1695-434f-b5b2-392c52307072
00:21:48.072 --> 00:21:49.792
Empty in the standard is

NOTE Confidence: 0.86903435

ac240a0b-ccf8-4dba-a1b3-1b1941ab436d
00:21:49.792 --> 00:21:51.340
depicted as no discard,

NOTE Confidence: 0.86903435

71567aeb-51bf-455f-b18e-c0ca7fa56842
00:21:51.340 --> 00:21:53.088
a nonbinding suggestion to

NOTE Confidence: 0.86903435

82b3cf2f-71de-4b76-8970-1e1cd15870e8
00:21:53.088 --> 00:21:55.273
implementers that they actually market.

NOTE Confidence: 0.86903435

262bdd77-6e5e-491a-bf1e-e73f2b790410
00:21:55.280 --> 00:21:57.320
So pure observers commonly confuse functions.

NOTE Confidence: 0.86903435

be359bcb-3579-44e9-9601-9faa043ac13a
00:21:57.320 --> 00:21:59.740
Other ones are cases where

NOTE Confidence: 0.86903435

aeb89a74-e2bd-41a3-9937-49e63f519845
00:21:59.740 --> 00:22:02.644
dropping the return value on the

NOTE Confidence: 0.86903435

f785770b-1353-4128-b11f-36ff6b4aa19a
00:22:02.644 --> 00:22:05.500
floor is likely to be incorrect,

NOTE Confidence: 0.86903435

f3f740cb-6811-4f48-b316-8bd112e1dea3
00:22:05.500 --> 00:22:07.636
or a memory leak, or a resource leak.

NOTE Confidence: 0.86903435

44a28edb-befb-4aa2-86cc-55c52412411c
00:22:07.640 --> 00:22:11.080
So allocate raw allocation functions.

NOTE Confidence: 0.86903435

02ba840e-af49-4255-8f18-8f94490fcdbf
00:22:11.080 --> 00:22:12.874
Those should totally be marked as

NOTE Confidence: 0.86903435

a61761d8-6de9-4f44-ba81-a62bcddca25b
00:22:12.874 --> 00:22:15.037
notice card because you either need to

NOTE Confidence: 0.86903435

a2ff6ee9-941b-4796-8715-67433ab871bb
00:22:15.037 --> 00:22:17.165
store them in a resource management object.

NOTE Confidence: 0.86903435

f09ca324-447e-4880-8768-8ee235bd1b77
00:22:17.170 --> 00:22:18.898
Like a unique Porter or something.

NOTE Confidence: 0.86903435

e50751ad-fb77-4b06-9da8-821689a88916
00:22:18.900 --> 00:22:20.910
Or you need to manually ensure

NOTE Confidence: 0.86903435

f0f20650-8723-40ef-9ed8-17a5009499d4
00:22:20.910 --> 00:22:22.220
that you deallocate, free,

NOTE Confidence: 0.86903435

7484828d-86f1-4b9e-bae9-5b65589e582b
00:22:22.220 --> 00:22:23.420
release, whatever the thing,

NOTE Confidence: 0.86903435

c7142b7c-68b5-4207-a9e3-1d8a0716187a
00:22:23.420 --> 00:22:26.080
and that you don't leak during exceptions.

NOTE Confidence: 0.86903435

af9fdcc9-0bb8-4202-8074-46d60ba37e07
00:22:26.080 --> 00:22:28.876
So at raw resource allocation functions,

NOTE Confidence: 0.86903435

83d2df07-fd62-40b2-9eea-f2a2a5c9613c
00:22:28.880 --> 00:22:30.338
those should be marked notice card.

NOTE Confidence: 0.86903435

0684ea54-a533-4c25-ad70-71d9506947c1
00:22:30.340 --> 00:22:33.476
And another more obscure case is where

NOTE Confidence: 0.86903435

338f9cbf-a066-4da8-a0af-472257ffb0ba
00:22:33.476 --> 00:22:36.378
you're not going to link resources,

NOTE Confidence: 0.86903435

cf2caaeb-28ab-4485-9a53-ef0205ef59f0
00:22:36.380 --> 00:22:38.420
but if you discard the results,

NOTE Confidence: 0.86903435

aae33ef8-f745-405a-a531-712a1e63a9db
00:22:38.420 --> 00:22:40.082
you're going to skip some important

NOTE Confidence: 0.86903435

a1a87c30-7844-471b-b983-963f4d5706f6
00:22:40.082 --> 00:22:41.543
second follow-up step that would

NOTE Confidence: 0.86903435

3b1580ea-3dd6-435b-9251-b219f411e8ca
00:22:41.543 --> 00:22:42.759
make your program incorrect.

NOTE Confidence: 0.86903435

471f02a9-653f-48d9-a682-6c51a225f67a
00:22:42.760 --> 00:22:45.292
So that example there is like

NOTE Confidence: 0.86903435

889439f9-bd4e-4018-9dd6-cad58dfa8822
00:22:45.292 --> 00:22:46.980
stood remove and stood

NOTE Confidence: 0.813155488181818

cff0ae0b-1b34-4be4-bf8a-7277c3dcac5b
00:22:47.062 --> 00:22:49.118
unique. Where those are

NOTE Confidence: 0.813155488181818

78c8ee13-21b1-4156-a217-6eff519f27c9
00:22:49.118 --> 00:22:50.606
so notoriously confusing,

NOTE Confidence: 0.813155488181818

e970535b-b700-4e32-89fb-6a2b7c7af221
00:22:50.610 --> 00:22:53.842
they had to be an item in Scott

NOTE Confidence: 0.813155488181818

22b0512f-62cf-4496-b86d-54ffa1828f0d
00:22:53.842 --> 00:22:55.580
Meyers effective C++ books.

NOTE Confidence: 0.813155488181818

3c9266ea-91d4-47f9-ac8b-273e42b0e076
00:22:55.580 --> 00:22:57.244
There the algorithm, um,

NOTE Confidence: 0.813155488181818

5d1a2dff-e7a6-43e4-ad7d-0465271542e1
00:22:57.244 --> 00:22:59.324
sort of compacts the good

NOTE Confidence: 0.813155488181818

0030e0ed-8370-4074-9479-7369fb3fa679
00:22:59.324 --> 00:23:01.472
elements that you want to retain

NOTE Confidence: 0.813155488181818

604e5a2d-8731-45b8-862f-afb28c7e5a84
00:23:01.472 --> 00:23:03.630
at the beginning of the range,

NOTE Confidence: 0.813155488181818

ea2cf79f-24f7-4139-ab8c-05edea7b3892
00:23:03.630 --> 00:23:05.215
leaves the remaining elements in

NOTE Confidence: 0.813155488181818

0e1a8b07-2eb6-48f0-a89b-d3cb94a27065
00:23:05.215 --> 00:23:06.483
some garbage unspecified state,

NOTE Confidence: 0.813155488181818

542372ce-83ec-45ad-b5b1-06b844ca0388
00:23:06.490 --> 00:23:08.450
and then you need to follow that up

NOTE Confidence: 0.813155488181818

29c9e9d2-9c39-41d1-abd0-ebe97fec5cf6
00:23:08.450 --> 00:23:10.898
with a call to container erase to

NOTE Confidence: 0.813155488181818

3e82e5b3-f397-432e-9698-89d8a5050d8e
00:23:10.898 --> 00:23:12.793
actually physically make the container

NOTE Confidence: 0.813155488181818

3834ae97-4f9b-4325-9541-ee795b3e10b4
00:23:12.859 --> 00:23:15.427
smaller and get rid of the garbage elements.

NOTE Confidence: 0.813155488181818

301a9c2b-0320-4be8-80c3-28875deef89d
00:23:15.430 --> 00:23:16.922
So if you say,

NOTE Confidence: 0.813155488181818

885a08e4-86af-4384-b9d6-a457457a8574
00:23:16.922 --> 00:23:18.787
stood remove or stood unique,

NOTE Confidence: 0.813155488181818

e4f7e1ec-17ee-441e-9b14-56a745fb91b9
00:23:18.790 --> 00:23:20.456
and then you drop the return value

NOTE Confidence: 0.813155488181818

1afd9feb-1d42-4b62-b07d-bf724020089f
00:23:20.456 --> 00:23:21.994
on the floor, you have a bug,

NOTE Confidence: 0.813155488181818

673ae469-a22b-4b8f-90db-f15ad8b97e8f
00:23:21.994 --> 00:23:23.646
even though it's not a pure observer

NOTE Confidence: 0.813155488181818

25e0ddd2-bc0a-4aed-bbb3-87902f3b5451
00:23:23.646 --> 00:23:25.446
because it's really modifying stuff,

NOTE Confidence: 0.813155488181818

d93e1dd9-6957-409d-b0cf-4ef4fa08a0ed
00:23:25.450 --> 00:23:26.550
it's not.

NOTE Confidence: 0.813155488181818

643dcc98-4e7d-4586-8694-e5ea329661aa
00:23:26.550 --> 00:23:28.200
Allocating memory, um,

NOTE Confidence: 0.813155488181818

d58ca1df-a1f9-4b68-9ed5-1bb3d9ee73a1
00:23:28.200 --> 00:23:29.790
it is skipping that second step

NOTE Confidence: 0.813155488181818

5a78d6f3-aadf-46fc-8ba2-403c84a05265
00:23:29.790 --> 00:23:31.780
that you need for correct program.

NOTE Confidence: 0.813155488181818

e73ecb67-3ebd-4669-bbcf-c42809c7e3a1
00:23:31.780 --> 00:23:34.356
So that's a case for notice card.

NOTE Confidence: 0.813155488181818

a5c98418-0f5e-417e-8568-59b1e86175b6
00:23:34.360 --> 00:23:36.888
So notice card with a reason is a

NOTE Confidence: 0.813155488181818

6af80344-635b-4061-8eb4-14ed72e08279
00:23:36.888 --> 00:23:39.524
way for the STL to communicate to

NOTE Confidence: 0.813155488181818

31d5ac89-d3e4-42d3-8efd-961199c19b18
00:23:39.524 --> 00:23:42.378
users why you would want to do this.

NOTE Confidence: 0.813155488181818

50ad2d66-19d1-4991-9ee5-14aaba134e57
00:23:42.380 --> 00:23:44.246
So that's what these issues we're

NOTE Confidence: 0.813155488181818

e2bb27e7-db59-47cb-bc69-019eea33ca57
00:23:44.246 --> 00:23:45.828
talking about and that's what

NOTE Confidence: 0.813155488181818

d64e442e-6d1c-40b8-9625-5a9d9e697897
00:23:45.828 --> 00:23:47.526
Alex Guteneck has gone and done.

NOTE Confidence: 0.813155488181818

b5cbf748-83e6-4cc9-ab11-ca4ebe55d745
00:23:47.530 --> 00:23:48.978
So this has been open for a while.

NOTE Confidence: 0.813155488181818

24f5afe5-6154-401a-8f53-fa6eba2b8d7c
00:23:48.980 --> 00:23:51.269
We're now finally getting to review it.

NOTE Confidence: 0.813155488181818

c2cd915d-580c-49b1-a1b0-aa8deac2da5e
00:23:51.270 --> 00:23:52.942
Apologies for the delay.

NOTE Confidence: 0.813155488181818

16d735f9-17b4-43ed-a5e7-4b3c3aac1345
00:23:52.942 --> 00:23:56.229
Let's actually take a look at the code.

NOTE Confidence: 0.813155488181818

23b16464-a3ed-4f8d-9d68-9190c868fd57
00:23:56.230 --> 00:23:56.595
OK,

NOTE Confidence: 0.813155488181818

083a0e56-2d68-4ee3-83c3-105009a6f897
00:23:56.595 --> 00:23:59.515
So what Alex is doing here is taking

NOTE Confidence: 0.813155488181818

fb320471-7bb3-4e54-8361-49f400d0b0bf
00:23:59.515 --> 00:24:01.990
that macro which we mentioned,

NOTE Confidence: 0.813155488181818

3be9411a-4604-4dd8-ada8-c3e2ae731afc
00:24:01.990 --> 00:24:03.118
under score notice card,

NOTE Confidence: 0.813155488181818

d01486e0-43cb-484c-933c-aaf3ee69d719
00:24:03.118 --> 00:24:05.070
which is for the STL's internal use,

NOTE Confidence: 0.813155488181818

97ff3040-adec-4aea-ac7b-6e642bfb317f
00:24:05.070 --> 00:24:07.458
and replacing selected occurrences

NOTE Confidence: 0.813155488181818

7fcb55d6-d80c-4d07-a1b0-01f3e1d0852b
00:24:07.458 --> 00:24:09.249
with other macros.

NOTE Confidence: 0.813155488181818

4c322350-855b-4947-ae6d-233f7c3ca67d
00:24:09.250 --> 00:24:11.680
Because oftentimes the message that

NOTE Confidence: 0.813155488181818

2aa92c29-8717-472c-bb0d-da508cfee721
00:24:11.680 --> 00:24:14.410
we want to give is repeated in a

NOTE Confidence: 0.813155488181818

9347187a-f68e-4482-9b9c-fc9e59c1da73
00:24:14.410 --> 00:24:15.385
whole bunch of different places,

NOTE Confidence: 0.813155488181818

79a23912-3238-48d8-9bb9-c5d69f705da7
00:24:15.390 --> 00:24:16.746
like we got stood, remove stood,

NOTE Confidence: 0.813155488181818

03990bd6-1098-412b-8a9d-04f0d7c916cb
00:24:16.750 --> 00:24:18.930
remove if ranges, remove ranges,

NOTE Confidence: 0.813155488181818

6b175fc9-ddba-4437-b011-37dadbe34ed5
00:24:18.930 --> 00:24:21.604
remove if they all have the same

NOTE Confidence: 0.813155488181818

367c86d1-0d82-4b27-bbb9-8184d9d2eadb
00:24:21.604 --> 00:24:23.262
rationale so we can just use the

NOTE Confidence: 0.813155488181818

1fa40ada-b6b2-4a3c-8c40-bd12e4b1e24f
00:24:23.262 --> 00:24:24.923
same message for all of them and

NOTE Confidence: 0.813155488181818

a39f95c2-e5ee-437a-863e-9206f91b56cc
00:24:24.923 --> 00:24:26.188
centralizing that in a macro.

NOTE Confidence: 0.813155488181818

3a06660b-9bb8-41ea-9a2c-ff9386424c26
00:24:26.190 --> 00:24:26.862
Is reasonable.

NOTE Confidence: 0.813155488181818

f002358f-af3c-4eef-adfd-6290ea7c70bb
00:24:26.862 --> 00:24:28.878
In the future we might make

NOTE Confidence: 0.813155488181818

a8cd38ba-1c28-48fb-b4ef-a8f9cc734da0
00:24:28.878 --> 00:24:31.047
the message itself a macro and

NOTE Confidence: 0.813155488181818

bb2a6d9b-c3c8-404c-95e6-19a8b15f9d8f
00:24:31.047 --> 00:24:32.479
otherwise use an attribute.

NOTE Confidence: 0.813155488181818

5e039d48-4c76-4850-809f-17a2b8d23d0a
00:24:32.480 --> 00:24:34.167
The reason why we're using an attribute

NOTE Confidence: 0.813155488181818

0b685a70-4540-4b77-b66d-895cca92ea17
00:24:34.167 --> 00:24:35.686
for notice card is partially for

NOTE Confidence: 0.813155488181818

33ffae5b-1a73-4bea-8b05-dd01e3de0b8f
00:24:35.686 --> 00:24:37.186
historical reasons that we added it

NOTE Confidence: 0.813155488181818

26e1c575-62df-4f8f-9418-d79160d6f0ce
00:24:37.186 --> 00:24:38.840
when not all compilers supported it,

NOTE Confidence: 0.813155488181818

2f32f796-eeb5-4452-a057-b9ec969e424d
00:24:38.840 --> 00:24:40.919
that we may be able to change that now,

NOTE Confidence: 0.813155488181818

01a3f0da-89c8-4324-b76b-892af5090bcd
00:24:40.920 --> 00:24:42.690
especially since we like no discard

NOTE Confidence: 0.813155488181818

5a8500c1-337e-4233-a609-7cd26b452d7c
00:24:42.690 --> 00:24:45.088
so much and we have not had cases

NOTE Confidence: 0.813155488181818

30cd6b1b-2cbd-489e-b445-cd64da6f62c5
00:24:45.088 --> 00:24:46.533
where users have had needed

NOTE Confidence: 0.813155488181818

67b2eb10-2098-41e4-ba12-510e08eeae26
00:24:46.533 --> 00:24:48.417
to activate the escape hatch.

NOTE Confidence: 0.813155488181818

5f5f05db-dfbd-4341-9e21-510958ace985
00:24:48.420 --> 00:24:49.500
But for the time being,

NOTE Confidence: 0.813155488181818

1d4c522f-6dfb-4d9a-af44-b24f092cba45
00:24:49.500 --> 00:24:50.680
putting the whole attribute

NOTE Confidence: 0.813155488181818

53a6d022-f4f5-49c6-8f2e-8763ee483908
00:24:50.680 --> 00:24:52.700
in a macro is what we do.

NOTE Confidence: 0.813155488181818

112e03c0-10be-4514-84de-1af8bca3bdbf
00:24:52.700 --> 00:24:55.139
So first I'd like to look at the macros,

NOTE Confidence: 0.813155488181818

d387d77a-cb56-43b4-a42b-f3c231e63c6f
00:24:55.140 --> 00:24:56.139
make sure that.

NOTE Confidence: 0.813155488181818

ee2f1f91-30d3-475a-8b3e-2c06e8f1ebf6
00:24:56.139 --> 00:24:58.137
Um, all of them make sense.

NOTE Confidence: 0.813155488181818

eb4bd868-fc64-416a-8a89-3507e092e11d
00:24:58.140 --> 00:24:58.592
I'm gonna.

NOTE Confidence: 0.813155488181818

35b18dc6-0a22-4883-8952-ad1b4a815932
00:24:58.592 --> 00:24:59.948
I'm gonna skip reviewing the actual

NOTE Confidence: 0.813155488181818

dc7f1bb9-67d8-4d49-8b6d-d439f28451b3
00:24:59.948 --> 00:25:01.277
grammar of the messages for now.

NOTE Confidence: 0.813155488181818

95e2f421-4862-482f-b874-9a0a65c39169
00:25:01.280 --> 00:25:02.645
I'll come back and do that later,

NOTE Confidence: 0.813155488181818

abc4edf3-0542-41ba-b36d-9fa52f54aa1d
00:25:02.650 --> 00:25:04.638
and then we'll see if they're being

NOTE Confidence: 0.813155488181818

25055281-7855-4f7f-88b5-f3f9fa8e479f
00:25:04.638 --> 00:25:06.725
applied to all cases properly and

NOTE Confidence: 0.813155488181818

dca1da32-d2ad-408f-947a-4be7d215e9be
00:25:06.725 --> 00:25:08.285
if we're forgetting anything.

NOTE Confidence: 0.813155488181818

44dddc19-16dd-4f67-b22c-ca78bfeb9759
00:25:08.290 --> 00:25:09.946
And if I could make this highlight go away,

NOTE Confidence: 0.813155488181818

10c0bfdf-a649-43b8-9fc0-8d92360ec701
00:25:09.950 --> 00:25:10.758
that would be good.

NOTE Confidence: 0.813155488181818

03c4fdd0-4f11-4fea-a9c9-601de207b901
00:25:10.758 --> 00:25:10.960
OK,

NOTE Confidence: 0.813155488181818

c2b1ac7c-95b5-4b4e-b3d3-0c5087668816
00:25:10.960 --> 00:25:11.707
there we go.

NOTE Confidence: 0.813155488181818

fa1d8603-ec99-41d9-be40-9f8a0fb4ccaa
00:25:11.707 --> 00:25:13.201
So let's alt click and see

NOTE Confidence: 0.813155488181818

2723ecb9-447f-48df-8061-8e4b98cda697
00:25:13.201 --> 00:25:14.928
what files are being modified.

NOTE Confidence: 0.813155488181818

23251910-85fe-4aa5-bd50-d757bd17c1ec
00:25:14.930 --> 00:25:17.286
So although it looks like 257

NOTE Confidence: 0.813155488181818

0e3db7cf-3371-46d9-9795-1bde6ff0e8bc
00:25:17.286 --> 00:25:18.070
lines are being modified,

NOTE Confidence: 0.813155488181818

c1059d0a-5c4b-4b10-a4f4-a180dd606862
00:25:18.070 --> 00:25:19.590
it's really just a scattering.

NOTE Confidence: 0.813155488181818

636c7ad4-6ad6-4d19-b63c-cb05d987f6aa
00:25:19.590 --> 00:25:21.570
This PR is not as large as it seems,

NOTE Confidence: 0.813155488181818

af21feba-faf7-4867-85d8-f7834e569a54
00:25:21.570 --> 00:25:23.130
and most of the lines are

NOTE Confidence: 0.813155488181818

42d0e9ee-6006-4702-9be7-ae0a4b38d85b
00:25:23.130 --> 00:25:24.170
my vault score high

NOTE Confidence: 0.769430942857143

3d429a77-e19e-4ca1-a0a7-69fb042a7f03
00:25:24.170 --> 00:25:25.465
because it's adding a bunch of messages.

NOTE Confidence: 0.769430942857143

81b0dbae-c7c6-49af-b33c-94cb44d7c090
00:25:25.470 --> 00:25:27.380
So let's see what messages are being. Added.

NOTE Confidence: 0.730644451666667

fdafd15c-2266-4f89-a1ff-98fa1cc03368
00:25:29.510 --> 00:25:32.510
OK, so um, here we go.

NOTE Confidence: 0.730644451666667

a181a877-1124-4639-a719-df3350cf41da
00:25:32.510 --> 00:25:35.192
Live score HSTL central internal header

NOTE Confidence: 0.730644451666667

3171e926-996a-4f01-9a63-716a5c3b3f83
00:25:35.192 --> 00:25:37.436
I transition comment because currently

NOTE Confidence: 0.730644451666667

eb409f2e-e23c-472e-9e1e-f57439e0d948
00:25:37.436 --> 00:25:39.746
VC runtime is not open sourced.

NOTE Confidence: 0.730644451666667

f3b068e1-76b3-4659-adc3-2bbefdefe1d3
00:25:39.750 --> 00:25:44.150
This should go to VC runtime H greed.

NOTE Confidence: 0.730644451666667

7f3ac889-df81-4ae7-b4a2-8ed8139bbf40
00:25:44.150 --> 00:25:48.006
So right now Alex is following the pattern.

NOTE Confidence: 0.730644451666667

555ee649-3743-4a62-bac6-eca85902f47d
00:25:48.010 --> 00:25:50.096
Ohh I see this was this is

NOTE Confidence: 0.730644451666667

dec96f26-77c6-4c5f-8a81-456ae215e339
00:25:50.096 --> 00:25:51.440
essentially following the notice

NOTE Confidence: 0.730644451666667

4b30629a-7328-43e0-9f60-06efee901f77
00:25:51.440 --> 00:25:53.390
card ctor for constructors because

NOTE Confidence: 0.730644451666667

45718837-beb9-4989-9179-6c10bd651cbe
00:25:53.390 --> 00:25:54.950
that's a separate feature.

NOTE Confidence: 0.730644451666667

85bbaee0-979b-4baf-9d20-b29b0c7ff7f7
00:25:54.950 --> 00:25:56.370
So this looks right. OK,

NOTE Confidence: 0.730644451666667

81b7b485-e6db-484e-9c60-85d3c16c361b
00:25:56.370 --> 00:25:59.514
so transition this should go to vcruntime H.

NOTE Confidence: 0.730644451666667

9faae173-90fc-48dd-8f4d-db0979b83168
00:25:59.520 --> 00:26:01.620
If the compiler does not

NOTE Confidence: 0.730644451666667

79a217a5-1e39-49db-8941-20f556cdf8d1
00:26:01.620 --> 00:26:03.300
support has CPP attribute,

NOTE Confidence: 0.730644451666667

09ea810a-56c8-4ef4-a588-899f6fdb100e
00:26:03.300 --> 00:26:05.502
then no discard message of a

NOTE Confidence: 0.730644451666667

b8e32cb4-a4ab-4c33-afc4-a451ac6afeaa
00:26:05.502 --> 00:26:06.970
message expands to nothing.

NOTE Confidence: 0.730644451666667

7c11c70b-3e69-4603-8e40-22e26975103e
00:26:06.970 --> 00:26:09.988
Elif has CPP attribute notice guard

NOTE Confidence: 0.730644451666667

2c72572b-fead-446f-9481-9d48ba8dd4e9
00:26:09.988 --> 00:26:12.856
is greater equal 2019 seven Li.

NOTE Confidence: 0.730644451666667

a83450ab-915d-440f-b513-ec6e44463e86
00:26:12.856 --> 00:26:14.486
Believe this is the correct

NOTE Confidence: 0.730644451666667

739ec189-0aaf-4e4e-ba42-e837c891bbe5
00:26:14.486 --> 00:26:15.790
value but let's check.

NOTE Confidence: 0.730644451666667

702ceb4b-f41d-4bad-8bbf-eb65cb67d0ff
00:26:15.790 --> 00:26:18.422
So if we search for SD feature test

NOTE Confidence: 0.730644451666667

873ccca9-fe5f-4111-977a-a96f42ccc6e5
00:26:18.422 --> 00:26:21.079
this will bring up the standing

NOTE Confidence: 0.730644451666667

e58f49ed-6623-4646-abe9-633517560b63
00:26:21.079 --> 00:26:23.479
document showing feature test macros.

NOTE Confidence: 0.730644451666667

f1cdf84c-0e51-42d3-8b83-bd3be1910e1d
00:26:23.480 --> 00:26:25.442
We're going to look for the

NOTE Confidence: 0.730644451666667

016a2374-207d-48b9-a024-29afd42c2638
00:26:25.442 --> 00:26:26.750
CPP attribute node discard.

NOTE Confidence: 0.56429389125

121ad305-42e5-46aa-be05-4c8fc3352aac
00:26:28.930 --> 00:26:31.022
And let's find we.

NOTE Confidence: 0.56429389125

efb99526-96e9-4213-92da-b0f1ce96845c
00:26:31.022 --> 00:26:33.114
We're gonna skip that.

NOTE Confidence: 0.56429389125

fce1af76-01e0-496c-b79f-c468abdebe18
00:26:33.120 --> 00:26:37.210
Here we go. So OK.

NOTE Confidence: 0.56429389125

41fd1e79-78b9-4ae4-9915-82a1b9d275d5
00:26:37.210 --> 00:26:39.653
The same value of July 2019 is

NOTE Confidence: 0.56429389125

4e4f4585-9049-4a38-8ccd-1c97ac865ac9
00:26:39.653 --> 00:26:42.170
used for two different papers.

NOTE Confidence: 0.56429389125

8083743e-6508-4025-9474-3d1f06cbe3a4
00:26:42.170 --> 00:26:44.025
No discard should ever reason

NOTE Confidence: 0.56429389125

33c1ed42-d766-4a2e-b8e1-84f9767ee74b
00:26:44.025 --> 00:26:45.880
and notice card for constructors.

NOTE Confidence: 0.56429389125

5f1f1deb-9df4-4403-b54e-7da2f2123f17
00:26:45.880 --> 00:26:47.362
So even though these are different

NOTE Confidence: 0.56429389125

7e50a873-c93c-436d-9395-85e3fdf9bd1e
00:26:47.362 --> 00:26:48.350
things that we're testing,

NOTE Confidence: 0.56429389125

b59b5c76-c461-4c00-b56b-1f5ed42b56b9
00:26:48.350 --> 00:26:49.550
they have the same value.

NOTE Confidence: 0.56429389125

a87c5643-b3f0-4b18-8a5a-fb15fe279fa1
00:26:49.550 --> 00:26:52.178
So 201970 is the correct thing.

NOTE Confidence: 0.56429389125

db19eb20-7925-4029-a6ec-8afdd8d1651c
00:26:52.180 --> 00:26:54.126
I love to double check this because

NOTE Confidence: 0.56429389125

ebc24cdc-2419-427e-86ce-7b407c5cc8be
00:26:54.126 --> 00:26:55.670
copy paste errors with feature

NOTE Confidence: 0.56429389125

0ceb8e35-0994-44da-8c86-e96c8e8ab4ae
00:26:55.670 --> 00:26:57.315
test macros are quite possible.

NOTE Confidence: 0.56429389125

9c5c6df7-ce5c-4880-8fff-ac3cf5b0be82
00:26:57.320 --> 00:26:59.978
So exact same value, that's good.

NOTE Confidence: 0.56429389125

f434b638-e204-48c6-835f-59f63a4bbe4e
00:26:59.980 --> 00:27:01.648
So if we don't have it

NOTE Confidence: 0.56429389125

d6431b88-836c-4973-885c-db8cdd8793b7
00:27:01.648 --> 00:27:02.760
all expands to nothing.

NOTE Confidence: 0.56429389125

9ab0d54b-489b-4f49-a287-f997c0b6e849
00:27:02.760 --> 00:27:05.154
If or if we don't have the ability to

NOTE Confidence: 0.56429389125

25ee4ffc-ad3e-472e-8f99-a7203157c86b
00:27:05.154 --> 00:27:07.590
check CPU attributes expands to nothing.

NOTE Confidence: 0.56429389125

f59c531c-322a-451a-8647-ecf03a8123d9
00:27:07.590 --> 00:27:07.980
Otherwise,

NOTE Confidence: 0.56429389125

3c7df00e-49ba-4d04-829e-9537afc13f2c
00:27:07.980 --> 00:27:10.710
if the notice card attribute is greater

NOTE Confidence: 0.56429389125

e945e73c-3e38-44c1-9fab-46c3a642b1ab
00:27:10.710 --> 00:27:13.509
than or equal to notice card message,

NOTE Confidence: 0.56429389125

568e1980-eb12-4fcf-b2c0-11f694a23a31
00:27:13.510 --> 00:27:14.920
then it should expand to

NOTE Confidence: 0.56429389125

88e06e54-5a55-4abc-bd74-b68a3e699135
00:27:14.920 --> 00:27:16.330
notice card with the reason.

NOTE Confidence: 0.56429389125

af3798da-a830-42a8-aead-0c7baa9b1fb4
00:27:16.330 --> 00:27:18.868
Now there is a transition here

NOTE Confidence: 0.56429389125

9accf955-870b-4634-a190-6b5764288691
00:27:18.870 --> 00:27:21.222
that's blocking it for the CUDA

NOTE Confidence: 0.56429389125

cb0a7d51-3baa-47f8-84a9-bca932be9682
00:27:21.222 --> 00:27:23.256
compiler because CUDA 10-1 did

NOTE Confidence: 0.56429389125

fd80d038-7269-42dc-a2f7-e17058b3def8
00:27:23.256 --> 00:27:25.226
not support no discard message.

NOTE Confidence: 0.56429389125

197b4107-c7f1-4933-8904-8d9f387bd249
00:27:25.230 --> 00:27:27.710
What has changed fairly recently?

NOTE Confidence: 0.56429389125

4423c630-5687-4310-96bd-f404573f554e
00:27:27.710 --> 00:27:29.124
I'm not actually sure if it changed,

NOTE Confidence: 0.56429389125

45275a19-d09d-401a-bc5a-ea81740e5138
00:27:29.130 --> 00:27:30.846
I think it changed after Alex

NOTE Confidence: 0.56429389125

bcb85973-0bed-4e82-b1ad-0eabeb70fbb1
00:27:30.846 --> 00:27:33.998
created this PR, but I can check.

NOTE Confidence: 0.56429389125

2dbef418-c971-479f-bdae-50507df028ba
00:27:34.000 --> 00:27:36.184
Was I the fastest way is actually

NOTE Confidence: 0.56429389125

da5ba0cd-1e5e-4515-8ebf-d02639e48129
00:27:36.184 --> 00:27:38.233
in the change because I forget

NOTE Confidence: 0.56429389125

dd33327a-2489-4b0f-a29c-ef246868b7f6
00:27:38.233 --> 00:27:39.973
what file we we modified.

NOTE Confidence: 0.56429389125

533e7376-6756-4e37-b535-eca02daf9946
00:27:39.980 --> 00:27:43.148
We increased our CUDA requirement to 1160.

NOTE Confidence: 0.56429389125

0c0f9be7-a159-4211-b311-e15e4bd9c879
00:27:43.148 --> 00:27:45.900
That happened fairly recently.

NOTE Confidence: 0.56429389125

9e9a112a-6583-4841-8267-7af8c38f4c1d
00:27:45.900 --> 00:27:48.660
I think it was this PR.

NOTE Confidence: 0.56429389125

e7eeea7e-9202-41d9-8d0c-a58414d9b2a7
00:27:48.660 --> 00:27:51.200
Yes.

NOTE Confidence: 0.56429389125

1fd32813-b6b2-4fa7-bd16-89e38f2f4807
00:27:51.200 --> 00:27:52.595
Where we updated our CUDA

NOTE Confidence: 0.56429389125

7bd8a778-c1ba-4e17-8efe-1713d7039b59
00:27:52.595 --> 00:27:53.990
compiler to the first version

NOTE Confidence: 0.56429389125

3575d57c-b668-4ffe-a20a-860587245919
00:27:54.048 --> 00:27:56.022
that officially supported VS 2022,

NOTE Confidence: 0.56429389125

f625c7e4-f744-4f51-a4f1-6f3d61177521
00:27:56.022 --> 00:27:57.777
that also updated its front

NOTE Confidence: 0.56429389125

bd081292-96c8-4227-a997-59aea454747c
00:27:57.777 --> 00:28:00.099
end and it is now required.

NOTE Confidence: 0.56429389125

5506bc76-fc60-411a-9250-538837f546f8
00:28:00.100 --> 00:28:03.052
And that happened on June 15th of this year.

NOTE Confidence: 0.56429389125

37c74335-9971-456a-a029-352edfd44c7f
00:28:03.060 --> 00:28:05.587
So it did happen far after Alex

NOTE Confidence: 0.56429389125

138ad822-2cf2-4b01-b28c-719aac78dd9f
00:28:05.587 --> 00:28:06.940
originally created this PR.

NOTE Confidence: 0.56429389125

cae74adb-1356-465c-b847-0138b9aba78b
00:28:06.940 --> 00:28:11.432
So we should check if CUDA 11/6

NOTE Confidence: 0.56429389125

f15b022b-2736-4893-81f3-a7d7e09fa441
00:28:11.432 --> 00:28:13.560
supports no discard message.

NOTE Confidence: 0.56429389125

62a4e91a-a515-47c0-b69f-a1f3fb54cd18
00:28:13.560 --> 00:28:15.120
I would hope that it does,

NOTE Confidence: 0.56429389125

879d4e2a-0bf9-4518-9100-6c62aaeba862
00:28:15.120 --> 00:28:17.224
but it might not because this is a

NOTE Confidence: 0.56429389125

c963f812-9d6c-4251-b147-2d24694cdce1
00:28:17.224 --> 00:28:19.292
Co plus 20 feature and supporting

NOTE Confidence: 0.56429389125

f74511dc-fb64-474e-ad8b-b2a892266bd5
00:28:19.292 --> 00:28:21.137
it in lower standard modes.

NOTE Confidence: 0.56429389125

7a2addd8-6ef3-4ebd-bdb2-c357080fb897
00:28:21.140 --> 00:28:22.061
Umm, actually no.

NOTE Confidence: 0.56429389125

bcabf006-a67b-41b1-9402-badefe2e3344
00:28:22.061 --> 00:28:23.596
This should be controlled by

NOTE Confidence: 0.56429389125

ac75f939-2189-41df-84e5-6f51e8c8be20
00:28:23.596 --> 00:28:24.530
the standard mode.

NOTE Confidence: 0.56429389125

88d00e59-212a-49a2-b933-943408fe535c
00:28:24.530 --> 00:28:25.475
This gracefully downgrades

NOTE Confidence: 0.56429389125

c803ce5a-1f7b-4a2f-aa2f-dff842153363
00:28:25.475 --> 00:28:27.050
if you have no discard,

NOTE Confidence: 0.56429389125

fce9f8bd-7f97-4cfd-ab62-cc369d563e2c
00:28:27.050 --> 00:28:28.744
but you don't have no discard message.

NOTE Confidence: 0.56429389125

2d778659-7741-4d90-aa0e-242aa77add78
00:28:28.750 --> 00:28:30.510
Then Alex's machine reads downgrade.

NOTE Confidence: 0.56429389125

9fe7d636-051f-4d0a-904d-ecc80b4ccb35
00:28:30.510 --> 00:28:32.244
So really this we should not

NOTE Confidence: 0.56429389125

64d2f459-2d78-4dee-af46-35cafaddc895
00:28:32.244 --> 00:28:33.839
need to block who to CC.

NOTE Confidence: 0.56429389125

53834198-13ef-45cf-a7e3-e0552ab3a1c7
00:28:33.840 --> 00:28:38.754
If this works OK, auto comment um.

NOTE Confidence: 0.56429389125

16eb3ae5-f1f0-4be9-8806-1914188c86a3
00:28:38.760 --> 00:28:40.688
Uh, number blah um.

NOTE Confidence: 0.34445646

a986f876-3514-4067-ba8c-11659c3ec39e
00:28:43.160 --> 00:28:43.550
Ah.

NOTE Confidence: 0.692713156

991403d0-3cc1-46db-a6b4-3c708d3fc24a
00:28:45.840 --> 00:28:51.671
As 2791 updated to CUDA 11/6.

NOTE Confidence: 0.692713156

9f509d02-027a-42d8-875a-0e5c8bd28d86
00:28:51.671 --> 00:28:56.626
Is this um block still?

NOTE Confidence: 0.692713156

4f0302f1-b0d6-4b71-8f56-2522951daa3e
00:28:56.630 --> 00:28:58.107
Or do we still need to block?

NOTE Confidence: 0.740174491666667

06a99370-ad95-4e21-867d-71db7a6ebcce
00:29:03.620 --> 00:29:06.770
The less special casing the better.

NOTE Confidence: 0.740174491666667

face88ad-a5f3-479e-8855-d8feb91092eb
00:29:06.770 --> 00:29:09.410
OK, as 2791 updated code 11/6,

NOTE Confidence: 0.740174491666667

a1a2ef12-c9dc-4238-a8fb-761f9300954c
00:29:09.410 --> 00:29:12.458
do we still need to block CUDA here?

NOTE Confidence: 0.740174491666667

852eeda8-b4dc-4ddb-b185-9f09d117c789
00:29:12.460 --> 00:29:15.820
OK. And that is definitely on us.

NOTE Confidence: 0.740174491666667

56b40576-33e1-4efd-821c-f4bd02b5ac23
00:29:15.820 --> 00:29:17.782
For not getting around to reviewing

NOTE Confidence: 0.740174491666667

ea75b26a-69c3-47da-a0f5-541cb87f62dd
00:29:17.782 --> 00:29:19.482
this earlier we've been slowly

NOTE Confidence: 0.740174491666667

9e680a55-8320-4e21-b66e-aed604c75474
00:29:19.482 --> 00:29:21.480
getting through the the PR backlog.

NOTE Confidence: 0.740174491666667

410b7dd1-63df-4f0b-ae4f-7eee4b6aa21d
00:29:21.480 --> 00:29:22.551
OK reloading everything.

NOTE Confidence: 0.740174491666667

4cfe8f4f-1b20-4528-8539-5d1e04a05e30
00:29:22.551 --> 00:29:25.272
My heads transition this go to H we

NOTE Confidence: 0.740174491666667

2513b030-316b-41ec-bcb9-c8a78243a782
00:29:25.272 --> 00:29:26.702
don't have CP attribute detection

NOTE Confidence: 0.740174491666667

740c666f-d0bf-47c0-93ae-d76a2dff7fdc
00:29:26.702 --> 00:29:28.539
at all that expands nothing.

NOTE Confidence: 0.740174491666667

4b8873c0-519c-4e01-b37c-df10f285855f
00:29:28.540 --> 00:29:31.032
LF notice card is greater than or

NOTE Confidence: 0.740174491666667

73ca3576-1948-414b-8aa9-f019a5074824
00:29:31.032 --> 00:29:33.486
equal to the notice card message

NOTE Confidence: 0.740174491666667

056d7436-8e3f-455a-afe2-2b0bbdbf2331
00:29:33.486 --> 00:29:36.090
version and ask about the CUDA

NOTE Confidence: 0.740174491666667

b3cdd002-172a-4be9-add0-a3a35c422b2c
00:29:36.090 --> 00:29:38.320
block not to find CUDA C OK,

NOTE Confidence: 0.740174491666667

5b1f0170-de1b-4519-9abb-6cf0119673c3
00:29:38.320 --> 00:29:40.240
then expand to actually use it.

NOTE Confidence: 0.740174491666667

df982e71-631b-43dd-a7e5-1253a4763fca
00:29:40.240 --> 00:29:42.232
Otherwise if the notice cardio attribute

NOTE Confidence: 0.740174491666667

63f09460-16d3-4222-9b10-1a2922d6c8b0
00:29:42.232 --> 00:29:44.460
is at least the classic value.

NOTE Confidence: 0.740174491666667

565b72c4-8fbe-44df-aab7-085edef04c08
00:29:44.460 --> 00:29:45.950
I think this is right,

NOTE Confidence: 0.740174491666667

f6c3b6ef-ea91-4c88-80e3-bd368e201767
00:29:45.950 --> 00:29:47.582
but let's double check.

NOTE Confidence: 0.740174491666667

29ee9e93-d194-41a0-a6f9-53bd915fbc52
00:29:47.582 --> 00:29:51.590
Yes, 2016 three is the original value.

NOTE Confidence: 0.740174491666667

ff375376-28b9-4e7e-a098-a18c411adbe5
00:29:51.590 --> 00:29:55.326
Correct, greater equal then use it by itself,

NOTE Confidence: 0.740174491666667

54229646-b466-47cc-8e26-7f852d56b34f
00:29:55.330 --> 00:29:56.786
otherwise expand to nothing.

NOTE Confidence: 0.740174491666667

1189b12a-16f3-4b4f-868e-aa242fbe5a18
00:29:56.786 --> 00:29:59.340
And because the control regions here are

NOTE Confidence: 0.740174491666667

49ee3161-6ec3-4fff-845a-7b5f7193a3ea
00:29:59.340 --> 00:30:01.496
pretty tiny and it's not heavily nested,

NOTE Confidence: 0.740174491666667

b47b9f84-06d1-4e88-9513-7abe69816b16
00:30:01.500 --> 00:30:03.810
we don't demand comments here, OK?

NOTE Confidence: 0.804089076666667

3bf3eec2-a327-4ff4-ac97-de453f0d06b9
00:30:06.210 --> 00:30:10.124
So this is. Ah, OK,

NOTE Confidence: 0.804089076666667

7220e8b0-21f1-4862-b7d2-43ab466b0a14
00:30:10.124 --> 00:30:12.798
so that's notice card message and then.

NOTE Confidence: 0.804089076666667

c62dbb5d-907f-4d05-9f59-c69df3dff56c
00:30:12.800 --> 00:30:15.590
Alex is adding a variant attribute

NOTE Confidence: 0.804089076666667

e4569ab0-f991-4753-83f5-c5d9df64eeb1
00:30:15.590 --> 00:30:18.014
for no discard constructor message

NOTE Confidence: 0.804089076666667

103fc403-3927-4a0a-8a39-0d006d04e1af
00:30:18.014 --> 00:30:20.912
because sometimes we may want to

NOTE Confidence: 0.804089076666667

7a21af09-a501-4933-b6ab-c2c70d5a92b8
00:30:20.912 --> 00:30:23.080
mark constructor with a reason.

NOTE Confidence: 0.804089076666667

6ddde0bb-c3b7-4da7-84c4-791a0e186aad
00:30:23.080 --> 00:30:25.880
So if we don't have the attribute,

NOTE Confidence: 0.804089076666667

85c06022-6da5-44ed-8747-661113fdd77d
00:30:25.880 --> 00:30:27.480
if we can't look for attributes at all,

NOTE Confidence: 0.804089076666667

972d7937-201d-4d6c-acc8-d77d640c9be9
00:30:27.480 --> 00:30:30.028
expand to nothing. If we have both

NOTE Confidence: 0.804089076666667

7fb5b88b-b156-46f4-b1a9-85aad330d9ac
00:30:30.028 --> 00:30:31.939
the constructor and the reason,

NOTE Confidence: 0.804089076666667

d42b8585-3037-4955-8317-270f4a332268
00:30:31.940 --> 00:30:34.131
then notice card seydor expands to the

NOTE Confidence: 0.804089076666667

b3a04128-aae9-430b-be1d-7bdb0f8de67a
00:30:34.131 --> 00:30:36.853
one without a reason notice card seed or

NOTE Confidence: 0.804089076666667

a4aaaf38-b15f-4af0-bc84-a36f0fbb40a7
00:30:36.853 --> 00:30:39.120
message expands to notice card message.

NOTE Confidence: 0.804089076666667

0127d15d-f18f-4478-90b5-c7d2a558548b
00:30:39.120 --> 00:30:39.556
Otherwise.

NOTE Confidence: 0.804089076666667

2ca769d0-cd1f-4634-a2ea-d107194b8d0b
00:30:39.556 --> 00:30:43.044
This is the case where it is not

NOTE Confidence: 0.804089076666667

62f36e74-1962-44b0-a0ec-d67a9bec7019
00:30:43.044 --> 00:30:45.428
sufficiently new for the constructor,

NOTE Confidence: 0.804089076666667

5cadb54e-3188-477b-a74c-8bd3f9981670
00:30:45.430 --> 00:30:46.599
so we have no possible fall back.

NOTE Confidence: 0.804089076666667

8fe72674-1df2-41fc-a55e-7c6a0c1f0465
00:30:46.600 --> 00:30:48.560
They expand to nothing.

NOTE Confidence: 0.804089076666667

ffda239c-cd10-4b18-b530-8b39252403b1
00:30:48.560 --> 00:30:50.478
Agreed, and two lines are controlled here.

NOTE Confidence: 0.804089076666667

b6bddbdd-d600-4242-b8aa-f158d9e0ee41
00:30:50.480 --> 00:30:53.675
This is still OK to not have a comment.

NOTE Confidence: 0.804089076666667

c325c268-79c6-49f2-9041-f59474a8bf98
00:30:53.680 --> 00:30:55.730
And here we do not,

NOTE Confidence: 0.804089076666667

4cf4ea27-9163-4533-9bb3-7a4fd9009439
00:30:55.730 --> 00:30:57.080
we can't unify the macros because

NOTE Confidence: 0.804089076666667

90c94785-dc15-4802-aaf5-5f43ddc0ada8
00:30:57.080 --> 00:30:58.970
if we just use notice card message,

NOTE Confidence: 0.804089076666667

0ad44318-7751-4827-a99e-7eab6648b003
00:30:58.970 --> 00:31:00.320
it would degrade to double

NOTE Confidence: 0.804089076666667

04e79fc0-9443-4c92-98fe-c466be03b1e9
00:31:00.320 --> 00:31:01.130
bracket notice card.

NOTE Confidence: 0.804089076666667

c2a3de55-c20a-4f13-85ee-46ba4ff48c1f
00:31:01.130 --> 00:31:03.524
But that cannot appear in such old

NOTE Confidence: 0.804089076666667

baa6d3b0-8570-4dde-88ea-2e9426d72ee3
00:31:03.524 --> 00:31:06.588
modes or old compilers on a constructor.

NOTE Confidence: 0.804089076666667

34e302b5-8e95-4366-af01-baa3ee9240b0
00:31:06.590 --> 00:31:08.450
So this macro is necessary

NOTE Confidence: 0.804089076666667

2e87a287-1675-4838-8d67-c6a150f25dd4
00:31:08.450 --> 00:31:10.310
assuming it's still being used,

NOTE Confidence: 0.804089076666667

ef54190f-6db7-4a4b-ae8e-7235bf44091c
00:31:10.310 --> 00:31:12.010
and I think it is.

NOTE Confidence: 0.804089076666667

a2ec5809-711a-4607-b40c-8f4b54fb8a9d
00:31:12.010 --> 00:31:13.450
One thing I like to check for is

NOTE Confidence: 0.804089076666667

4c19eaa8-c1da-43be-8bed-79f515beef23
00:31:13.450 --> 00:31:15.229
if a PR has been heavily revised,

NOTE Confidence: 0.804089076666667

86c9d96d-3490-4ee5-8ad0-98d9287a65c5
00:31:15.230 --> 00:31:17.218
make sure that all of the machinery

NOTE Confidence: 0.804089076666667

bf8d2cac-25ce-4648-a729-7629f1276c72
00:31:17.218 --> 00:31:19.142
it's still adding, the need for it

NOTE Confidence: 0.804089076666667

e12e671d-7dbb-49a5-8728-abdd885c5e98
00:31:19.142 --> 00:31:20.482
has not disappeared during edit.

NOTE Confidence: 0.804089076666667

e7ceda98-6f3a-45cf-922c-5bf0ce30297e
00:31:20.490 --> 00:31:22.170
So I'm going to expand everything,

NOTE Confidence: 0.804089076666667

ebd6fd6b-aa1f-4b2b-abff-29c84772b58c
00:31:22.170 --> 00:31:26.070
search for uses. Here's the definition.

NOTE Confidence: 0.804089076666667

cb6f59c3-0cce-42d1-9a3e-bce063b93514
00:31:26.070 --> 00:31:26.966
OK, so notice guard,

NOTE Confidence: 0.804089076666667

c95684e1-2161-4436-930b-9218206056da
00:31:26.966 --> 00:31:28.310
seed or lock and notice guard,

NOTE Confidence: 0.804089076666667

1f784922-b3c1-44c1-9e1b-8113d7024e15
00:31:28.310 --> 00:31:29.990
seed or thread are using it.

NOTE Confidence: 0.804089076666667

c734f200-fa27-4286-9c59-8acbbb788592
00:31:29.990 --> 00:31:31.926
Like ignoring a thread.

NOTE Confidence: 0.804089076666667

886693a3-6bb6-4c1a-9f56-5a88476aa824
00:31:31.926 --> 00:31:33.510
OK, it is being used. Good.

NOTE Confidence: 0.804089076666667

1b2ae13c-4292-420e-8124-f7604fe2c0a7
00:31:33.510 --> 00:31:34.926
So this is not stale in any way.

NOTE Confidence: 0.804089076666667

810d6450-af98-4830-af0d-5ceda3058ede
00:31:34.930 --> 00:31:35.370
Excellent.

NOTE Confidence: 0.656218985

510cff02-a0f1-43a0-8668-a8b5d30fb229
00:31:37.820 --> 00:31:39.236
OK, so that's notice card message

NOTE Confidence: 0.656218985

518c9430-af15-4855-8b58-917fedd3cd76
00:31:39.236 --> 00:31:40.710
and notice card seed or message.

NOTE Confidence: 0.656218985

0c5dbd30-5c4d-464c-9d43-c45d96544cd0
00:31:40.710 --> 00:31:43.005
So now I'm going to look at the macros

NOTE Confidence: 0.656218985

b6b920a3-c0ec-4ae4-8608-312e75e0391e
00:31:43.005 --> 00:31:47.436
that are being added to understand if these

NOTE Confidence: 0.656218985

6f8ab026-bfdd-42ab-b23d-556cb780c2a3
00:31:47.436 --> 00:31:49.640
are good cases to him in the morning,

NOTE Confidence: 0.656218985

bbc2d6a2-39d8-4a67-a168-c76612707c07
00:31:49.640 --> 00:31:52.240
why we're getting the warning there or why.

NOTE Confidence: 0.656218985

345f391d-ded4-471a-ae02-edcc3be2b56b
00:31:52.240 --> 00:31:54.354
Or in this case, I think this

NOTE Confidence: 0.656218985

b32aba81-778b-4154-b270-3ba67ed25730
00:31:54.354 --> 00:31:56.073
PR is converting every everyone

NOTE Confidence: 0.656218985

acd9e3fb-7a9e-46db-a877-c54c6d32922a
00:31:56.073 --> 00:31:58.677
already had a notice card to reason,

NOTE Confidence: 0.656218985

44b2bdc4-5d4a-4aaf-af1c-ff2552de2db3
00:31:58.680 --> 00:32:00.507
so we just need to make sure the reason

NOTE Confidence: 0.656218985

ff2deaef-4b03-4c0b-82c1-fdc280d48826
00:32:00.507 --> 00:32:02.456
is unique enough to deserve a message.

NOTE Confidence: 0.656218985

75851cfe-3670-4871-99e9-2753db793606
00:32:02.460 --> 00:32:05.196
And think about are there any cases that

NOTE Confidence: 0.656218985

99a50af8-58a3-424f-ba92-3343043ea15a
00:32:05.196 --> 00:32:08.450
are not obvious that should also be marked?

NOTE Confidence: 0.656218985

1d053c18-29b5-4113-9635-586ea90bdd41
00:32:08.450 --> 00:32:09.790
So as I mentioned,

NOTE Confidence: 0.656218985

c3552611-7f41-4fe7-b1c8-37ee9ade95c2
00:32:09.790 --> 00:32:10.795
the remove algorithms,

NOTE Confidence: 0.656218985

27e01c02-b6f3-4596-8635-9faa049e53ca
00:32:10.800 --> 00:32:12.431
those are a classic example where they

NOTE Confidence: 0.656218985

c35a3a38-f4cd-41eb-96a3-54a7862005cc
00:32:12.431 --> 00:32:14.390
have a second step that needs to be done.

NOTE Confidence: 0.656218985

0a632374-4784-4b5d-887c-45709fc3062c
00:32:14.390 --> 00:32:16.090
So this is definitely good.

NOTE Confidence: 0.656218985

42258481-3eeb-4bde-9487-e09fd9ff1586
00:32:16.090 --> 00:32:17.983
The unique algorithms,

NOTE Confidence: 0.656218985

aa3196aa-2a5e-42ab-aa37-0fe25b9efe0a
00:32:17.983 --> 00:32:21.769
same idea but a different name.

NOTE Confidence: 0.656218985

cb1c1b08-8c76-4539-a26f-a10a76b66261
00:32:21.770 --> 00:32:23.705
This is sufficiently different enough

NOTE Confidence: 0.656218985

8f6c1c5c-8ebf-4daf-bfa6-1dd2ad2dda03
00:32:23.705 --> 00:32:26.605
that I think having a separate macro we

NOTE Confidence: 0.656218985

f40d0627-dcd7-4836-a67a-ca8029de3aaa
00:32:26.605 --> 00:32:29.680
could super unify it into like remove unique.

NOTE Confidence: 0.912152788333333

c17e015d-52e8-4e50-bff1-70e0954f1f7e
00:32:32.480 --> 00:32:35.684
I suppose one could do that. But here,

NOTE Confidence: 0.912152788333333

0462bbfa-45d0-4cff-b6cc-c3afebf3b732
00:32:35.684 --> 00:32:38.036
just looking at the message briefly,

NOTE Confidence: 0.912152788333333

a3f34bb8-347f-46b6-9fdd-557daf2f61f5
00:32:38.040 --> 00:32:39.363
there's a good reason Alex has got

NOTE Confidence: 0.912152788333333

138433fc-97e5-4808-ae1c-878b2144ab88
00:32:39.363 --> 00:32:40.758
a good reason for splitting these,

NOTE Confidence: 0.912152788333333

f60b9b4d-a153-42e5-8e1c-2846b0c1d08a
00:32:40.760 --> 00:32:43.742
because with remove he suggests using

NOTE Confidence: 0.912152788333333

9e7ecf82-d464-4825-9be6-1e4d588bd890
00:32:43.742 --> 00:32:47.315
the erase and erase functions that I

NOTE Confidence: 0.912152788333333

6a9db7d9-8d15-4f4b-afc5-6bdf5e5cb28a
00:32:47.315 --> 00:32:50.794
added to the standard originally in ATS.

NOTE Confidence: 0.912152788333333

b100db92-50a8-4c0a-ab1f-eda2dab6c685
00:32:50.800 --> 00:32:52.216
But that's not applicable to unique.

NOTE Confidence: 0.912152788333333

ad9017fe-e6e3-427e-a78a-d9d754db35e5
00:32:52.220 --> 00:32:54.212
There's no unifying thing that will

NOTE Confidence: 0.912152788333333

cd6b509c-d86b-4827-8475-9dd64935df56
00:32:54.212 --> 00:32:56.396
also sort. So that is sufficient

NOTE Confidence: 0.912152788333333

1ad01f0a-1cda-4175-9692-548aee7ebe51
00:32:56.396 --> 00:32:59.350
reason to not super unify all of this.

NOTE Confidence: 0.912152788333333

bc338068-a812-4cd7-8138-71905af17bc1
00:32:59.350 --> 00:33:03.910
OK, next is empty member function.

NOTE Confidence: 0.912152788333333

c5574f27-c05f-4c7c-9712-6bfa435845a1
00:33:03.910 --> 00:33:06.165
Although this does fall under

NOTE Confidence: 0.912152788333333

6e052fd8-1560-46e9-b135-a77674b32314
00:33:06.165 --> 00:33:07.969
our pure observer criterion,

NOTE Confidence: 0.912152788333333

2ab9d369-48e8-4840-8361-fce95d50e7cc
00:33:07.970 --> 00:33:11.762
this is a very likely bug that new

NOTE Confidence: 0.912152788333333

8c9a80f5-da52-42b7-91c8-ae6aeced15b8
00:33:11.762 --> 00:33:14.220
users could commit when you're just

NOTE Confidence: 0.912152788333333

e90e1712-e531-4f42-b616-26c9068d4bcc
00:33:14.220 --> 00:33:15.780
using vector for the first time.

NOTE Confidence: 0.912152788333333

0af2a5e1-bd8b-4d09-a18d-0735b5a8959d
00:33:15.780 --> 00:33:17.295
And although experienced users will

NOTE Confidence: 0.912152788333333

b3951bf9-2b5d-4fbe-a4bb-9419dd56f43c
00:33:17.295 --> 00:33:19.080
understand what happens when they drop,

NOTE Confidence: 0.912152788333333

e07e0198-5b54-443e-ab24-3708a5cb7be2
00:33:19.080 --> 00:33:19.992
like, you know,

NOTE Confidence: 0.912152788333333

18682d69-b881-4a2c-93b6-18e3a52d34ed
00:33:19.992 --> 00:33:22.120
operate or not equal on the floor

NOTE Confidence: 0.912152788333333

16b3e15a-7e53-4e80-9845-b3518b1df790
00:33:22.184 --> 00:33:24.169
or something empty versus clear.

NOTE Confidence: 0.912152788333333

526a1608-dbec-45fe-b2d3-fd478a479342
00:33:24.170 --> 00:33:25.855
Providing the guidance to call

NOTE Confidence: 0.912152788333333

232d7dd0-8869-4368-8413-932d55101751
00:33:25.855 --> 00:33:26.866
clear is reasonable,

NOTE Confidence: 0.912152788333333

03c4344e-a9ca-41a7-b2c9-7ef3bad0ca03
00:33:26.870 --> 00:33:28.088
and there's only a few occurrences,

NOTE Confidence: 0.912152788333333

93292c70-a4dc-4a5b-a202-a0a91f6d667e
00:33:28.090 --> 00:33:29.428
so having a dedicated message is.

NOTE Confidence: 0.912152788333333

9292e7a0-802f-43ec-b8b7-5c7ab41a8db0
00:33:29.430 --> 00:33:31.180
Reasonable also because the standard

NOTE Confidence: 0.912152788333333

37bfa6ee-dcce-4126-8455-0eee66114fa6
00:33:31.180 --> 00:33:33.400
thought it was important enough to mark.

NOTE Confidence: 0.912152788333333

40d59cb0-06b7-46e4-bb80-f4f7e21778dd
00:33:33.400 --> 00:33:35.704
Um, OK, next?

NOTE Confidence: 0.912152788333333

9905b82b-7494-422b-b872-50484d4b8df4
00:33:35.704 --> 00:33:38.776
Empty on an array?

NOTE Confidence: 0.912152788333333

908489f4-46a7-4701-90a6-97f3a570095f
00:33:38.780 --> 00:33:40.370
Um, that's a pure observer,

NOTE Confidence: 0.912152788333333

5a735aa6-a025-427d-a33c-9ebac61dd1e9
00:33:40.370 --> 00:33:41.840
but there's no such thing as clear,

NOTE Confidence: 0.912152788333333

b99302d7-e209-47b1-af04-25a3e8dc1fab
00:33:41.840 --> 00:33:43.925
so providing guidance for clear

NOTE Confidence: 0.912152788333333

412ee391-b776-4f60-9a55-aa9184fdd54f
00:33:43.925 --> 00:33:45.176
would be wrong.

NOTE Confidence: 0.912152788333333

2fce6721-8d76-4c26-b86b-7bc3f1db72d6
00:33:45.180 --> 00:33:48.836
So have special special casing this for Ray.

NOTE Confidence: 0.912152788333333

3b596ecb-f30c-463b-bbc1-d3ad34745084
00:33:48.840 --> 00:33:50.268
Also seems reasonable.

NOTE Confidence: 0.951373138

25f9c577-4753-4a0e-bd38-3a5e80ca6faf
00:33:53.300 --> 00:33:57.500
It could be argued that.

NOTE Confidence: 0.951373138

46af598f-1d57-4b96-b084-2e1ffa0bbebe
00:33:57.500 --> 00:33:59.126
The user might think that this

NOTE Confidence: 0.951373138

ea392360-7bde-4558-9188-4b07a4b14bcf
00:33:59.126 --> 00:34:01.480
is more of a pure observer case,

NOTE Confidence: 0.951373138

628c8622-b554-4fb1-ae7c-07cc08673345
00:34:01.480 --> 00:34:03.587
but I could see a user converting

NOTE Confidence: 0.951373138

5fa3178f-0e40-4d3a-bdcd-954d389f5674
00:34:03.587 --> 00:34:05.802
from like vector to array if they're

NOTE Confidence: 0.951373138

c98fcb51-ad54-4a9f-9873-29b9a02dca84
00:34:05.802 --> 00:34:08.057
not really familiar with the two and

NOTE Confidence: 0.951373138

09fa63cb-9638-41f5-b960-5a06d4819b00
00:34:08.057 --> 00:34:10.269
then thinking they could empty it out,

NOTE Confidence: 0.951373138

c87e01fd-246d-40c5-a2ca-82b0c3ddc810
00:34:10.270 --> 00:34:12.025
and having the separate guidance

NOTE Confidence: 0.951373138

23eaea18-53c8-49d7-b496-665ae2b9ca5d
00:34:12.025 --> 00:34:15.600
here seems reasonable OK.

NOTE Confidence: 0.951373138

80e8b03d-1ae0-4251-92a2-66b8e05e0c16
00:34:15.600 --> 00:34:17.976
OK, so it looks like Alex is adding

NOTE Confidence: 0.951373138

4cf8daa1-1076-45e6-8672-ae27b906bd7d
00:34:17.976 --> 00:34:20.060
messages for everything named empty.

NOTE Confidence: 0.951373138

99654f1a-1aff-4a5f-96c8-37800133b51c
00:34:20.060 --> 00:34:22.180
There's one in stack trace, which is

NOTE Confidence: 0.951373138

bdeb00ae-0419-45ca-8f26-63fd96a62c04
00:34:22.180 --> 00:34:24.955
the feature Alex himself implemented.

NOTE Confidence: 0.951373138

17c3ee1c-be46-434f-8fb4-32853a039f90
00:34:24.960 --> 00:34:27.416
This explains how to clear the stack trace.

NOTE Confidence: 0.951373138

fcbbcb5a-a619-40f4-add9-2ad691cf1542
00:34:27.420 --> 00:34:29.130
I like this one because since

NOTE Confidence: 0.951373138

30df397b-93cf-4746-b94f-6efa99733696
00:34:29.130 --> 00:34:30.899
I use vector all the time,

NOTE Confidence: 0.951373138

97d6f8a0-28cf-4401-8b82-e52ea0ac833b
00:34:30.900 --> 00:34:32.258
I'm like everything behaves like a vector.

NOTE Confidence: 0.951373138

fac7aea9-6777-461a-b920-eecf0c158e2c
00:34:32.260 --> 00:34:33.908
I don't need to know any other class,

NOTE Confidence: 0.951373138

c8036255-d093-44a0-b7e3-064e71f0f63e
00:34:33.910 --> 00:34:36.997
and I might if I'm not sufficiently

NOTE Confidence: 0.951373138

12ddfc0a-0280-4320-ba8c-7a6533a54217
00:34:36.997 --> 00:34:39.040
caffeinated, say stack trace dot empty.

NOTE Confidence: 0.951373138

fd0aab4c-0205-4f62-a83f-b38828070cd3
00:34:39.040 --> 00:34:41.134
Having guidance that explains what to

NOTE Confidence: 0.951373138

b29175ea-048a-4d82-8151-ef6b330f98a3
00:34:41.134 --> 00:34:44.380
do and how to reassign it is reasonable.

NOTE Confidence: 0.951373138

5132f98a-7e22-4104-b6ae-71a6312c9833
00:34:44.380 --> 00:34:47.061
And then it looks like Alex just

NOTE Confidence: 0.951373138

29140e05-bda1-43f0-aa6e-f8885eacdcea
00:34:47.061 --> 00:34:50.078
has a fall back empty function,

NOTE Confidence: 0.951373138

480574f2-4c0a-4d9a-9a2d-bc38b61f11e5
00:34:50.080 --> 00:34:53.800
but not doesn't need specific guidance

NOTE Confidence: 0.951373138

d01b2bec-3b13-4171-8a15-9425e01ce356
00:34:53.800 --> 00:34:55.868
for clear. This seems reasonable.

NOTE Confidence: 0.951373138

ba877f59-4ec0-4027-a32a-71dcc4a6d704
00:34:55.868 --> 00:34:57.892
Can any? This is sufficiently vague.

NOTE Confidence: 0.951373138

febe20c9-8de9-4baf-82ac-cd1bcd3d55a8
00:34:57.892 --> 00:34:59.163
Container, container like object?

NOTE Confidence: 0.951373138

e483712c-7ebc-4608-81ca-d57754a29185
00:34:59.163 --> 00:35:00.066
That seems right.

NOTE Confidence: 0.634593802

a580f98f-765c-45b3-8a57-b071392d59e6
00:35:02.760 --> 00:35:05.864
Empty. Mem fun adapter.

NOTE Confidence: 0.634593802

8e9bdb28-d878-44c4-a764-f9b3310c9800
00:35:05.864 --> 00:35:07.760
Ah, for queues and stacks,

NOTE Confidence: 0.634593802

e0feda52-3786-45fa-bce6-8f5c04570828
00:35:07.760 --> 00:35:10.059
I was like empty memo under score fun,

NOTE Confidence: 0.634593802

712177b5-1159-4494-85f2-801900cb9002
00:35:10.060 --> 00:35:11.638
but I thought that that function

NOTE Confidence: 0.634593802

42c694d1-e82d-46fd-b703-74e69a036abe
00:35:11.638 --> 00:35:13.179
doesn't have any sort of empty.

NOTE Confidence: 0.634593802

e02e7b2f-8155-4f00-bdc6-e7def93352bc
00:35:13.180 --> 00:35:17.300
But no, it's a empty on an empty

NOTE Confidence: 0.634593802

05682a93-088e-43b7-85c7-a86a61504b3e
00:35:17.300 --> 00:35:19.949
member function on an adapter.

NOTE Confidence: 0.634593802

3c562af1-05a6-47b6-8950-5c3ad4458738
00:35:19.950 --> 00:35:22.050
Now I'm currently thinking do I like

NOTE Confidence: 0.634593802

dda5c0fe-37a5-48f6-93fa-98d632f6da9d
00:35:22.050 --> 00:35:24.477
MEM under score FN here and it's not

NOTE Confidence: 0.634593802

4e6ecf2a-c07c-499e-8acc-7bc7062ca3b5
00:35:24.477 --> 00:35:26.353
really a problem for searching because

NOTE Confidence: 0.634593802

fa81cfd3-ba73-4790-84ef-1c3d52af04fe
00:35:26.353 --> 00:35:28.429
the actual function is lower case.

NOTE Confidence: 0.634593802

f8d9e096-5a57-49d7-99dd-a0c1e009dbdc
00:35:28.430 --> 00:35:29.858
Ma'am under score fan.

NOTE Confidence: 0.634593802

51829995-6a1a-4326-8317-3cd14ff02194
00:35:29.858 --> 00:35:32.664
Yeah it's not worth trying to rename.

NOTE Confidence: 0.634593802

5307b646-34a5-40f2-817f-c8eae4df0df1
00:35:32.664 --> 00:35:35.412
OK yeah QR stack and agreed

NOTE Confidence: 0.634593802

e616fc03-a870-4659-879f-81a611b9824a
00:35:35.412 --> 00:35:38.168
that there's no way to clear.

NOTE Confidence: 0.634593802

0e6502b3-83fa-45f4-a7e0-269853610741
00:35:38.170 --> 00:35:39.635
I'll like I mentioned later

NOTE Confidence: 0.634593802

d3a69e9d-ac9a-4a36-a433-bef776cdc4c0
00:35:39.635 --> 00:35:41.849
I'll do a check for spelling and

NOTE Confidence: 0.634593802

b6960eab-cb48-4bd8-8561-586453100dad
00:35:41.849 --> 00:35:43.889
stuff because that needs to be

NOTE Confidence: 0.634593802

5e315965-0d0b-468d-84d8-99c069f00efb
00:35:43.889 --> 00:35:46.170
fixed so these all seem good.

NOTE Confidence: 0.634593802

c1866aaf-27a1-40e8-81b7-68e17d3bbe36
00:35:46.170 --> 00:35:47.571
Next up barrier.

NOTE Confidence: 0.634593802

c41ea5f0-1aca-47c1-bcd0-8104f137e47b
00:35:47.571 --> 00:35:50.373
So this is the multi threading.

NOTE Confidence: 0.634593802

2de42aab-506a-4e45-83af-75e4192c25c8
00:35:50.380 --> 00:35:51.604
New multithreading component.

NOTE Confidence: 0.634593802

7dd8acd7-51b7-4241-8ddd-48f743b0c2bf
00:35:51.604 --> 00:35:54.052
If you arrive at a barrier,

NOTE Confidence: 0.634593802

ec94588d-0376-44a1-b911-ca4087d8b7a7
00:35:54.060 --> 00:35:55.278
you should not discard the token.

NOTE Confidence: 0.634593802

a57fdd84-7b33-4a75-b241-14a0752d7cb5
00:35:55.280 --> 00:35:56.050
You're going to need it.

NOTE Confidence: 0.634593802

dbec2f3f-f9e9-42dc-adbd-6f4a2a3718ca
00:35:56.050 --> 00:35:57.478
You're going to need to wait.

NOTE Confidence: 0.634593802

bc197f25-28f8-4b22-b72b-921a980d4647
00:35:57.480 --> 00:35:59.358
This is excellent because if you're

NOTE Confidence: 0.634593802

13a65c58-def5-404d-af63-ee8b14ab3829
00:35:59.358 --> 00:36:01.337
new to barrier you might not

NOTE Confidence: 0.634593802

712cce8c-7786-4932-9707-55e6936fcc25
00:36:01.337 --> 00:36:03.335
realize I didn't remember this case,

NOTE Confidence: 0.634593802

98f8b1e2-23d2-4dc9-abfd-ff63bdad3ec5
00:36:03.340 --> 00:36:05.020
that we marked this as notice

NOTE Confidence: 0.634593802

a8fe6e40-f8d7-4447-b3d8-b94fb284d7a9
00:36:05.020 --> 00:36:06.600
card for an unusual reason.

NOTE Confidence: 0.634593802

2d944b3e-9190-461a-b732-7df07cdef824
00:36:06.600 --> 00:36:09.165
This is a case kind of like removing

NOTE Confidence: 0.634593802

18a7fad3-662c-4a0a-9432-7ec90a9cfb41
00:36:09.165 --> 00:36:11.720
unique that it's a multi step thing.

NOTE Confidence: 0.634593802

c6fa4795-fd4f-4a8d-b621-c94c9ba47a70
00:36:11.720 --> 00:36:13.250
I'm try weight.

NOTE Confidence: 0.843139909285714

036478a6-b6bb-471a-b48a-5c5ffec3143a
00:36:16.450 --> 00:36:19.123
OK, so here I guess we had we had

NOTE Confidence: 0.843139909285714

4993a8c8-c667-497d-baf5-88cdc36d1997
00:36:19.123 --> 00:36:22.120
marked it as no discard. And if you.

NOTE Confidence: 0.915846592

d13648fd-5251-43e1-bf2f-8900d2fabfd7
00:36:24.170 --> 00:36:25.690
Tried to wait for something.

NOTE Confidence: 0.9231361125

e1a88cdb-0f4e-458b-9830-de8b78bb07d6
00:36:29.980 --> 00:36:31.940
You would probably want to know what

NOTE Confidence: 0.9231361125

8fd0719c-582b-4f3d-997e-739123ead39d
00:36:31.940 --> 00:36:33.860
happened, like did you success?

NOTE Confidence: 0.9231361125

f06f55e5-191f-47f6-aa79-ab1da3a693db
00:36:33.860 --> 00:36:35.910
Did you reach this success

NOTE Confidence: 0.9231361125

7bf58c4f-6909-4e01-bc9f-ae143502e5cf
00:36:35.910 --> 00:36:38.672
criterion or did did it time out?

NOTE Confidence: 0.9231361125

dc8945c5-8ff0-4d8f-90de-967a25e28859
00:36:38.672 --> 00:36:42.728
So you really should inspect it.

NOTE Confidence: 0.9231361125

09a01837-12ed-4b08-9b01-5f55201f3c5e
00:36:42.730 --> 00:36:44.956
I remember there were some there

NOTE Confidence: 0.9231361125

de2061d0-b190-4438-ac6a-96c156935472
00:36:44.956 --> 00:36:46.440
were some controversy slash

NOTE Confidence: 0.9231361125

bf9138da-958b-4128-aec2-fb0ef4c19100
00:36:46.511 --> 00:36:48.366
question about there was some,

NOTE Confidence: 0.9231361125

f69013df-9be1-49bd-a18b-d9a2147287a4
00:36:48.370 --> 00:36:50.596
I'm trying to remember what it was

NOTE Confidence: 0.9231361125

09859a9d-a025-45b9-988f-371a1946381c
00:36:50.596 --> 00:36:52.349
in condition variable or something.

NOTE Confidence: 0.9231361125

d5246212-68d9-4d46-bc6d-a0691d483a90
00:36:52.350 --> 00:36:54.191
There's like a member function where we

NOTE Confidence: 0.9231361125

0bb364a6-3061-4328-9fb6-41a01b1f674c
00:36:54.191 --> 00:36:56.172
really it was like unique put or remove

NOTE Confidence: 0.9231361125

98ef09b5-cc7f-4329-808a-f7c5b7f47604
00:36:56.172 --> 00:36:58.210
or we wanted to mark it as no discard.

NOTE Confidence: 0.9231361125

15835f07-71fa-4c24-9494-9b4b7c81c78b
00:36:58.210 --> 00:37:00.538
But users came up with some cases that

NOTE Confidence: 0.9231361125

93c36230-9f13-4f2e-b24a-34d31184fccd
00:37:00.538 --> 00:37:02.542
were like 10% reasonable 10% of the

NOTE Confidence: 0.9231361125

5d0b221e-5a78-4520-bbb2-db77ce5b4172
00:37:02.542 --> 00:37:04.809
time and we ultimately did not mark it.

NOTE Confidence: 0.9231361125

f3b7ab51-960f-4558-86dd-987a7376c743
00:37:04.810 --> 00:37:06.581
I can't remember it was that try

NOTE Confidence: 0.9231361125

c4c79813-1b98-4984-9e93-389c2d5aba4e
00:37:06.581 --> 00:37:08.500
weight or was that something else?

NOTE Confidence: 0.89336783625

e07b0835-a2b8-4757-9ece-454c580b1384
00:37:10.510 --> 00:37:13.486
Something like that I guess I can search.

NOTE Confidence: 0.89336783625

c450101a-047a-4a02-9bcf-95d0085eea49
00:37:13.490 --> 00:37:15.560
It's been a few years.

NOTE Confidence: 0.89336783625

de493ac4-8f40-47d1-b4c4-fd4a82f255c7
00:37:15.560 --> 00:37:18.969
My understanding is that try weight like.

NOTE Confidence: 0.89336783625

812357da-a00d-4b7f-b0a4-c3547b18aac3
00:37:18.970 --> 00:37:23.590
Immediately returns you like.

NOTE Confidence: 0.89336783625

6a0e37c8-ecc1-440f-a490-05e45dbd34e7
00:37:23.590 --> 00:37:25.718
I don't think that there is any

NOTE Confidence: 0.89336783625

4560513e-bb91-4c0f-98c1-7f239cefdf8d
00:37:25.718 --> 00:37:27.796
reason to call it except to

NOTE Confidence: 0.89336783625

7bc45124-ad18-4b6d-bc6b-4a3b4ec54ede
00:37:27.796 --> 00:37:29.616
check if something is finished.

NOTE Confidence: 0.89336783625

18526a1b-775e-4114-9e95-f4bfdee3b9b3
00:37:29.620 --> 00:37:30.496
Ohh it's like instant.

NOTE Confidence: 0.89336783625

e388ccd1-c24e-4e15-86c1-eefb15ee2446
00:37:30.496 --> 00:37:32.560
It doesn't take a corona or something right?

NOTE Confidence: 0.89336783625

5c45a385-2326-4c97-ab71-d3689b24c19f
00:37:32.560 --> 00:37:34.430
That that's my understanding anyways.

NOTE Confidence: 0.89336783625

27386d9e-4924-4515-ae2c-931beb1da366
00:37:34.430 --> 00:37:36.818
I very well could be wrong.

NOTE Confidence: 0.89336783625

ee81fa4c-106a-47fb-9b19-3435afe64172
00:37:36.820 --> 00:37:38.620
Oh oh cause it's it's latch.

NOTE Confidence: 0.89336783625

65919ce5-fd2e-4247-9ecc-98473eef4de4
00:37:38.620 --> 00:37:39.420
Latch is try weight.

NOTE Confidence: 0.89336783625

3916725c-0d30-4671-b63d-467906bcaf77
00:37:39.420 --> 00:37:40.420
It just returns a bull.

NOTE Confidence: 0.89336783625

ec177eee-03f1-46a7-85ad-da5948c72a9f
00:37:40.420 --> 00:37:43.940
OK, I was thinking of wait for and

NOTE Confidence: 0.89336783625

e2090012-13bf-48da-9080-86e90eb6e6ab
00:37:43.940 --> 00:37:47.280
wait for until. OK yeah you're right.

NOTE Confidence: 0.89336783625

c7a88d7b-338a-403f-b919-1bde38a205c3
00:37:47.280 --> 00:37:50.598
So in fact let's check weight 4.

NOTE Confidence: 0.89336783625

851c6359-b871-4454-ae8a-a2ae3ed95070
00:37:50.600 --> 00:37:52.660
Uh, let's see. That's future.

NOTE Confidence: 0.89336783625

a3de75b4-9374-4ebb-9635-9c7183fc9939
00:37:52.660 --> 00:37:53.152
That's ugly.

NOTE Confidence: 0.89336783625

ee2a631c-a798-4f1c-9094-7ff84ea1c712
00:37:53.152 --> 00:37:54.136
I don't want ugly.

NOTE Confidence: 0.824737112

ebb83452-5848-4a0b-be4a-d9c942ff9018
00:37:56.240 --> 00:37:56.832
Ah, here we go.

NOTE Confidence: 0.824737112

dfd5184f-03dc-41e3-9479-16a71da55fa2
00:37:56.832 --> 00:37:58.172
So, like in condition variable,

NOTE Confidence: 0.824737112

0d0f9f80-a9ac-4112-800b-76a859ec9616
00:37:58.172 --> 00:38:00.739
are we in the normal condition variable here?

NOTE Confidence: 0.824737112

e17884de-628b-4788-89e0-4c38365a2fce
00:38:00.740 --> 00:38:03.836
Condition variable any we've got wait for it.

NOTE Confidence: 0.824737112

77156dc9-2ba8-490e-9b77-dc82f53ace37
00:38:03.840 --> 00:38:05.072
Returns a CV status.

NOTE Confidence: 0.824737112

6564284a-3193-486f-af61-e8867832344a
00:38:05.072 --> 00:38:07.300
You probably should be checking this thing,

NOTE Confidence: 0.824737112

2f834a8f-012a-4f75-a54a-22133ca4df29
00:38:07.300 --> 00:38:08.896
but there's a few cases where

NOTE Confidence: 0.824737112

65bce2fa-b110-46fe-abce-1580d46b0b63
00:38:08.896 --> 00:38:09.960
it's reasonable not to,

NOTE Confidence: 0.824737112

957099db-df12-44fe-98b5-4b8bce9bdf91
00:38:09.960 --> 00:38:13.110
so we did not mark this as no discard.

NOTE Confidence: 0.824737112

0749558c-b346-437e-aaf9-8ddc0ece5b52
00:38:13.110 --> 00:38:15.575
Um, but you're right that

NOTE Confidence: 0.824737112

60635597-8968-4465-87cd-17f45569d9a0
00:38:15.575 --> 00:38:17.547
try weight is special,

NOTE Confidence: 0.824737112

c0d084f5-e3c9-41c3-85b2-b13e30d13a5f
00:38:17.550 --> 00:38:19.326
and we already marked it as no discard,

NOTE Confidence: 0.824737112

2a3308aa-effe-411c-84f1-21ff40546eed
00:38:19.330 --> 00:38:20.786
so this is just providing a reason.

NOTE Confidence: 0.824737112

dfec2322-a183-4a58-b63e-212a2d804701
00:38:20.790 --> 00:38:25.604
Excellent. Um, OK. Great.

NOTE Confidence: 0.824737112

a29e1267-d1c2-4304-96a0-63ee908638d8
00:38:25.604 --> 00:38:28.420
Um, try change state.

NOTE Confidence: 0.824737112

cd0c3b93-d82f-445d-bb87-7f5e8a50d734
00:38:28.420 --> 00:38:30.485
What even is a try change state?

NOTE Confidence: 0.8453394

28471ab5-9701-4054-b6e3-f0d826b269ac
00:38:37.300 --> 00:38:37.840
Interesting.

NOTE Confidence: 0.818767894285714

8a15a24d-65d5-48c3-b30a-b6cf18a26da6
00:38:41.690 --> 00:38:43.002
This must be. This must be used on

NOTE Confidence: 0.818767894285714

b6e9c8fd-e6f4-4992-a83c-4deb944e2c50
00:38:43.002 --> 00:38:44.227
things that are not literally named.

NOTE Confidence: 0.818767894285714

aff6f5bc-f4a2-4ce8-88f1-fc5c503de6cb
00:38:44.230 --> 00:38:45.160
Try change state.

NOTE Confidence: 0.818767894285714

e976f513-ac09-4b5e-80fb-4b34d32257d3
00:38:45.160 --> 00:38:47.330
I would just like to see what

NOTE Confidence: 0.818767894285714

1e7ad03f-b187-4399-8a8f-ebf22e40cdc7
00:38:47.404 --> 00:38:49.186
it is and then I'll resume.

NOTE Confidence: 0.818767894285714

93d70b40-b8a2-4d83-8e66-7940523fdab0
00:38:49.190 --> 00:38:51.718
Search for the macro.

NOTE Confidence: 0.818767894285714

1340d83e-df45-48d9-a500-3c5705507b53
00:38:51.720 --> 00:38:53.930
Yeah ohh try lock OK.

NOTE Confidence: 0.670857148333333

28f156a6-7dd4-478b-b636-aa1afab4f534
00:38:56.670 --> 00:38:59.628
Try like 4 trilock until OK.

NOTE Confidence: 0.708378832

3bfbf71c-b750-4b39-9f5d-ce422974b2b1
00:39:02.570 --> 00:39:04.670
OK, that seems sufficiently generic.

NOTE Confidence: 0.708378832

c2d53f7d-2503-4604-a5d4-14edf993806e
00:39:04.670 --> 00:39:07.930
OK, let me go back.

NOTE Confidence: 0.708378832

0410e1f6-e0b5-487e-9b1b-c4266d4b8e8d
00:39:07.930 --> 00:39:11.490
If I change state, um.

NOTE Confidence: 0.708378832

b0d1b2ab-ca2d-4748-8206-f90a55fbd482
00:39:11.490 --> 00:39:13.078
Try change state fun.

NOTE Confidence: 0.8142969075

b38ace34-c57d-4786-946d-c4a86da86c24
00:39:15.120 --> 00:39:16.948
Non member versus member.

NOTE Confidence: 0.815979952777778

3875fd5b-514a-4004-ad51-a4945ccf02d7
00:39:22.790 --> 00:39:24.176
Here it's. These are really similar

NOTE Confidence: 0.815979952777778

88613929-ce5b-4789-93e6-89a706bf799f
00:39:24.176 --> 00:39:25.929
as is this the first pair that

NOTE Confidence: 0.815979952777778

2e8b9a5b-4a4e-490f-b625-50e1c1a85160
00:39:25.929 --> 00:39:27.229
was member versus non member?

NOTE Confidence: 0.815979952777778

5371ac03-044e-4658-af4f-d5ef9e2b8b95
00:39:27.230 --> 00:39:28.778
I think it is every everything

NOTE Confidence: 0.815979952777778

68db9820-0b33-4a85-b5e6-22d0bba03f0b
00:39:28.778 --> 00:39:30.435
else here was like member yeah

NOTE Confidence: 0.815979952777778

3c9172a5-6b40-442e-82a3-e564bddbacbf
00:39:30.435 --> 00:39:32.139
we're moving unique or non members

NOTE Confidence: 0.815979952777778

3fac04e9-cacd-4366-869b-6c5a65ef64fc
00:39:32.139 --> 00:39:33.768
for the ones we care about.

NOTE Confidence: 0.815979952777778

b351d5e3-92a2-42b2-9be4-f89ea5e10fde
00:39:33.770 --> 00:39:36.470
Empty is always a member function.

NOTE Confidence: 0.815979952777778

0bd2d71b-95ca-45ab-8e31-d395a6a8e83f
00:39:36.470 --> 00:39:38.190
Barrier is a member function.

NOTE Confidence: 0.815979952777778

2b9d65a8-0484-4e5b-af01-f6ebee81e4f8
00:39:38.190 --> 00:39:39.334
Try weights member function.

NOTE Confidence: 0.815979952777778

ade87bc3-917d-44bd-9f71-e21ddfe66aec
00:39:39.334 --> 00:39:41.509
So these are the first ones that are

NOTE Confidence: 0.815979952777778

4b33d097-40e6-498d-b545-66d6a71d53a8
00:39:41.510 --> 00:39:43.910
free versus member function pair.

NOTE Confidence: 0.815979952777778

23ae4a41-0602-445f-b125-c8f270345477
00:39:43.910 --> 00:39:46.466
I believe that empty has two,

NOTE Confidence: 0.815979952777778

65b7c567-fccd-4828-9f52-d6f5faeaf76f
00:39:46.470 --> 00:39:50.070
one for member function and one for the

NOTE Confidence: 0.815979952777778

5034ccb3-fd9b-4113-9810-54185064455a
00:39:50.070 --> 00:39:53.227
like stood empty of an A container.

NOTE Confidence: 0.739999325

897d03da-cb64-442e-8429-dccd68d5f496
00:39:55.450 --> 00:39:57.196
Oh, oh, yeah, because we have.

NOTE Confidence: 0.739999325

8bb9d85b-9215-4f37-bbd2-e7e83863b71b
00:39:57.200 --> 00:39:58.072
Uh, yeah, you're right.

NOTE Confidence: 0.739999325

162f651b-0b5e-4bfb-9a71-9aa3630eea9a
00:39:58.072 --> 00:40:00.780
Yeah, like, like size and um.

NOTE Confidence: 0.739999325

efe54a67-e047-47e5-9b7a-ae4ff26ab6cb
00:40:00.780 --> 00:40:01.869
Empty Memphis, run.

NOTE Confidence: 0.739999325

6555ca50-4764-4fc9-93a0-102be3145ee9
00:40:01.869 --> 00:40:03.816
Ohh, empty function. Ah yes.

NOTE Confidence: 0.739999325

6091870f-2bdc-4635-9628-aa7519a6da1c
00:40:03.816 --> 00:40:06.243
Good catch. Yep, there it is.

NOTE Confidence: 0.739999325

b19894ed-9cf1-4091-8f3b-38f4666b2fde
00:40:06.243 --> 00:40:08.443
Yeah, non member. OK, so yeah,

NOTE Confidence: 0.739999325

0fc2a297-d58e-492a-bb8d-3cc54d7f6f7b
00:40:08.443 --> 00:40:10.510
it's reasonable to have one for try

NOTE Confidence: 0.739999325

dc647f9e-51ce-4474-beaf-357a9e439132
00:40:10.510 --> 00:40:11.830
change state and try change state.

NOTE Confidence: 0.739999325

572cef38-0352-43e5-8054-b6621c4db48d
00:40:11.830 --> 00:40:15.198
Fun. Ah. It would be nice if the

NOTE Confidence: 0.739999325

99c4b9c7-bf68-479d-a33f-03b66d3e4b46
00:40:15.198 --> 00:40:18.149
things were standardized so that,

NOTE Confidence: 0.739999325

45e8cebe-40f5-4d0b-b0d5-0971e690dd5a
00:40:18.150 --> 00:40:19.406
like the member function

NOTE Confidence: 0.739999325

1f4ea7ae-5fbd-4d76-b1eb-9cadcc6930a5
00:40:19.406 --> 00:40:20.976
one is always under score,

NOTE Confidence: 0.739999325

b4d2bef3-f691-49c8-8669-943f3a869819
00:40:20.980 --> 00:40:23.550
members under score. Yeah yeah,

NOTE Confidence: 0.739999325

b6837ce4-d79b-489a-a576-12998787b020
00:40:23.550 --> 00:40:27.030
the function one is always under score from.

NOTE Confidence: 0.739999325

93ea35dc-aa16-4292-8f9d-4bedc2778712
00:40:27.030 --> 00:40:28.824
Yeah, at least in the case

NOTE Confidence: 0.739999325

52e7eefe-520a-442e-9095-3abbe7b84747
00:40:28.824 --> 00:40:30.020
where we have both.

NOTE Confidence: 0.8445988275

2fe595be-64df-4294-87fa-ac2a31c721dd
00:40:32.340 --> 00:40:34.848
And this this one actually spells

NOTE Confidence: 0.8445988275

eb96f91c-0e00-4fb6-a7fb-47f43abb6761
00:40:34.848 --> 00:40:36.590
out function. Empty function,

NOTE Confidence: 0.8445988275

ae3f8448-d2ec-4f6d-8d0f-6ed57315eb9a
00:40:36.590 --> 00:40:39.740
empty memphian. I suppose when we I,

NOTE Confidence: 0.8445988275

552b3743-3322-4de2-a825-7cf1e670baf3
00:40:39.740 --> 00:40:41.870
I like having the different spelling

NOTE Confidence: 0.8445988275

69295a0f-8d40-406f-a8bd-e209151c79ff
00:40:41.870 --> 00:40:44.098
function because that way one is not a,

NOTE Confidence: 0.8445988275

a8d23f01-be6a-4448-937d-85a2d1ec8662
00:40:44.100 --> 00:40:46.879
um, like strict substring of the other.

NOTE Confidence: 0.8445988275

0b041d7d-2e6d-4c8a-90fa-e043744d08c6
00:40:46.880 --> 00:40:49.118
But I agree that it should

NOTE Confidence: 0.8445988275

3b321078-a1ca-45a6-a22f-61115fd94b17
00:40:49.118 --> 00:40:50.237
be consistently done.

NOTE Confidence: 0.8445988275

ad30842c-e73a-414a-bff8-ee20341915b3
00:40:50.240 --> 00:40:53.610
That's worth a comment. OK, so.

NOTE Confidence: 0.8445988275

56412117-73a4-431e-8ee6-9d4f7450311b
00:40:53.610 --> 00:40:58.326
That I have a concern with calling it

NOTE Confidence: 0.8445988275

55db0539-a3d3-4ae7-b53b-d716bbb3eaf0
00:40:58.326 --> 00:41:01.794
function just because that sounds like.

NOTE Confidence: 0.8445988275

56c4ca43-bb93-4e76-aa15-5cb333b5cdb9
00:41:01.800 --> 00:41:02.936
A very common thing,

NOTE Confidence: 0.8445988275

56855c21-0792-4ef0-83e0-46d41515699c
00:41:02.936 --> 00:41:05.420
and I think that function has an empty

NOTE Confidence: 0.8445988275

dad149a4-ba50-429d-919d-2f53f2481cf0
00:41:05.420 --> 00:41:07.210
Member variable or member function.

NOTE Confidence: 0.682837905714286

c3cbf01e-0d1d-4306-97bb-f67663051d3c
00:41:09.320 --> 00:41:10.608
Ohh stood, function understood.

NOTE Confidence: 0.682837905714286

dc8f857a-13c4-4e83-9969-a8293600cac9
00:41:10.608 --> 00:41:11.574
Function does not.

NOTE Confidence: 0.682837905714286

7ee7c914-95e5-441a-b5e1-60087f15ee27
00:41:11.580 --> 00:41:13.715
It has just an operator

NOTE Confidence: 0.682837905714286

c71df786-f621-40fe-a4b9-b0151296b995
00:41:13.715 --> 00:41:14.996
explicit operator bool.

NOTE Confidence: 0.682837905714286

5c3a8ae6-5b18-4046-be43-482c772b5344
00:41:15.000 --> 00:41:16.365
You're right that it is a very

NOTE Confidence: 0.682837905714286

f4f3adfc-9e7c-4538-bbb2-46cfa69590bf
00:41:16.365 --> 00:41:19.650
common word, unfortunately.

NOTE Confidence: 0.682837905714286

bd4bd91e-643f-4a5b-bf62-0f19f500bf79
00:41:19.650 --> 00:41:20.870
Standard doesn't quite say

NOTE Confidence: 0.682837905714286

719845f9-5512-4b54-af2b-17ab2f780267
00:41:20.870 --> 00:41:21.785
free function anywhere.

NOTE Confidence: 0.682837905714286

7fdfc328-8562-408f-a077-593a0ee52f01
00:41:21.790 --> 00:41:23.458
It just says non member but

NOTE Confidence: 0.682837905714286

5e788c44-341a-4154-9f08-3266eaeaa5fd
00:41:23.458 --> 00:41:25.230
non member phone or something.

NOTE Confidence: 0.682837905714286

9d3ec19c-74e6-4701-b15c-5b40d9edeb35
00:41:25.230 --> 00:41:27.798
Seems very verbose.

NOTE Confidence: 0.825656178

a1e96605-c2d1-474b-985b-6b0f1f394632
00:41:29.980 --> 00:41:31.760
Let's see. Any any ideas?

NOTE Confidence: 0.541526587222222

26b2b412-330a-4481-b9f3-5e3eb1dd7719
00:41:36.450 --> 00:41:39.435
There's, um, let's see the

NOTE Confidence: 0.541526587222222

c2524707-5523-42b2-889c-5c069e3cebc3
00:41:39.435 --> 00:41:41.823
memphian without a thing,

NOTE Confidence: 0.541526587222222

3da3f2af-bb71-4340-b361-6abd3de33bf8
00:41:41.830 --> 00:41:46.429
and then just so you could search for like.

NOTE Confidence: 0.541526587222222

e5423f8f-abec-4f1b-9894-b41ef034ef3e
00:41:46.430 --> 00:41:50.784
FN with a under score before it.

NOTE Confidence: 0.541526587222222

87d29600-59e9-4eb1-ba58-7b30af8d2bd5
00:41:50.790 --> 00:41:51.812
Versus memphian.

NOTE Confidence: 0.541526587222222

1d78b3e1-409d-46db-867f-21f31db6cc83
00:41:51.812 --> 00:41:55.036
We we could do that, I'm thinking.

NOTE Confidence: 0.541526587222222

e66f5c6c-1fff-4673-9f91-92021ee570ea
00:41:55.036 --> 00:41:57.034
Where is the calling convention thing?

NOTE Confidence: 0.541526587222222

23f4a009-d8f6-4eb1-a0c1-4fe6a499b955
00:41:57.040 --> 00:42:00.820
Um. It's a non member.

NOTE Confidence: 0.5866997

217539a5-dbbf-4f3d-a41f-7ac3d85901a7
00:42:03.720 --> 00:42:07.238
Every case. Uh, OK, let's search

NOTE Confidence: 0.5866997

150af21f-863d-4c62-a46a-c799036824eb
00:42:07.238 --> 00:42:09.110
for all occurrences of third call.

NOTE Confidence: 0.5866997

f987998c-438c-42af-84cb-51ae7ba92c69
00:42:09.110 --> 00:42:12.099
No, that's gonna be horrible fast call.

NOTE Confidence: 0.5866997

722e44ee-c34a-4335-814e-b7078c4963bf
00:42:12.100 --> 00:42:13.964
There we go. That's the next to DEF.

NOTE Confidence: 0.5866997

e4758a0f-d305-447b-966c-f49a83b4ea9e
00:42:13.970 --> 00:42:15.770
Why did I miss it? Ohh, it's a MIT.

NOTE Confidence: 0.820006421666667

6cda4f3a-1646-4c1a-9671-3a247d47403a
00:42:18.120 --> 00:42:19.476
Ah, OK, so we have it.

NOTE Confidence: 0.820006421666667

25d2b6ae-a689-4dde-89f2-59579c53fac9
00:42:19.480 --> 00:42:22.456
Non member call for these horrible

NOTE Confidence: 0.820006421666667

675b847b-510b-4456-b208-5562714990b9
00:42:22.456 --> 00:42:24.970
macros and then member call.

NOTE Confidence: 0.820006421666667

93300e0f-ad41-47ff-aded-3ce486755031
00:42:24.970 --> 00:42:26.362
So that's the precedent

NOTE Confidence: 0.820006421666667

cb053de6-26b4-4658-a779-121286c54bc0
00:42:26.362 --> 00:42:28.102
where we have to distinguish

NOTE Confidence: 0.820006421666667

0054db19-cae6-413a-897d-bed0e2a15e1c
00:42:28.102 --> 00:42:29.609
members versus non members.

NOTE Confidence: 0.820006421666667

10c99b42-624d-4b51-ac11-7a04db6b125d
00:42:29.610 --> 00:42:31.060
We spell out member and

NOTE Confidence: 0.820006421666667

bcd30612-d5c1-4037-80ef-54688883504e
00:42:31.060 --> 00:42:32.510
then we say non member.

NOTE Confidence: 0.857439985454545

d529b286-0278-4f57-8cb8-527195d177ef
00:42:35.210 --> 00:42:36.134
So for these macros,

NOTE Confidence: 0.857439985454545

c88a5be3-c1d4-4853-8da4-e242de87c956
00:42:36.134 --> 00:42:37.960
let me go back to the review.

NOTE Confidence: 0.857439985454545

bedc699d-4baf-4f47-85bb-81363716edcb
00:42:37.960 --> 00:42:39.180
If we followed that convention,

NOTE Confidence: 0.857439985454545

9f557696-3df0-4dcb-a237-0b36f8a2e16b
00:42:39.180 --> 00:42:40.285
which I'm not necessarily saying

NOTE Confidence: 0.857439985454545

022b0929-99c9-4b15-a153-4503c867f138
00:42:40.285 --> 00:42:41.390
is a great convention because

NOTE Confidence: 0.857439985454545

3b5fc084-3c1e-4c1b-87ca-aa3bcd8b9bd0
00:42:41.431 --> 00:42:42.359
those macros are horrible,

NOTE Confidence: 0.857439985454545

3623b582-dea0-49e2-9e96-340054f85be3
00:42:42.360 --> 00:42:45.559
it would be something like empty non

NOTE Confidence: 0.857439985454545

2d013a05-45da-45ee-b719-0f6f162e6d77
00:42:45.559 --> 00:42:48.450
member versus empty Member. Adapter.

NOTE Confidence: 0.86065647

2042fbea-582b-48bd-b7c1-70ecc5802c7c
00:42:50.610 --> 00:42:52.988
Member is more common here, but non

NOTE Confidence: 0.86065647

bfb04889-f8a8-46c3-a868-e7d13035f900
00:42:52.988 --> 00:42:55.396
member is more common elsewhere like well.

NOTE Confidence: 0.783211287533334

72beddcd-9cf5-4590-894b-1c5c35a8bde6
00:42:57.560 --> 00:42:59.232
Now actually I would say all of the

NOTE Confidence: 0.783211287533334

8d0f3f20-efdb-4882-9422-f0af07623c45
00:42:59.232 --> 00:43:00.836
cases where we have both the Member

NOTE Confidence: 0.783211287533334

637ead2f-1db1-415c-b7f0-4d5b15135400
00:43:00.836 --> 00:43:02.447
ones more common because we have a

NOTE Confidence: 0.783211287533334

fe5f2989-d608-4643-b972-6df370a2fe5a
00:43:02.447 --> 00:43:03.731
lot of member functions than just

NOTE Confidence: 0.783211287533334

3cdd3cd5-9768-40dc-87f3-0c49b44a5a14
00:43:03.731 --> 00:43:05.380
one non Member function to mention.

NOTE Confidence: 0.870667346111111

4024357d-6c2a-4c5e-bc4a-ec8740798cc2
00:43:07.410 --> 00:43:08.915
So how do you feel about like

NOTE Confidence: 0.870667346111111

ae86360f-7441-4bde-8072-d41d43f15cae
00:43:08.915 --> 00:43:10.107
non member versus member and

NOTE Confidence: 0.870667346111111

43d1b664-c5d0-420f-811a-62b028d1882c
00:43:10.107 --> 00:43:11.583
just not saying function at all?

NOTE Confidence: 0.70951484

b94b2a50-0e98-43d6-baa8-e7d31dba9e82
00:43:15.880 --> 00:43:17.284
It's incredible to me,

NOTE Confidence: 0.70951484

7dd59929-3aab-4fde-a261-479299751b47
00:43:17.284 --> 00:43:18.337
especially because no,

NOTE Confidence: 0.70951484

e73a38ef-4b9e-4e8c-9158-423e9c0956b4
00:43:18.340 --> 00:43:20.916
discard is not getting applied to like.

NOTE Confidence: 0.70951484

d7262d45-06f0-49d3-810e-9f2d70a55c7d
00:43:20.920 --> 00:43:24.067
Remember data or whatever. Right.

NOTE Confidence: 0.70951484

f8b6370c-c23a-43b0-98e9-273d06ad6c5a
00:43:24.067 --> 00:43:27.109
OK, I'll add a comment there.

NOTE Confidence: 0.70951484

43ea7dbb-d209-49aa-89b3-e39e446c6355
00:43:27.110 --> 00:43:29.300
Let's see where to mention it.

NOTE Confidence: 0.70951484

96e2e4e3-7a32-46ea-8a88-19faa54a73fb
00:43:29.300 --> 00:43:30.299
Yeah, seems reasonable.

NOTE Confidence: 0.70951484

848deb4c-7f5b-48c8-9f7b-ed316d9070c5
00:43:30.299 --> 00:43:31.964
Maybe on the 1st occurrence.

NOTE Confidence: 0.70951484

34507ff1-3198-4839-b48e-e0c33af05f1f
00:43:31.970 --> 00:43:33.390
So move out unique out,

NOTE Confidence: 0.70951484

05238d7c-babb-417b-8b1f-4d79aa5514d6
00:43:33.390 --> 00:43:34.260
empty meme fun.

NOTE Confidence: 0.77266186

1bbbd377-92f3-4efc-90dc-706b326998b8
00:43:37.020 --> 00:43:40.430
Let's see. We should, uh,

NOTE Confidence: 0.77266186

7fbbcf74-1413-4f29-ba4b-e43fae72f9a4
00:43:40.430 --> 00:43:47.950
consistently mark these. See?

NOTE Confidence: 0.77266186

dfdd58ea-0374-43e3-bb56-cdc4fec1c89d
00:43:47.950 --> 00:43:54.646
When there are both member and non member.

NOTE Confidence: 0.77266186

8f65f860-5551-4847-8c28-997ed6ad3968
00:43:54.650 --> 00:43:57.702
Versions of these macros,

NOTE Confidence: 0.77266186

733792ae-f126-4774-9146-d287bae211c9
00:43:57.702 --> 00:44:02.280
we should have a consistent naming

NOTE Confidence: 0.77266186

c63b1ff2-42f0-4459-8ebe-553a05d38423
00:44:02.414 --> 00:44:06.820
convention for them. Currently.

NOTE Confidence: 0.77266186

8fb274cd-b97b-47a6-ad17-8f0e2fab9f6a
00:44:06.820 --> 00:44:12.850
There's. Ah, some variation.

NOTE Confidence: 0.77266186

d99f7b06-a0ac-4231-94d8-86297ab8225b
00:44:12.850 --> 00:44:15.370
Example variation is.

NOTE Confidence: 0.77266186

9b9cf684-8bfb-49ec-b86a-d6ea75e7ff03
00:44:15.370 --> 00:44:20.480
Notice scarred empty function. Is the.

NOTE Confidence: 0.674538325

db4845a0-f8b5-4150-adb7-b75467dd5af8
00:44:23.050 --> 00:44:25.846
Versus I'll just get that plane

NOTE Confidence: 0.674538325

24a20952-99e1-4216-8487-069cc75dae50
00:44:25.850 --> 00:44:29.210
member versus non member.

NOTE Confidence: 0.674538325

24c3ae76-b6fc-40f6-80c3-0648178b22d5
00:44:29.210 --> 00:44:33.362
But and then the other one was trying

NOTE Confidence: 0.674538325

58975352-808d-426b-b87d-b5353b391fb7
00:44:33.362 --> 00:44:37.040
to change state versus fun. Yeah.

NOTE Confidence: 0.76124907

7a1f1b63-f5c6-4c9e-bbfd-2db1939b1b4c
00:44:41.100 --> 00:44:42.114
I want to think thoughts that

NOTE Confidence: 0.76124907

d3c0bb2c-6e19-4ae1-965d-3e1feb582cf9
00:44:42.114 --> 00:44:43.030
are bigger than three lines.

NOTE Confidence: 0.86164365

b4a6aafb-134b-498f-abb4-42f6cb2d89ae
00:44:45.400 --> 00:44:47.180
Compared to.

NOTE Confidence: 0.77864995

3cbf10ea-5e14-4c93-a2a9-a7bd237f3dba
00:44:50.010 --> 00:44:52.270
Try change state fund.

NOTE Confidence: 0.77864995

c2ea5794-0923-4034-b66f-6e1ea51e8495
00:44:52.270 --> 00:44:55.095
This is the non member.

NOTE Confidence: 0.56553155

68057c53-1ee0-4a30-b466-22d897e85b07
00:44:58.510 --> 00:45:02.930
Versus. Change state.

NOTE Confidence: 0.88780856

8ff040f7-d489-4739-b379-2dbe4064d080
00:45:06.840 --> 00:45:11.110
OK. Let's see if I can quote.

NOTE Confidence: 0.88780856

86fc7c41-f13c-4ac0-b8eb-127165dbef29
00:45:11.110 --> 00:45:12.772
Let's say I didn't open it

NOTE Confidence: 0.88780856

f7ea0b68-7b51-4232-97b0-62b288356932
00:45:12.772 --> 00:45:14.690
locally or open it in the repo.

NOTE Confidence: 0.88780856

7b0cf525-be16-4c6e-9e10-ecb3fa00066d
00:45:14.690 --> 00:45:17.119
Let me close some of this stuff.

NOTE Confidence: 0.88780856

790e75b6-6b51-4644-9cb4-2169f95a60ed
00:45:17.120 --> 00:45:20.948
OK, what's that? OK, let's open U,

NOTE Confidence: 0.88780856

5c2f2a30-8ffe-44ba-ac37-8c607ed27413
00:45:20.948 --> 00:45:22.550
the dreaded header extra def where

NOTE Confidence: 0.88780856

c096b3ee-e4d9-401b-b73d-c9a813e6c332
00:45:22.608 --> 00:45:24.408
mortals fear to tread because

NOTE Confidence: 0.88780856

8c05f1b1-f468-4ad4-90c5-7adcbdef49ae
00:45:24.408 --> 00:45:25.848
calling conventions are horrible.

NOTE Confidence: 0.609122355

0d61f275-3371-4e34-8105-15b171fa254c
00:45:29.090 --> 00:45:30.910
Let's see. Best call.

NOTE Confidence: 0.75863008

473be340-bdaf-4a93-b795-77b3cf038bd6
00:45:35.720 --> 00:45:38.205
Smallest thing that I can quote here.

NOTE Confidence: 0.741782825714286

9d7f7b02-2601-44e3-addc-2e1dbfdfd1fb
00:45:41.190 --> 00:45:42.942
I guess I could quote individual

NOTE Confidence: 0.741782825714286

eb9b27d3-8db1-49a7-a170-7921318905c6
00:45:42.942 --> 00:45:46.749
lines, I suppose. The number call.

NOTE Confidence: 0.6349127175

c19c5769-872a-4ccd-b219-973686f9c9e3
00:45:50.750 --> 00:45:52.370
Versus the member column.

NOTE Confidence: 0.70053984

b553a556-fd2f-45d5-a0d2-c8e153d50f82
00:45:58.110 --> 00:46:04.050
You're saying. Member versus non. Member.

NOTE Confidence: 0.615963875

1350d022-147a-4cd9-88fb-05b32eada959
00:46:06.160 --> 00:46:09.520
Would be reasonable. Umm.

NOTE Confidence: 0.6740438

620f95d9-43ae-456c-86cb-109ebf3dd84d
00:46:12.330 --> 00:46:20.290
Also avoiding um. Possible confusion with.

NOTE Confidence: 0.6740438

f9540086-6183-4f03-8659-cf9a5ec25d0f
00:46:20.290 --> 00:46:25.279
State function. As Nicole mentioned.

NOTE Confidence: 0.50448877

9cf6621a-1c03-4e67-9bea-6f95ee971c0b
00:46:31.850 --> 00:46:32.350
1.

NOTE Confidence: 0.36178836

2555858d-7744-4a5b-b42a-8537126b56a7
00:46:41.820 --> 00:46:46.700
President. OK, let's see how this looks.

NOTE Confidence: 0.36178836

c9dbffaa-bf51-4c4e-8851-ba1dfa5b03f5
00:46:46.700 --> 00:46:48.548
When there are both member and non

NOTE Confidence: 0.36178836

b6ac2564-2ec8-47e8-b077-9823cf57786d
00:46:48.548 --> 00:46:50.040
member versions of these macros,

NOTE Confidence: 0.36178836

e2b7bcee-c063-4c08-bc21-0b308c3dba2a
00:46:50.040 --> 00:46:51.240
we should have a consistent

NOTE Confidence: 0.36178836

db1705bc-7e23-4a8c-b0d4-160780a681e5
00:46:51.240 --> 00:46:52.200
naming convention for them.

NOTE Confidence: 0.36178836

16168bf7-18eb-4c87-96ff-d3c15ce42d63
00:46:52.200 --> 00:46:54.240
Currently there's some variation no

NOTE Confidence: 0.36178836

c209cdb9-9476-4a21-9c2c-adf926db4e8d
00:46:54.240 --> 00:46:56.280
discard empty function versus notice

NOTE Confidence: 0.36178836

27c940ce-e08d-4e9d-8454-8800ad467a97
00:46:56.337 --> 00:46:58.437
card empty mem fun compared to notice

NOTE Confidence: 0.36178836

7478bb56-fc70-48bd-891d-4855f47be89f
00:46:58.437 --> 00:47:00.396
card try change state fun versus

NOTE Confidence: 0.36178836

9a7aee6b-c23a-4483-89b5-62c76f7be905
00:47:00.396 --> 00:47:02.394
notice card try change state member.

NOTE Confidence: 0.36178836

4408e8d7-7b79-4b36-99cb-e19ac686a3c9
00:47:02.400 --> 00:47:04.325
Using capital member versus non

NOTE Confidence: 0.36178836

eec89d19-9397-4a06-ade2-a1a605b7497b
00:47:04.325 --> 00:47:06.250
capital member would be reasonable.

NOTE Confidence: 0.36178836

493c48f7-8b8a-44e6-9c0a-6c35e753a29b
00:47:06.250 --> 00:47:07.694
Also avoiding possible confusion

NOTE Confidence: 0.36178836

c0a3f7da-9ed3-40b3-bde3-fcf658094863
00:47:07.694 --> 00:47:09.499
with stood function as Nicole

NOTE Confidence: 0.36178836

825ad265-10d9-44eb-ae48-da8dd2e3fafe
00:47:09.499 --> 00:47:11.514
observed and withstood memphian as I

NOTE Confidence: 0.36178836

b55b5c4f-4621-4375-972b-12ebabd6e6ab
00:47:11.514 --> 00:47:13.114
briefly thought and consistent with

NOTE Confidence: 0.36178836

4e39fc2e-43af-4a3b-be50-f54b77cf4223
00:47:13.170 --> 00:47:14.900
precedent here quoting non member.

NOTE Confidence: 0.36178836

5aac4709-b701-4b6f-a164-887ff55c498f
00:47:14.900 --> 00:47:17.480
Call and member call. OK.

NOTE Confidence: 0.769158814

22e639bb-df63-45be-9ff1-e825e52df18e
00:47:19.860 --> 00:47:22.446
Right. OK, so I was at

NOTE Confidence: 0.769158814

2bf66d32-5779-4df5-83ca-f1bff5b19f92
00:47:22.446 --> 00:47:24.170
trying to change state.

NOTE Confidence: 0.769158814

ceba30f1-3428-4a5c-a9c2-af3a291931c1
00:47:24.170 --> 00:47:28.790
It might be also useful if you go back.

NOTE Confidence: 0.769158814

48c57de2-0551-424e-9de1-76fc101919c6
00:47:28.790 --> 00:47:33.190
Um. Personally I would appreciate if

NOTE Confidence: 0.769158814

c4d6e3d7-faa6-4353-9ee5-748d8c902452
00:47:33.190 --> 00:47:37.694
we had empty array member as opposed

NOTE Confidence: 0.769158814

d16f9390-c6d2-4ec1-964c-d35570ecf880
00:47:37.694 --> 00:47:42.120
to empty member array. I think.

NOTE Confidence: 0.769158814

a31a3bc0-b921-468e-8b9c-1b80ec5adbac
00:47:42.120 --> 00:47:44.680
I agree that is quite reasonable. Um.

NOTE Confidence: 0.777737411875

b867ba40-9885-4cc3-9931-50a675ede212
00:47:47.850 --> 00:47:49.700
Trying to think all possible

NOTE Confidence: 0.777737411875

7347616e-7250-4e97-ab00-e17036026adb
00:47:49.700 --> 00:47:52.014
permutations for reminding me of the

NOTE Confidence: 0.777737411875

2560c2e2-4681-426a-b4c5-102e693177f5
00:47:52.014 --> 00:47:53.989
recent XKCD comic about tetherballs

NOTE Confidence: 0.777737411875

e42f84d1-326a-4525-a6cd-c99d4768d899
00:47:53.990 --> 00:47:55.920
rope versus pole versus ball.

NOTE Confidence: 0.777737411875

6412c80c-a0ab-40d7-8afa-094dabe21bcf
00:47:55.920 --> 00:48:01.239
Which orders are most fun in this case?

NOTE Confidence: 0.777737411875

25e2721e-3079-4cb5-a832-18caca16ad9e
00:48:01.240 --> 00:48:03.312
Discard array member empty.

NOTE Confidence: 0.777737411875

23af5adc-11ce-4414-9ba3-b72a067c1293
00:48:03.312 --> 00:48:06.420
Because you could say the class

NOTE Confidence: 0.777737411875

15758247-58a5-4363-bc8f-838c76a83b03
00:48:06.517 --> 00:48:08.476
name kind of like, you know,

NOTE Confidence: 0.777737411875

a32513cb-5a00-491c-a665-9a5603bac536
00:48:08.476 --> 00:48:12.720
array, double quote, empty. Um.

NOTE Confidence: 0.777737411875

c257de3e-0362-447d-b29c-4b3297962f99
00:48:12.720 --> 00:48:16.199
So you suggested what empty array member?

NOTE Confidence: 0.777737411875

d5cd481e-0e35-410d-9123-1c26173ed528
00:48:16.200 --> 00:48:18.384
I agree that putting Member remember

NOTE Confidence: 0.777737411875

d60e7af3-f70d-4f27-9aa5-eb9c84fa88e7
00:48:18.384 --> 00:48:20.260
sounds better than member array.

NOTE Confidence: 0.777737411875

fb005eff-5267-4a41-b390-c7d4b2f6885e
00:48:20.260 --> 00:48:22.200
Yeah, that's what I suggested.

NOTE Confidence: 0.777737411875

80e19cf5-155d-43ef-bc6c-441110ad959c
00:48:22.200 --> 00:48:24.870
So there's empty array member.

NOTE Confidence: 0.777737411875

58139de9-5f80-4792-b197-13094ebd7861
00:48:24.870 --> 00:48:26.338
Or array member empty.

NOTE Confidence: 0.742945517692308

ea3ec375-965d-413b-9860-e0dcf09d44c6
00:48:31.170 --> 00:48:32.706
Beginning with the prefix notice guard

NOTE Confidence: 0.742945517692308

75bcef57-4a7d-4e25-89e3-960ea4112ae1
00:48:32.706 --> 00:48:34.558
empty even though it doesn't quite follow

NOTE Confidence: 0.742945517692308

ab227c5f-b2e0-469d-b373-795541140d65
00:48:34.558 --> 00:48:36.378
the order of like declaration where you

NOTE Confidence: 0.742945517692308

ebfd2159-7a10-4187-9380-6b9334615eeb
00:48:36.429 --> 00:48:37.947
would say array double colon empty.

NOTE Confidence: 0.742945517692308

380298e3-15fa-421f-8364-d8d2f683721f
00:48:37.950 --> 00:48:40.750
This keeps all the empty they sort together.

NOTE Confidence: 0.742945517692308

f7f87339-ad3a-43a1-9991-59dff7e5de3d
00:48:40.750 --> 00:48:45.960
Yeah, I think that is good, yeah OK.

NOTE Confidence: 0.742945517692308

ac8d7a0b-a601-46ec-8e49-f7c0b7a8150f
00:48:45.960 --> 00:48:49.176
Let's see, I'll add that here.

NOTE Confidence: 0.742945517692308

bc75fd67-95ca-42d6-89a7-b6c181e90051
00:48:49.180 --> 00:48:50.806
Cause it's really just the naming.

NOTE Confidence: 0.545251246

c10497ab-54ca-418e-9e10-1266b619adec
00:48:53.290 --> 00:48:55.620
Can you again? Yeah, that.

NOTE Confidence: 0.818270673333333

00ed57e1-bfc1-4942-be89-c69a7bbda01f
00:48:58.760 --> 00:49:03.578
Additionally recommends and I agree that.

NOTE Confidence: 0.818270673333333

da3a380c-ad9e-404b-b787-eb9a445535f7
00:49:03.580 --> 00:49:09.772
OK, so. no disk cart empty.

NOTE Confidence: 0.818270673333333

8bb3e525-eb3b-46a3-8514-d182409d6fa8
00:49:09.772 --> 00:49:18.720
And then Murray. Member. Would um.

NOTE Confidence: 0.818270673333333

2738a904-5f96-4a21-b1ef-3814ba8b0c57
00:49:18.720 --> 00:49:25.708
The. Easier to read. Man. No.

NOTE Confidence: 0.818270673333333

e1bbfcb5-09ee-498e-9cf4-dcf052eb48d1
00:49:25.708 --> 00:49:29.900
Discard. Empty. Member array.

NOTE Confidence: 0.828140208333333

5f82dd15-33ee-47fa-adb1-6816e893bcd9
00:49:34.670 --> 00:49:39.668
While still having all of the.

NOTE Confidence: 0.828140208333333

eb88ec0d-7ab6-480e-8fc1-a6f2a66bf0eb
00:49:39.670 --> 00:49:42.858
Empty macro sorts together

NOTE Confidence: 0.828140208333333

8459de6d-82d0-45ff-b9de-5c6dd9787799
00:49:42.858 --> 00:49:46.046
because we love sorting.

NOTE Confidence: 0.828140208333333

2d3831f5-8fdf-403a-a404-0354b68f7b1c
00:49:46.050 --> 00:49:49.296
OK, let's see why is this,

NOTE Confidence: 0.828140208333333

fdd3b24d-ccea-4e1f-b39b-0749b69a4bd2
00:49:49.300 --> 00:49:50.479
like almost truncated.

NOTE Confidence: 0.828140208333333

5dc73b5c-bdbd-4f4a-b8b2-6f82a6808221
00:49:50.479 --> 00:49:52.051
Here Nicole additionally recommends

NOTE Confidence: 0.828140208333333

de42b6fd-6542-4237-8ffd-f414345987d5
00:49:52.051 --> 00:49:54.519
and I agree that notice guard empty

NOTE Confidence: 0.828140208333333

c12f3469-3a16-4cc0-9606-83fddeb86b6d
00:49:54.519 --> 00:49:56.768
Array member would be easier to read

NOTE Confidence: 0.828140208333333

2f108ef8-d5f4-4411-9b00-f12477697b0a
00:49:56.768 --> 00:49:58.784
than notice guard empty member array.

NOTE Confidence: 0.828140208333333

bb2a4ec6-badd-4227-be0c-f4b8a4be7e62
00:49:58.790 --> 00:50:00.158
While still having all of the

NOTE Confidence: 0.828140208333333

ba519869-3cc8-415a-b518-df31ff11fbc2
00:50:00.158 --> 00:50:01.070
empty macros stored together.

NOTE Confidence: 0.642945035714286

79391600-cb2f-4605-8e6b-7606d3b32516
00:50:05.750 --> 00:50:08.000
OK, try change state. Try change state. Fun.

NOTE Confidence: 0.613119108333334

843c7fcb-2b9f-407c-82df-39d7ae90920d
00:50:10.070 --> 00:50:12.566
No discard. Put her Alec fun

NOTE Confidence: 0.613119108333334

ce6cb3a6-d763-42b3-88ca-14dc88bfd999
00:50:12.570 --> 00:50:13.869
this function construction

NOTE Confidence: 0.613119108333334

8a93f46e-bc3e-4ddf-9b8a-5afae632025c
00:50:13.869 --> 00:50:16.034
object wrapped by a pointer.

NOTE Confidence: 0.613119108333334

49813720-7e1a-4841-b6e0-fd2dee5a779c
00:50:16.040 --> 00:50:19.472
Versus. A raw pointer?

NOTE Confidence: 0.613119108333334

5b9bc69c-4a61-4753-bd4a-c00f012d5f6d
00:50:19.472 --> 00:50:21.460
What is the difference between these two?

NOTE Confidence: 0.613119108333334

6a13814a-82a8-41ae-b9cd-4023e49c7048
00:50:21.460 --> 00:50:25.636
What are Alec? And put a raw Alec.

NOTE Confidence: 0.613119108333334

0f31a09a-cb18-49d4-a01e-5080921e79ba
00:50:25.640 --> 00:50:29.196
Oh, raw, raw Alec does not construct.

NOTE Confidence: 0.613119108333334

0374e29c-5e60-434a-a662-ab39c4f6ce58
00:50:29.200 --> 00:50:32.890
And Alec constructs.

NOTE Confidence: 0.613119108333334

11530d29-cea3-46bb-beca-7f242f78914c
00:50:32.890 --> 00:50:35.270
Or Alec returns like a smart pointer.

NOTE Confidence: 0.613119108333334

971f6e86-c392-452a-8f54-b1a3b8d4388d
00:50:35.270 --> 00:50:36.608
I'm curious about the difference here.

NOTE Confidence: 0.528421256

a68f13e7-996e-4227-beb4-08affce5697e
00:50:40.260 --> 00:50:42.470
Use this make exception putter.

NOTE Confidence: 0.528421256

1b674780-c3e3-4573-8565-181aee0ebb83
00:50:42.470 --> 00:50:43.820
So this is resource manager.

NOTE Confidence: 0.528421256

7bd2d2b6-f696-450d-abc9-641fc7eb787c
00:50:43.820 --> 00:50:44.936
It's not gonna leak,

NOTE Confidence: 0.528421256

e05ca122-a6d7-40d6-a075-f7e5461713f2
00:50:44.936 --> 00:50:46.928
but it makes no sense to call

NOTE Confidence: 0.528421256

31b10bc9-6336-496e-8e50-42420833907c
00:50:46.928 --> 00:50:48.713
it and drop it on the floor.

NOTE Confidence: 0.528421256

e6239b56-fe4d-4940-971e-1841f464e062
00:50:48.720 --> 00:50:51.129
Um make shared?

NOTE Confidence: 0.840082614

16a28f70-1d94-4a9f-909c-7ea347a74c66
00:50:54.460 --> 00:50:55.760
It seems reasonable to have

NOTE Confidence: 0.840082614

093b873a-f77e-45a6-aace-c9736f07f0ec
00:50:55.760 --> 00:50:57.060
a dedicated one for this.

NOTE Confidence: 0.840082614

5e7aaf10-2596-4167-8553-166690c2bb93
00:50:57.060 --> 00:50:59.118
Um, in theory the the construction

NOTE Confidence: 0.840082614

cb9146db-d160-411a-98f4-83d60ad37aa6
00:50:59.118 --> 00:51:01.317
of the object would could have

NOTE Confidence: 0.840082614

eedf3994-dd66-460d-b680-add63e2caddf
00:51:01.317 --> 00:51:03.852
side effects, but then why are

NOTE Confidence: 0.840082614

d9799c53-3c58-4695-ad5d-39cdc35313d2
00:51:03.852 --> 00:51:05.624
you dynamically allocating it?

NOTE Confidence: 0.840082614

c0e94d54-5903-451b-8590-da345d6a6a6e
00:51:05.630 --> 00:51:06.250
That's interesting.

NOTE Confidence: 0.840082614

554e9d90-ca1b-4df2-892a-2248485e7db0
00:51:06.250 --> 00:51:08.420
Cameron reports in the the chat that

NOTE Confidence: 0.840082614

3c377496-d582-4625-93d5-0966b5aa1660
00:51:08.420 --> 00:51:10.201
he's just fixed the computer bug

NOTE Confidence: 0.840082614

2f152568-3727-4a71-80f5-78ba56a0ec93
00:51:10.201 --> 00:51:11.830
preventing notice card in CS 20.

NOTE Confidence: 0.840082614

5d06db18-131e-4b02-a2ca-72ffed063396
00:51:11.830 --> 00:51:15.748
Thank you Cameron, that was awesome.

NOTE Confidence: 0.840082614

4b2aad77-9105-41ca-a337-f0a145ff0afc
00:51:15.750 --> 00:51:17.280
OK, so then raw alike.

NOTE Confidence: 0.840082614

31c35f3c-1404-45c3-8172-7279aa70cc0a
00:51:17.280 --> 00:51:20.382
This one I assume applies to

NOTE Confidence: 0.840082614

9279392b-5af6-4fb0-87cb-d1ea401b6a89
00:51:20.382 --> 00:51:22.450
something like stood allocator

NOTE Confidence: 0.840082614

cdde4bf7-42e3-47cf-bc77-2013eee985c6
00:51:22.539 --> 00:51:25.270
and scoped allocator. Yes.

NOTE Confidence: 0.76185227

69bd9757-3b70-49e3-9aef-d56b9654ab82
00:51:27.700 --> 00:51:30.000
And memory resource doesn't directly

NOTE Confidence: 0.76185227

7409b5f4-7079-458b-a8be-0c3572d0dced
00:51:30.000 --> 00:51:33.389
provide allocator, right? It's um.

NOTE Confidence: 0.76185227

42775b62-1928-4830-842a-3f36c5080413
00:51:33.390 --> 00:51:35.420
Or should we be expecting to see

NOTE Confidence: 0.76185227

877f021e-96c1-47da-9a8e-f0ed9216a3bd
00:51:35.420 --> 00:51:37.148
polymorphic allocator pop up on this scan?

NOTE Confidence: 0.76185227

3e0d4fea-1f4a-40dd-b08b-6d5fe337f51a
00:51:37.150 --> 00:51:38.896
Why is polymorphic allocator not here?

NOTE Confidence: 0.876042685

6e910124-eb8e-4516-8241-24d1d58932aa
00:51:41.450 --> 00:51:43.310
Trying to remember like all the

NOTE Confidence: 0.876042685

ca4d1137-e5a6-42cd-849d-8db14bd6cfb9
00:51:43.310 --> 00:51:45.390
stuff we've added to the standard.

NOTE Confidence: 0.876042685

d210d81f-da40-4526-a89b-3b2d1af67c8b
00:51:45.390 --> 00:51:49.630
OK, who says allocate?

NOTE Confidence: 0.876042685

042ff949-095d-47d1-8297-e14a0da592b3
00:51:49.630 --> 00:51:51.079
It's gonna have a lot of stuff.

NOTE Confidence: 0.876042685

4d9fb833-87e8-4252-8f47-e7ff7a020afb
00:51:51.080 --> 00:51:53.888
Who says pointer allocate?

NOTE Confidence: 0.876042685

b4629ac0-4eb3-454d-b10a-573833532fa1
00:51:53.888 --> 00:51:56.950
Um, just staying?

NOTE Confidence: 0.876042685

1de64770-5ef2-421b-ba3f-c2171b2513df
00:51:56.950 --> 00:51:57.852
Memory resource.

NOTE Confidence: 0.876042685

c345db46-38fe-4775-95a0-d14c53c3a240
00:51:57.852 --> 00:52:00.558
Do you have a polymorphic allocator?

NOTE Confidence: 0.876042685

8d22d63f-1808-4a95-92cf-bc3026fc2266
00:52:00.560 --> 00:52:01.880
No. There's a subheader now.

NOTE Confidence: 0.876042685

d12ac4ff-5547-4b61-beaa-b835ecc49b87
00:52:01.880 --> 00:52:02.999
X polymorphic allocator.

NOTE Confidence: 0.876042685

2621243b-b968-4306-91bd-71eed10afc88
00:52:02.999 --> 00:52:04.118
It's polymorphic allocator?

NOTE Confidence: 0.876042685

f54d4da5-e604-4383-9056-7f894f67ad32
00:52:04.120 --> 00:52:07.515
Yeah, it should be it's own header.

NOTE Confidence: 0.876042685

5c312e2c-b200-4854-8393-1913b3e47893
00:52:07.520 --> 00:52:08.970
We have something called allocate.

NOTE Confidence: 0.727412745833333

8d2dc311-c11b-4cbf-81d7-55f4669e081f
00:52:11.410 --> 00:52:14.092
Up PMR memory resource has an

NOTE Confidence: 0.727412745833333

c41842dc-22dc-4810-8126-a592980d3a19
00:52:14.092 --> 00:52:16.810
allocate that returns a void star.

NOTE Confidence: 0.727412745833333

d0022265-de96-4828-8cde-7e03b71c309a
00:52:16.810 --> 00:52:18.630
It's marked as no discard,

NOTE Confidence: 0.727412745833333

ffb01cda-28b3-4e82-b81e-5ebdc3a11fee
00:52:18.630 --> 00:52:20.499
but this really should deserve a reason.

NOTE Confidence: 0.844638958333333

b3080d87-324c-4f7f-b34c-b866063223f7
00:52:22.920 --> 00:52:24.918
Because it's absolutely falling under the,

NOTE Confidence: 0.844638958333333

96bbebaa-7d1b-4a04-bd00-0b48ec96df21
00:52:24.920 --> 00:52:26.188
I'm allocating something wrong,

NOTE Confidence: 0.844638958333333

40b5ee06-ee4e-43a8-ab18-951f56eb2518
00:52:26.188 --> 00:52:28.452
and I don't think X polymorphic allocator

NOTE Confidence: 0.844638958333333

14734f50-20be-4250-bb9a-c1d0e718307a
00:52:28.452 --> 00:52:30.700
is being marked here. Um, check.

NOTE Confidence: 0.844638958333333

ecffb932-cf71-45ef-aab7-fc19389709aa
00:52:30.700 --> 00:52:33.700
No occurrence of X polymorphic allocator.

NOTE Confidence: 0.844638958333333

e08d76f4-f241-4b57-b030-f1be058feb4a
00:52:33.700 --> 00:52:35.156
OK, so we've got a missing thing.

NOTE Confidence: 0.844638958333333

a4b83888-ee61-4d2f-bddc-97e2bf85ca9a
00:52:35.160 --> 00:52:38.528
It's a good thing I'm reviewing all this.

NOTE Confidence: 0.844638958333333

90627db4-81ac-4a4e-bfe8-7196d785d7b4
00:52:38.530 --> 00:52:41.330
That's a raw pointer 1.

NOTE Confidence: 0.844638958333333

c11252d8-567b-4724-873c-f556e849be85
00:52:41.330 --> 00:52:43.658
Because it is a void star.

NOTE Confidence: 0.844638958333333

0fc947c4-2174-413d-aae5-caf4c74ceb5d
00:52:43.660 --> 00:52:47.010
OK, so let's quote that.

NOTE Confidence: 0.844638958333333

c34dbecf-4a74-4204-80a2-1165824cae79
00:52:47.010 --> 00:52:53.620
Go back. X polymorphic allocator.

NOTE Confidence: 0.844638958333333

4a0a759e-073d-41d1-b5d4-206938375106
00:52:53.620 --> 00:52:56.730
Allocate paren, here we go.

NOTE Confidence: 0.844638958333333

b9f26676-4387-42b1-beb3-6ac662b195f7
00:52:56.730 --> 00:52:59.982
Is that the only occurrence here

NOTE Confidence: 0.844638958333333

02abfb24-242b-460d-8bcc-b7fc5c7bea08
00:52:59.982 --> 00:53:02.693
says Void Star? Sorry for that.

NOTE Confidence: 0.844638958333333

8b0be358-4703-42b7-8d69-af22d4a70d08
00:53:02.693 --> 00:53:06.453
If that sound is being captured, here we go.

NOTE Confidence: 0.844638958333333

48bc7f33-dc95-499c-8d67-936c4bf636f7
00:53:06.453 --> 00:53:09.108
OK, that's the only currency.

NOTE Confidence: 0.844638958333333

4be90815-e882-4440-ab04-314036cdb35f
00:53:09.110 --> 00:53:11.246
Hit why? To get a permalink?

NOTE Confidence: 0.844638958333333

a437836a-df99-4225-9e45-51312ed8234a
00:53:11.250 --> 00:53:13.347
Do I want to show that it's memory resource?

NOTE Confidence: 0.844638958333333

59ebc726-00ec-434a-bef8-203de2e645df
00:53:13.350 --> 00:53:14.000
Sure.

NOTE Confidence: 0.8335482

d50029b9-96c8-430d-a796-efed6622d361
00:53:16.060 --> 00:53:19.832
OK. And Umm, polymorphic allocator?

NOTE Confidence: 0.8335482

c83c5455-2dca-40e5-9f7e-13447fe32cc8
00:53:19.832 --> 00:53:22.580
Where does that allocate come from?

NOTE Confidence: 0.8335482

86f9860f-63a8-4901-b568-821d54705815
00:53:22.580 --> 00:53:23.888
I'll check that in a second.

NOTE Confidence: 0.693486791428571

5e342313-980a-472e-b7fc-7c93dc495c5a
00:53:27.330 --> 00:53:32.034
See? Probably should quote the whole thing.

NOTE Confidence: 0.693486791428571

9bcb406b-e0b1-49f0-bf14-67d1ee2eba23
00:53:32.040 --> 00:53:35.380
This should be applied to.

NOTE Confidence: 0.693486791428571

abcc4f54-34c1-4c3f-bed3-4f9cf8679ab4
00:53:35.380 --> 00:53:41.600
Memory resource double colon allocate.

NOTE Confidence: 0.80237305

fe74b4a3-1d92-4a4c-8c11-818dc1d63133
00:53:44.600 --> 00:53:48.070
Yes. Because it's a raw pointer.

NOTE Confidence: 0.80237305

d1d1760d-6dca-4a05-a428-36230305047f
00:53:48.070 --> 00:53:51.444
OK, so where does the actual polymorphic

NOTE Confidence: 0.80237305

6a7186a8-6542-4407-9cd7-4ac55f19135e
00:53:51.444 --> 00:53:54.910
allocator class live? Same file.

NOTE Confidence: 0.80237305

fc0322db-8b66-4e34-927a-ff82e6f2e346
00:53:54.910 --> 00:53:56.807
206 I think is what you want.

NOTE Confidence: 0.80237305

3f2c680f-5483-411b-90db-6503a79bd6c5
00:53:56.810 --> 00:53:58.700
Alright, press X up where? There?

NOTE Confidence: 0.59954610875

1770e42d-de27-4109-a4c6-4ee66e7a3b64
00:54:01.000 --> 00:54:05.048
Ohh yeah, um, this returns a tie star.

NOTE Confidence: 0.59954610875

3665b56b-6766-4400-8cff-274b897f1fd5
00:54:05.050 --> 00:54:06.637
Equally wrong, yeah.

NOTE Confidence: 0.59954610875

0fb6d459-0767-4ff0-a17f-fa441e282ae4
00:54:06.637 --> 00:54:10.340
So this one should also be annotated.

NOTE Confidence: 0.59954610875

26d3550d-0729-45a5-bebf-b313f2228134
00:54:10.340 --> 00:54:11.488
OK, let's get that.

NOTE Confidence: 0.8710566

6615aa57-aaa1-4147-b43b-9f100305e55e
00:54:14.280 --> 00:54:18.879
Back here. To sex allocator

NOTE Confidence: 0.8710566

83b98750-36b2-4820-83b7-7798a110076b
00:54:18.879 --> 00:54:21.318
allocate this one.

NOTE Confidence: 0.8710566

3a623439-e4b0-4e73-a62c-67d644ea9e5d
00:54:21.320 --> 00:54:23.656
What I really want is the ability to

NOTE Confidence: 0.8710566

26005d0a-2056-4b96-b54d-718146a08eb0
00:54:23.656 --> 00:54:25.978
like quote but then hide lines in the

NOTE Confidence: 0.8710566

19cd1aea-46ce-4e76-8e92-9a8d3ced16a0
00:54:25.978 --> 00:54:28.219
center with like a little expanding.

NOTE Confidence: 0.8710566

72845cad-bcb1-4bc2-90a3-92439539c733
00:54:28.220 --> 00:54:29.777
So I don't need to do 2 separate quotes,

NOTE Confidence: 0.8710566

7678f710-cfd8-4351-9e46-042c8f889532
00:54:29.780 --> 00:54:31.580
I'm just going to quote one

NOTE Confidence: 0.8710566

ab8ffc69-3b7e-4887-a3b9-ea14dad24e2b
00:54:31.580 --> 00:54:33.890
polymorphic allocator allocate.

NOTE Confidence: 0.394388515

e9584baf-2fec-491d-8176-24e2bbe982db
00:54:39.070 --> 00:54:41.950
And polymorphic.

NOTE Confidence: 0.6552569775

e9f195b5-3e29-4b64-8797-7b0cb8d082ac
00:54:44.740 --> 00:54:48.868
Mighty Morphin allocators allocate.

NOTE Confidence: 0.6552569775

9746be9b-0d0e-43c6-bdab-991d6d7cfe83
00:54:48.870 --> 00:54:51.090
OK, this should be applied to

NOTE Confidence: 0.6552569775

e323a624-2152-44b0-9bca-59e3b3f312c9
00:54:51.090 --> 00:54:52.570
memory resource allocate and

NOTE Confidence: 0.6552569775

92d6a5b3-405e-44cc-afa2-fb643dece12f
00:54:52.639 --> 00:54:54.619
polymorphic allocator allocate.

NOTE Confidence: 0.9062999

59910f8a-2661-4cf3-87f0-7eb1ad4f505f
00:54:56.930 --> 00:55:00.246
Really? But one of the things I

NOTE Confidence: 0.9062999

cdc38f49-b0fa-43aa-af4f-0166cce822c4
00:55:00.246 --> 00:55:01.520
like to do is think about like

NOTE Confidence: 0.9062999

4a4d915a-0df3-4d72-93e4-7efd34079a89
00:55:01.520 --> 00:55:02.934
all the ways to search the STL,

NOTE Confidence: 0.9062999

057a2772-c436-4590-8364-6f9717678e6d
00:55:02.940 --> 00:55:04.095
because like a lot of the things

NOTE Confidence: 0.9062999

3c413ee4-2cca-4b8e-9ba0-3fac24ef5aba
00:55:04.095 --> 00:55:05.344
I do are powered by searching

NOTE Confidence: 0.9062999

02234667-c45d-4728-9b1e-4fd58bee7ffb
00:55:05.344 --> 00:55:06.766
for every occurrence of a thing,

NOTE Confidence: 0.9062999

d9c1ab7e-0ecd-4eec-bd3c-af2b25bb1c3e
00:55:06.770 --> 00:55:08.107
and that's how I learned the originally,

NOTE Confidence: 0.9062999

51a535c3-9817-49d2-a720-d8bfcd75c049
00:55:08.110 --> 00:55:09.486
and I still rely on it a lot.

NOTE Confidence: 0.9062999

a4101b53-9751-49a3-85c0-e2cf0ecc3dd1
00:55:09.490 --> 00:55:10.588
In this case.

NOTE Confidence: 0.9062999

0d8b2ca5-76cc-4470-9798-6db1b72f248c
00:55:10.588 --> 00:55:12.784
Our internal macro CRT guard overflow

NOTE Confidence: 0.9062999

41b42f72-6b95-4f90-a458-a64d4c97dfa7
00:55:12.784 --> 00:55:15.373
is something that we use to tell

NOTE Confidence: 0.9062999

8236ceba-2536-4dc8-be46-9d4e0e4a6248
00:55:15.373 --> 00:55:17.749
the compiler that we're going to

NOTE Confidence: 0.9062999

34e0f1ba-3d38-4e3e-82ce-0479f7b6d652
00:55:17.749 --> 00:55:19.924
internally do a multiplication here.

NOTE Confidence: 0.9062999

c1898cd1-e40e-4fca-8d41-49b8df4eb049
00:55:19.930 --> 00:55:22.594
In this case bytes times number of objects.

NOTE Confidence: 0.9062999

7571ceb9-2ab4-477d-88b7-56392e5ffcc3
00:55:22.600 --> 00:55:24.305
And this tells the compiler

NOTE Confidence: 0.9062999

cd66c346-c7c5-4023-bade-a2d2c36acef7
00:55:24.305 --> 00:55:26.010
to do something very useful,

NOTE Confidence: 0.9062999

c5e6296c-7984-4a52-9877-510d3f8e8096
00:55:26.010 --> 00:55:27.630
although slightly nonstandard,

NOTE Confidence: 0.9062999

64ea8931-6b24-400b-a7cd-7f196e079726
00:55:27.630 --> 00:55:29.790
that if an integer.

NOTE Confidence: 0.9062999

9f1c137e-e69d-4f62-94ed-45d609ef84b8
00:55:29.790 --> 00:55:32.855
Overflow wrap around happens before

NOTE Confidence: 0.9062999

a073806b-d81b-405b-bf50-3aeae0c80577
00:55:32.855 --> 00:55:35.920
the function is even called.

NOTE Confidence: 0.9062999

e05aea73-2fa0-4052-b999-f962f272ed40
00:55:35.920 --> 00:55:37.690
Then that should send instead of

NOTE Confidence: 0.9062999

228ce597-6024-4a8a-a09c-ef67c3460b30
00:55:37.690 --> 00:55:39.528
the actual result of the allocation

NOTE Confidence: 0.9062999

d236989d-76d5-4db7-bf8f-e234cb1aa254
00:55:39.528 --> 00:55:40.716
it should send -.

NOTE Confidence: 0.9062999

f15122b6-3d1e-410b-a8ef-26a4cf41fda8
00:55:40.720 --> 00:55:40.933
1.

NOTE Confidence: 0.9062999

2a2d9d11-2e5a-48c8-9d1d-c3784d01d893
00:55:40.933 --> 00:55:42.211
You know the maximum value of

NOTE Confidence: 0.9062999

23010310-827e-446f-820e-59f4e1546051
00:55:42.211 --> 00:55:43.963
size T to the function so that

NOTE Confidence: 0.9062999

facc9aa5-4fb8-453a-9c75-8d962d530146
00:55:43.963 --> 00:55:45.473
the function can see that, oh,

NOTE Confidence: 0.9062999

4da8d415-c375-4ea9-a7c8-6d03b7b6bc27
00:55:45.473 --> 00:55:46.937
you just try to allocate a zillion bytes,

NOTE Confidence: 0.9062999

bae5dbc4-9202-4795-af50-7499fad573cf
00:55:46.940 --> 00:55:48.011
I should fail.

NOTE Confidence: 0.9062999

591923fb-af91-4c0b-93bf-b3672220af45
00:55:48.011 --> 00:55:49.796
This catches cases where somebody

NOTE Confidence: 0.9062999

311cd94d-284c-4c35-a376-4bf9ac34f015
00:55:49.796 --> 00:55:51.684
tries to allocate something and

NOTE Confidence: 0.9062999

1754fbf1-a6f4-4ae9-a5d2-151439652e5e
00:55:51.684 --> 00:55:53.898
they have an integer overflow in

NOTE Confidence: 0.9062999

7063528b-a716-4f19-9fc6-582dba1e8dcf
00:55:53.898 --> 00:55:56.219
the expression passed to allocate.

NOTE Confidence: 0.9062999

da9858f3-0837-45f1-a5ae-c5803e74d95e
00:55:56.220 --> 00:55:58.558
That is extremely likely to be a

NOTE Confidence: 0.9062999

d1cbf7e5-58c3-4589-b8a7-d32da3dee9ab
00:55:58.558 --> 00:56:00.328
security bug, and it justifies.

NOTE Confidence: 0.9062999

b91a0303-30c0-4991-b73e-abfd2e7f6405
00:56:00.328 --> 00:56:01.792
Doing something very slightly

NOTE Confidence: 0.9062999

4f23b191-b29e-4b41-a3d9-92fe7e37ff27
00:56:01.792 --> 00:56:03.551
nonstandard and detecting that bogus

NOTE Confidence: 0.9062999

791d464d-8f64-4f2a-9dc8-adcbd91261ca
00:56:03.551 --> 00:56:05.056
code before they call allocate.

NOTE Confidence: 0.9062999

5436c132-3561-4a61-9775-9040db9243ce
00:56:05.060 --> 00:56:07.991
And it has to be a special declspec

NOTE Confidence: 0.9062999

6d7dd2d5-2509-4ca1-8205-f9e2b7182874
00:56:07.991 --> 00:56:10.139
annotation on the parameter,

NOTE Confidence: 0.9062999

a37fd1d5-d824-45bc-9d56-e4933f2bf125
00:56:10.140 --> 00:56:11.612
because otherwise there's no

NOTE Confidence: 0.9062999

9383815b-b93e-48d1-85c8-e3e41c44d877
00:56:11.612 --> 00:56:13.820
way for the library to influence

NOTE Confidence: 0.9062999

5a0787e6-867b-4139-a757-bcaf7440c298
00:56:13.886 --> 00:56:15.818
what happens before you call it.

NOTE Confidence: 0.9062999

ba487196-ae1a-48dd-b54b-b0baa163c3cb
00:56:15.820 --> 00:56:17.872
So let's search for all current

NOTE Confidence: 0.9062999

8229faf0-06f0-4848-979e-ad3bf8684260
00:56:17.872 --> 00:56:18.898
security guard overflow.

NOTE Confidence: 0.9062999

b3ebd877-7d5d-4e78-b9cf-550ce5305e89
00:56:18.900 --> 00:56:20.923
Casey is beating me to the punch

NOTE Confidence: 0.9062999

3e35b354-f8c0-4a2f-b882-d00340c9aa91
00:56:20.923 --> 00:56:22.570
and finding cases where users

NOTE Confidence: 0.9062999

6ca5e2d2-50ae-4c55-bee8-ab376e2213fd
00:56:22.570 --> 00:56:23.998
don't directly use stuff.

NOTE Confidence: 0.9062999

d012eb98-5e73-44a8-afa1-5159bee6939b
00:56:24.000 --> 00:56:25.475
So unfortunately this also what

NOTE Confidence: 0.9062999

1c287ee8-3ca4-4652-9e4f-94d9af49d37b
00:56:25.475 --> 00:56:27.273
we've also marked this that the

NOTE Confidence: 0.9062999

75e869fb-3540-410a-ac90-5f305c985b26
00:56:27.273 --> 00:56:28.863
compiler teams request on a whole

NOTE Confidence: 0.9062999

6ee8aa5a-adc6-4d4f-929d-f733b4605a33
00:56:28.863 --> 00:56:30.415
bunch of things that internally

NOTE Confidence: 0.9062999

097c9756-f226-42cf-a600-d92e9a3f85d6
00:56:30.415 --> 00:56:31.815
call allocate pretty soon.

NOTE Confidence: 0.9062999

58e7e21c-8638-43df-b6bb-09d2cab48313
00:56:31.820 --> 00:56:33.340
These are not raw functions,

NOTE Confidence: 0.9062999

be8eb5c9-c962-4f9d-a926-e090b5d0aa1c
00:56:33.340 --> 00:56:36.020
so they should not be.

NOTE Confidence: 0.9062999

d69bda6e-cabf-4e28-bd8c-ce85b7d2bfc4
00:56:36.020 --> 00:56:36.772
Not marked,

NOTE Confidence: 0.9062999

67c8d7a8-8714-4573-9095-c93ce0ba8b5e
00:56:36.772 --> 00:56:39.028
but anything that mentions allocate should.

NOTE Confidence: 0.9062999

c3d74bf2-0f07-4105-bccc-620b883021c6
00:56:39.030 --> 00:56:40.110
So let's just take a look.

NOTE Confidence: 0.9062999

93b39b0a-5228-4d13-a2a2-199789697f85
00:56:40.110 --> 00:56:42.486
Regex search for anything that says.

NOTE Confidence: 0.9062999

174e737e-0fc6-4f2f-9a8b-6696b26bb30e
00:56:42.490 --> 00:56:45.106
Hopefully it should be on the same line

NOTE Confidence: 0.9062999

36e522b3-f146-4fa5-9326-44d533c9078d
00:56:45.106 --> 00:56:47.649
and not wrapped allocate dot star.

NOTE Confidence: 0.9062999

af96a936-f5fa-4809-a2fb-f506335a72cf
00:56:47.650 --> 00:56:49.266
OK, much fewer occurrences.

NOTE Confidence: 0.9062999

a93aab58-744b-4aba-9ef2-9f6fa93d5474
00:56:49.266 --> 00:56:51.286
So we've got CRT allocator.

NOTE Confidence: 0.9062999

11623c87-7a85-4e39-9535-db8488c9373b
00:56:51.290 --> 00:56:52.830
That's an internal type case you mentioned.

NOTE Confidence: 0.9062999

4105776f-7f7d-4fcf-8c9b-37dbbfd73c14
00:56:52.830 --> 00:56:54.110
Users don't directly call this,

NOTE Confidence: 0.9062999

7507e2d7-00c4-4187-91cb-b0d3a27b85d4
00:56:54.110 --> 00:56:57.130
so we mark it as no discard for our purposes.

NOTE Confidence: 0.9062999

2049dc19-fa0d-4035-b8b8-1ac7bfee1210
00:56:57.130 --> 00:56:58.648
But we don't need to provide

NOTE Confidence: 0.9062999

e4c200b4-9707-4432-8e51-afe26a5bd112
00:56:58.648 --> 00:56:59.990
messages because if this occurs

NOTE Confidence: 0.9062999

ca885fe5-217b-402b-a8f2-b04e89e1e37c
00:56:59.990 --> 00:57:01.664
we're going to know what happened.

NOTE Confidence: 0.9062999

ad7258c6-3217-4cf6-9cc0-7117004f208d
00:57:01.670 --> 00:57:03.190
Scope allocator I believe was

NOTE Confidence: 0.9062999

756f4451-52d0-498b-b70d-602b54138b99
00:57:03.190 --> 00:57:04.710
already addressed by the PR.

NOTE Confidence: 0.9062999

80401ab6-6290-492e-b4a3-22db55727c38
00:57:04.710 --> 00:57:07.656
Let me split these real quick.

NOTE Confidence: 0.9062999

acb9c189-ffe2-4b51-bb1f-83a775055307
00:57:07.660 --> 00:57:10.330
You go on the left, you go on the right.

NOTE Confidence: 0.9062999

acbab327-08e7-4adf-a905-4ecd851d773d
00:57:10.330 --> 00:57:16.147
OK, let's journey over to scope delegator.

NOTE Confidence: 0.9062999

a8f0368a-fa02-4e1c-a5d1-b6923721ef3f
00:57:16.150 --> 00:57:16.503
Yes,

NOTE Confidence: 0.9062999

3c3513ac-054f-4759-b46d-6c5d9c11b459
00:57:16.503 --> 00:57:18.268
pointer allocate and allocate with

NOTE Confidence: 0.9062999

b34da6cb-78ad-40c7-b334-790a6a450fa4
00:57:18.268 --> 00:57:20.488
hint are being marked as raw alloc,

NOTE Confidence: 0.9062999

4dc82323-1f5b-4293-a92f-855384de10f9
00:57:20.490 --> 00:57:23.966
so that is done. This is.

NOTE Confidence: 0.9062999

3db429e5-ea81-4c73-b816-48fcda402235
00:57:23.966 --> 00:57:27.806
I wish I had more monitor with, um, treats?

NOTE Confidence: 0.9062999

d6d602a5-b577-476b-b5aa-0327e2ae5da4
00:57:27.806 --> 00:57:29.900
This is, yeah,

NOTE Confidence: 0.9062999

3e8b6a9a-97e7-4773-9fd7-74057fe9c236
00:57:29.900 --> 00:57:34.898
allocator traits the wrapper in X memory.

NOTE Confidence: 0.9062999

a83ff4b6-dfc4-496b-9cdd-5397f7b04266
00:57:34.900 --> 00:57:40.684
Memory. So we've got. See who is this?

NOTE Confidence: 0.826200877142857

97c2175a-4f44-431c-b2eb-40c73299d181
00:57:42.720 --> 00:57:44.220
Or are these the allocator

NOTE Confidence: 0.826200877142857

4026cfa1-01b4-4a86-925a-be1779beafcb
00:57:44.220 --> 00:57:46.055
traits appear? I want to see the

NOTE Confidence: 0.826200877142857

e67bf710-74d6-4679-bae9-53dd0220cb4e
00:57:46.055 --> 00:57:47.290
context this is stood allocator.

NOTE Confidence: 0.741958574666667

cefc92e7-86d0-4847-a090-312922c822b3
00:57:49.930 --> 00:57:51.590
Interesting allocator traits on

NOTE Confidence: 0.741958574666667

cb8aaa8a-8404-4faf-9057-515f4a951488
00:57:51.590 --> 00:57:54.080
546 should really be marked 2

NOTE Confidence: 0.741958574666667

4634af09-c062-42fc-b351-7ab32c2387d6
00:57:54.156 --> 00:57:56.606
because it's wrapping the allocator.

NOTE Confidence: 0.741958574666667

474f40b1-8695-42e5-b558-4b0e72f4b0db
00:57:56.610 --> 00:57:57.810
It happens to say pointer

NOTE Confidence: 0.741958574666667

aa500386-2f09-49e1-a8c5-e6527c3a5d42
00:57:57.810 --> 00:57:59.039
rather than type star, but.

NOTE Confidence: 0.741958574666667

0c6850a4-134e-4b26-b329-d34545ae51f4
00:57:59.039 --> 00:58:00.922
If al allocate like you should not

NOTE Confidence: 0.741958574666667

bdbddf25-48da-4804-90f9-3d158e6503dd
00:58:00.922 --> 00:58:02.434
call allocator traits and then drop

NOTE Confidence: 0.741958574666667

d53ba950-19c3-49a9-ae40-716c037bd461
00:58:02.434 --> 00:58:04.401
it on the floor. That's equally raw.

NOTE Confidence: 0.741958574666667

87305203-fc00-4db0-a5b0-f14e65790e36
00:58:04.401 --> 00:58:06.830
OK, so this is the missing occurrence.

NOTE Confidence: 0.741958574666667

8c706f0e-e3c1-4c80-9cce-b411cbe9066d
00:58:06.830 --> 00:58:10.680
We should comment this right now. Um.

NOTE Confidence: 0.741958574666667

16b2ad78-8640-43a3-bbf9-a1414e1e2b3a
00:58:10.680 --> 00:58:13.767
Let's say it's allocate, allocate at least,

NOTE Confidence: 0.741958574666667

9d74c794-80e0-4616-9730-78cd7ea39e52
00:58:13.770 --> 00:58:16.485
and then allocate with hint, right?

NOTE Confidence: 0.741958574666667

9883a0d1-5cf7-47d8-a511-bf1e07fe8b58
00:58:16.485 --> 00:58:18.260
Yeah, because the wrapper here

NOTE Confidence: 0.741958574666667

c35f6dce-1e7c-4bf9-8d70-f0f331cbe35d
00:58:18.260 --> 00:58:20.110
let me maximize this quick.

NOTE Confidence: 0.741958574666667

bb56ebd7-3404-4edf-93c4-199dd3b986cb
00:58:20.110 --> 00:58:24.180
It's allocate, allocate with hint.

NOTE Confidence: 0.741958574666667

c190cc83-4619-47bf-a7f5-a8caadc5d82d
00:58:24.180 --> 00:58:25.632
We have a allocator traits for

NOTE Confidence: 0.741958574666667

26bafb48-ca9e-42de-bf96-79f7114f2ab3
00:58:25.632 --> 00:58:28.310
allocate at least. No, we don't.

NOTE Confidence: 0.741958574666667

66732f2a-777e-435d-a951-41589d54e889
00:58:28.310 --> 00:58:29.044
That's interesting.

NOTE Confidence: 0.741958574666667

9e2e6bd9-65bf-4063-b82c-d3f22ae50d9f
00:58:29.044 --> 00:58:31.246
So it's only allocated and allocate

NOTE Confidence: 0.741958574666667

5275ad5f-7237-477e-8340-c3e042d756cb
00:58:31.246 --> 00:58:31.980
with hint.

NOTE Confidence: 0.741958574666667

df548d31-9ace-4571-8058-b025461eb8ca
00:58:31.980 --> 00:58:32.528
OK.

NOTE Confidence: 0.741958574666667

f2f22a40-20dc-4aca-aa77-f6b93e27e82b
00:58:32.528 --> 00:58:37.460
Um, should I quote let's quote um X memory?

NOTE Confidence: 0.683221757777778

df4da96e-dce8-4187-829e-8c850d22941c
00:58:42.730 --> 00:58:46.070
First occurrence of allocate paren

NOTE Confidence: 0.683221757777778

7177a23f-8068-416e-a566-a4bae5bfd575
00:58:46.070 --> 00:58:50.572
the space before OK normal allocator

NOTE Confidence: 0.683221757777778

b5369e37-8e6d-4486-bdcf-8e2245cb28ed
00:58:50.572 --> 00:58:55.127
traits allocate allocate with hint.

NOTE Confidence: 0.683221757777778

9c23da8e-5ee2-416a-8212-eabba7dd374b
00:58:55.130 --> 00:58:58.490
Phase two I want permalink.

NOTE Confidence: 0.683221757777778

49df5aff-fea5-4fa5-8eac-5959bf7cd33c
00:58:58.490 --> 00:59:02.150
OK, I don't need this anymore.

NOTE Confidence: 0.683221757777778

1091d8cb-c283-4a45-b222-cb505512b56e
00:59:02.150 --> 00:59:10.076
OK. Maximize um. Allocator traits

NOTE Confidence: 0.683221757777778

6ef2882b-0f50-46f7-bbdb-a97f6c1e40f7
00:59:10.076 --> 00:59:15.610
allocate should also be. Marked.

NOTE Confidence: 0.7636984465

6cf7d706-bb10-4ed2-a269-14694ca4c108
00:59:19.460 --> 00:59:20.525
Yeah, no discard.

NOTE Confidence: 0.7636984465

f1508040-f2da-4337-b107-fb4415b2c0de
00:59:20.525 --> 00:59:22.655
It's possible that these were missed

NOTE Confidence: 0.7636984465

e2c53c37-84cb-4c55-ae0d-6116f753c87a
00:59:22.655 --> 00:59:24.702
because no discard was wrapped on

NOTE Confidence: 0.7636984465

551fd464-cd9e-47dd-bfb2-0bdf6d49bf2e
00:59:24.702 --> 00:59:26.332
a different line than allocate.

NOTE Confidence: 0.7636984465

75c92739-954f-4ae5-9418-7fee82862b7a
00:59:26.340 --> 00:59:28.202
I'm not exactly sure how Alex found

NOTE Confidence: 0.7636984465

f2861e42-fb5c-4c11-9156-5e0586acac68
00:59:28.202 --> 00:59:29.732
all these occurrences, but I could

NOTE Confidence: 0.7636984465

23d032a8-9073-43d6-b1b9-1d56a7318605
00:59:29.732 --> 00:59:31.196
easily see this defeating a search.

NOTE Confidence: 0.7636984465

9f110b63-3256-4327-bb85-ef786275997a
00:59:31.200 --> 00:59:32.754
I know I've been defeated many way,

NOTE Confidence: 0.7636984465

aa318ef1-3947-4d74-8a59-abcb60b503ff
00:59:32.760 --> 00:59:35.408
many times by things wrapping and I expected

NOTE Confidence: 0.7636984465

e8946409-2672-4a86-83d9-cdcff9a385b7
00:59:35.408 --> 00:59:37.876
the Rogers to get them on the same line.

NOTE Confidence: 0.7636984465

38977a7b-9890-4f2d-b2c8-1a92096e6962
00:59:37.880 --> 00:59:39.287
In this case, no discard and allocate,

NOTE Confidence: 0.7636984465

dc014ab2-ad30-4b18-a9ab-a79c7a3413c1
00:59:39.290 --> 00:59:41.550
we're on the same line.

NOTE Confidence: 0.7636984465

65319f5b-710d-431c-bc1c-2c315141d3c6
00:59:41.550 --> 00:59:44.120
OK. So those those two.

NOTE Confidence: 0.7636984465

3671069d-cfe0-4403-9290-f669f576a0d0
00:59:44.120 --> 00:59:46.485
OK, we were searching for

NOTE Confidence: 0.7636984465

31a5d6a2-c9b0-4b1b-959c-9ced942b6b52
00:59:46.485 --> 00:59:48.377
all occurrences of allocate.

NOTE Confidence: 0.7636984465

29c7b447-098d-413d-bedd-72efa72c1497
00:59:48.380 --> 00:59:51.326
So that is traits and traits.

NOTE Confidence: 0.893147994285714

e5dcdc29-a93d-467f-9340-0bda79970e02
00:59:53.790 --> 00:59:57.255
And these are the default allocator traits.

NOTE Confidence: 0.893147994285714

910d79ba-5738-49a6-974b-1f59b3241fa4
00:59:57.260 --> 01:00:00.617
Oh, on 60 I should also quote this one.

NOTE Confidence: 0.893147994285714

8cd83515-7987-417b-840b-145053b17746
01:00:00.620 --> 01:00:06.740
Um 632 and 646.

NOTE Confidence: 0.893147994285714

b8492bc6-de3f-45e9-8181-02e0a8c4ac81
01:00:06.740 --> 01:00:09.776
And it's not actually allocator traits.

NOTE Confidence: 0.893147994285714

9b72f0d6-5c23-4f1f-a416-d940026a408b
01:00:09.780 --> 01:00:12.132
This one is what we have these

NOTE Confidence: 0.893147994285714

3f708a44-f9e9-40c4-b642-56a3f4653245
01:00:12.132 --> 01:00:13.140
two specializations for.

NOTE Confidence: 0.893147994285714

befeb31a-acc6-4939-bd64-3d15182c5308
01:00:13.140 --> 01:00:14.520
Compiler throughput because

NOTE Confidence: 0.893147994285714

4f1ff519-5a3d-4bbe-8baf-08fe1f3660e5
01:00:14.520 --> 01:00:15.900
allocator traits ask,

NOTE Confidence: 0.893147994285714

57c19a5f-f334-4408-9eea-f36c5ec26bb4
01:00:15.900 --> 01:00:21.115
it asks a lot of expensive questions.

NOTE Confidence: 0.893147994285714

1766d8bb-1061-4e37-863e-064b2c4367e2
01:00:21.120 --> 01:00:22.457
If we know it's the default allocator,

NOTE Confidence: 0.893147994285714

6f2c7fdf-6e7b-4887-b30b-37ba5e7ef907
01:00:22.460 --> 01:00:23.585
we can short circuit a

NOTE Confidence: 0.893147994285714

066e8307-99d4-44a9-83c7-93c675312c48
01:00:23.585 --> 01:00:24.744
lot of that's like here.

NOTE Confidence: 0.893147994285714

acea9777-50ca-4c11-9f72-9a0ba6251595
01:00:24.744 --> 01:00:26.448
This is asking, do you have a pointer type?

NOTE Confidence: 0.893147994285714

f8ef0888-4e6b-431c-85ec-1fd072e60c5c
01:00:26.450 --> 01:00:27.640
Do you have a constant pointer type?

NOTE Confidence: 0.893147994285714

8c1fb096-fb5d-4e42-8da7-5427b77a279c
01:00:27.640 --> 01:00:29.460
Do you have propagate on container copy?

NOTE Confidence: 0.893147994285714

070f93b0-47b1-4c5d-85ad-31c15aa00489
01:00:29.460 --> 01:00:31.068
And if we're allocator

NOTE Confidence: 0.893147994285714

ed9fd5b8-d009-4b65-81c6-cf2df15cec37
01:00:31.068 --> 01:00:32.274
traits forced allocator,

NOTE Confidence: 0.893147994285714

c4f5f39a-cb96-4047-a14f-033c0b7fc545
01:00:32.280 --> 01:00:33.560
we know the answers to all these questions.

NOTE Confidence: 0.893147994285714

1572e0f5-d6a3-495c-a9c9-4ab1aed7154c
01:00:33.560 --> 01:00:34.826
We don't have to ask the

NOTE Confidence: 0.893147994285714

3967b895-d81a-45ae-86e9-710ba0044585
01:00:34.826 --> 01:00:36.219
compiler to do all that work.

NOTE Confidence: 0.893147994285714

5869085a-430b-45c7-9b5f-e734ac245539
01:00:36.220 --> 01:00:38.345
So let's search for following

NOTE Confidence: 0.893147994285714

5d4c61d8-0476-4dee-856a-e8db75197f9f
01:00:38.345 --> 01:00:39.620
occurrences of allocate,

NOTE Confidence: 0.893147994285714

c6dd1ed8-5874-4c7b-a7a3-45cfda4325f5
01:00:39.620 --> 01:00:41.500
run with the space.

NOTE Confidence: 0.893147994285714

ae526366-8fa6-4cb0-a281-24714bb8cff4
01:00:41.500 --> 01:00:43.380
And here we go.

NOTE Confidence: 0.893147994285714

3ce23eca-2a0a-439f-a3ad-700e10e88fe2
01:00:43.380 --> 01:00:46.180
Default allocator traits allocate

NOTE Confidence: 0.893147994285714

bf880986-9753-4cc4-ba00-1a8f178220e7
01:00:46.180 --> 01:00:47.580
and deallocate.

NOTE Confidence: 0.893147994285714

dbbeecc0-b0c1-42c2-8e83-15a710dfba56
01:00:47.580 --> 01:00:48.858
These are kind of widely separated,

NOTE Confidence: 0.893147994285714

1f092988-c11b-4385-ba8c-8aed625b1700
01:00:48.860 --> 01:00:51.268
but I know GitHub will at least

NOTE Confidence: 0.893147994285714

80d0e18d-db3e-4ac6-888f-ba8b44561097
01:00:51.270 --> 01:00:53.466
abbreviate this when it's a bunch.

NOTE Confidence: 0.646808753333333

5dd70fc6-8343-4377-8d45-8c4a8b1049ad
01:00:55.520 --> 01:00:59.150
Default allocator traits.

NOTE Confidence: 0.646808753333333

ccd9b21d-b9c4-4d6e-8a5b-be7f0f774c1c
01:00:59.150 --> 01:01:02.986
I'll mention both and back to blah.

NOTE Confidence: 0.646808753333333

920b6081-aa8b-4b20-88f9-fb3d032fa6d6
01:01:02.990 --> 01:01:07.337
Double coin allocation must be marked OK.

NOTE Confidence: 0.646808753333333

589574bb-494e-4939-b3b3-e83350fed48e
01:01:07.340 --> 01:01:09.770
These are all occurring before line

NOTE Confidence: 0.646808753333333

eded10b6-8473-4520-a9d5-523b38b0a573
01:01:09.770 --> 01:01:14.190
800 something blah blah and blah blah.

NOTE Confidence: 0.646808753333333

f8a180fa-3e17-45bd-a67e-bf1c1d3dbe43
01:01:14.190 --> 01:01:15.982
OK. So that's those.

NOTE Confidence: 0.646808753333333

c069327c-bc7c-4428-ada3-e3bd7610f8c1
01:01:15.982 --> 01:01:18.222
Go back to the search.

NOTE Confidence: 0.646808753333333

59c505ae-44ca-4f4c-b8ef-48cace9dfefa
01:01:18.230 --> 01:01:20.197
We're going to want that open again.

NOTE Confidence: 0.646808753333333

62034566-7450-46f5-988e-63db71ea37d0
01:01:20.200 --> 01:01:24.176
OK, so this is the default allocator.

NOTE Confidence: 0.646808753333333

1ef14887-f941-46d6-a7c2-f3963efb4efb
01:01:24.180 --> 01:01:26.280
Allocator traits mentioned and mentioned,

NOTE Confidence: 0.646808753333333

d1d18d2c-dea7-4ec9-a19c-9b23bf42a712
01:01:26.280 --> 01:01:28.674
and then finally the stood allocator one.

NOTE Confidence: 0.646808753333333

299cb98a-cf12-4549-832b-2a7fc7557a10
01:01:28.680 --> 01:01:30.378
These are the ones being marked.

NOTE Confidence: 0.871738102

01db2238-441c-4c9a-89ef-f1abac7b3b26
01:01:32.850 --> 01:01:36.470
On the left here. OK, so these

NOTE Confidence: 0.871738102

879cdda3-d3ff-44cc-8102-80f7111ae429
01:01:36.470 --> 01:01:38.980
are definitely. Oops. Go away.

NOTE Confidence: 0.4940176

608cc467-3c62-4fb6-8b09-3ad814d722b9
01:01:41.390 --> 01:01:44.912
FIFA allocator traits. I wanted,

NOTE Confidence: 0.4940176

1b73299a-a755-40f6-adad-32c4f841c16c
01:01:44.912 --> 01:01:46.817
I wanted Alex's PR here.

NOTE Confidence: 0.772742674285714

f2ad9c94-71dd-4066-bc05-097b98009fc8
01:01:49.350 --> 01:01:53.907
Yeah, 123 for the state allocator itself.

NOTE Confidence: 0.772742674285714

67d2780e-5505-4867-a8f0-965056bc0b41
01:01:53.910 --> 01:01:58.208
That's 1/2. And then the third one,

NOTE Confidence: 0.772742674285714

876e4417-0e4d-453b-b538-980b45d60a4d
01:01:58.210 --> 01:01:59.266
why did this evade my search?

NOTE Confidence: 0.772742674285714

0b7d6c94-00c9-4337-ad37-3ab9a6da63e9
01:01:59.270 --> 01:02:00.570
Because the RT guard overflow

NOTE Confidence: 0.772742674285714

72e69b34-e016-4369-926b-b7c55a1463b5
01:02:00.570 --> 01:02:02.238
wrap to the next line. So yes,

NOTE Confidence: 0.772742674285714

ef1c5481-6556-496e-ac1b-ca6635755bdb
01:02:02.238 --> 01:02:03.990
you got all the ones in stood all case.

NOTE Confidence: 0.772742674285714

71d95b29-28b3-435d-9fb8-c5ab1cebb01a
01:02:03.990 --> 01:02:05.710
That's good, we're still allocator.

NOTE Confidence: 0.772742674285714

269928f9-3c27-422b-86f8-e2f89d341d94
01:02:05.710 --> 01:02:07.726
And then the last ones were

NOTE Confidence: 0.772742674285714

f46f2c61-255f-435e-bc1a-0f2caffba6e4
01:02:07.726 --> 01:02:09.760
the ones we mentioned allocate.

NOTE Confidence: 0.772742674285714

d0fba2e6-a454-496b-a6e4-8724ed34d752
01:02:09.760 --> 01:02:13.020
The memory resource allocated on

NOTE Confidence: 0.772742674285714

9991f13f-da05-48e7-8e56-c0903a7e3830
01:02:13.020 --> 01:02:16.188
the polymorphic and ooh hello

NOTE Confidence: 0.772742674285714

420dede7-d665-4a48-8af9-153bf3b47d75
01:02:16.188 --> 01:02:19.208
you were hiding allocate object.

NOTE Confidence: 0.772742674285714

6dc27668-3e9c-4146-8b86-91744d6c454b
01:02:19.210 --> 01:02:20.071
OK, the compiler,

NOTE Confidence: 0.772742674285714

3b83f167-b821-4515-b210-e8e024341ddf
01:02:20.071 --> 01:02:21.793
the standard just keeps adding stuff.

NOTE Confidence: 0.772742674285714

73e4feaf-c855-4bef-a693-aef826488765
01:02:21.800 --> 01:02:23.030
I I forgot about this,

NOTE Confidence: 0.772742674285714

f1dff8d1-9845-476e-8c45-a5abe5188400
01:02:23.030 --> 01:02:24.320
that this this was the thing.

NOTE Confidence: 0.772742674285714

6ffb24f7-5998-4f26-aa74-60c44ade6575
01:02:24.320 --> 01:02:25.760
This should also be annotated too,

NOTE Confidence: 0.772742674285714

0b069fb4-c6e9-4bd3-8b5c-d9d5e2b34958
01:02:25.760 --> 01:02:27.200
because we're definitely

NOTE Confidence: 0.772742674285714

84620b6a-8705-412b-8ef2-2bf9b2b354b8
01:02:27.200 --> 01:02:29.600
allocating a bunch of bytes.

NOTE Confidence: 0.772742674285714

10980eff-590d-48a6-8d0c-c5230349c775
01:02:29.600 --> 01:02:31.024
And we get the size of the object.

NOTE Confidence: 0.645014784

438546af-b714-4893-a577-9c0df0a1e1d6
01:02:34.260 --> 01:02:34.977
Yeah, that's ohh,

NOTE Confidence: 0.645014784

acccb69c-d8a5-4577-9c4e-cd8e14d831cf
01:02:34.977 --> 01:02:36.650
and it's specific to CS plus 20,

NOTE Confidence: 0.645014784

cb87d216-bcaa-4fe8-81f2-f09fee3aeede
01:02:36.650 --> 01:02:38.846
so let's go update that quote.

NOTE Confidence: 0.645014784

b912c1b1-e620-47c6-85da-a062809b54ad
01:02:38.850 --> 01:02:41.100
Um, back to X polymorphic.

NOTE Confidence: 0.474918975

98bec42a-cc0c-4fd9-94cd-8378699e28e9
01:02:44.370 --> 01:02:48.118
Perfect alligator alligator object.

NOTE Confidence: 0.9324597

bcb4fc81-0f38-465b-b0c1-2016d1cb1445
01:02:50.920 --> 01:02:51.160
Yeah.

NOTE Confidence: 0.678051948

5fdc358e-0240-4a4f-941b-f2bfb877806e
01:03:00.130 --> 01:03:03.430
That was I think, on why

NOTE Confidence: 0.678051948

905bdfc1-46dd-48d8-b1ac-37a41a52dfa7
01:03:03.430 --> 01:03:06.370
balance that I commented. Yes.

NOTE Confidence: 0.669350796666667

99570af6-7acf-4755-88ac-b964d02afb88
01:03:13.060 --> 01:03:14.262
Polymorphic allocator,

NOTE Confidence: 0.669350796666667

2c3036da-85c0-434f-a86e-97458da9babc
01:03:14.262 --> 01:03:16.666
allocate and copy paste.

NOTE Confidence: 0.669350796666667

bdd01277-f97a-4716-9772-4efc95c7b3e5
01:03:16.670 --> 01:03:18.198
Hopefully this is correct.

NOTE Confidence: 0.682558088333333

3b63e475-1abe-4719-a00d-01161cefb7b4
01:03:22.440 --> 01:03:24.318
I'm saying polymorphic

NOTE Confidence: 0.682558088333333

ad6d5315-2778-4a0a-8752-e61af9fb2d35
01:03:24.318 --> 01:03:26.196
allocator allocate object.

NOTE Confidence: 0.682558088333333

96eb4c04-8ede-4521-99cd-707bffc6ad34
01:03:26.200 --> 01:03:27.840
That is correct spelling there.

NOTE Confidence: 0.682558088333333

3ce5474a-55ce-40b4-8d67-3b145970653c
01:03:27.840 --> 01:03:29.280
And you are indeed.

NOTE Confidence: 0.682558088333333

886a7c45-b735-4194-93cc-3a2d5e71933b
01:03:29.280 --> 01:03:31.440
I'm not going to confused that

NOTE Confidence: 0.682558088333333

0725aa41-e061-47df-b16b-e93914a283bf
01:03:31.521 --> 01:03:34.359
allocate object is still a member

NOTE Confidence: 0.682558088333333

368efaa3-883e-450c-a216-91a5ad5964a0
01:03:34.359 --> 01:03:36.935
of polymorphic allocator. It is OK.

NOTE Confidence: 0.682558088333333

7c232f6e-6c6d-4a8e-8e49-3113cc396185
01:03:36.935 --> 01:03:39.970
Good update comments so I don't lose it.

NOTE Confidence: 0.682558088333333

b72414e2-86e2-4ed0-a92e-db6a22d6c17e
01:03:39.970 --> 01:03:42.214
OK, so we are almost done

NOTE Confidence: 0.682558088333333

258e4fed-14e5-4b6f-915c-ddfc01f563f9
01:03:42.214 --> 01:03:43.710
scanning for all allocates.

NOTE Confidence: 0.682558088333333

c1c8b44c-e202-4494-bc14-4be5ad26c122
01:03:43.710 --> 01:03:45.668
We got all three there, and then the

NOTE Confidence: 0.682558088333333

a216677d-6fd7-463c-a3a7-8e9d20cdc4c5
01:03:45.668 --> 01:03:47.670
TZDB one is just the CRT allocator.

NOTE Confidence: 0.682558088333333

a2e362a9-c764-4109-918a-0201666192b3
01:03:47.670 --> 01:03:49.049
OK, so that gets all the allocates,

NOTE Confidence: 0.682558088333333

49241db2-8ba4-42f0-996f-61570d347f81
01:03:49.050 --> 01:03:50.088
which is good.

NOTE Confidence: 0.682558088333333

a2440766-eb6b-4a60-82e7-624fdda6a910
01:03:50.088 --> 01:03:51.818
That answers the question where

NOTE Confidence: 0.682558088333333

36008cda-2341-47c9-be10-c7fb49eeca8e
01:03:51.818 --> 01:03:53.299
the polymorphic allocator go.

NOTE Confidence: 0.682558088333333

3e16d8ed-5739-47da-aba4-c915fa0f043b
01:03:53.300 --> 01:03:55.884
Go away, OK now.

NOTE Confidence: 0.682558088333333

16c97009-dc68-4766-8430-514083ee14f0
01:03:55.884 --> 01:03:57.176
Assume aligned.

NOTE Confidence: 0.682558088333333

3e921476-973e-41e5-8eca-6de39fc366e1
01:03:57.180 --> 01:03:58.700
So these are the, UM,

NOTE Confidence: 0.682558088333333

c599c46f-d843-4fd1-ae7e-e42c8c18d786
01:03:58.700 --> 01:04:00.940
the fun compiler wrapper functions.

NOTE Confidence: 0.682558088333333

5d46ff5c-0411-4529-96bd-c678bea5dc88
01:04:00.940 --> 01:04:01.864
If you, say,

NOTE Confidence: 0.682558088333333

810a5e52-6da6-4b22-a037-ac7293f94895
01:04:01.864 --> 01:04:04.860
assume a line on a pointer that by itself

NOTE Confidence: 0.682558088333333

f6d56b25-6ddd-49ac-ac95-dd107a294ead
01:04:04.860 --> 01:04:06.940
does not have interesting side effects,

NOTE Confidence: 0.682558088333333

a434ad52-37fa-40a6-a119-59ec906368bf
01:04:06.940 --> 01:04:08.340
you actually have to use

NOTE Confidence: 0.682558088333333

a20a61c5-be9d-4191-ad47-c673ddd6f263
01:04:08.340 --> 01:04:09.680
the thing it returns.

NOTE Confidence: 0.682558088333333

ea8e7e74-07a6-4ef2-b064-639c6f8c8520
01:04:09.680 --> 01:04:11.355
So that is an unusual

NOTE Confidence: 0.682558088333333

3bad375c-b5af-4c54-849b-f7a755122a1f
01:04:11.355 --> 01:04:12.695
reason to mark something.

NOTE Confidence: 0.682558088333333

bce61b44-9586-4c0f-a0ee-64e68a7a1979
01:04:12.700 --> 01:04:13.486
Notice card.

NOTE Confidence: 0.682558088333333

88403485-2e0a-4ece-8afc-cca18d6ef129
01:04:13.486 --> 01:04:15.058
So message is good.

NOTE Confidence: 0.682558088333333

7d11749c-b218-4bbc-9160-638fc99d9436
01:04:15.060 --> 01:04:16.810
Launder the even more obscure

NOTE Confidence: 0.682558088333333

7833fa81-0775-4c0d-8b4c-93a7aee04c7a
01:04:16.810 --> 01:04:17.860
standard library function.

NOTE Confidence: 0.682558088333333

f0dd4e10-8de3-4670-84d1-e65f7b4b4d52
01:04:17.860 --> 01:04:19.820
Again, only the return value

NOTE Confidence: 0.682558088333333

ce057e21-d816-4647-97c3-35c480625768
01:04:19.820 --> 01:04:20.996
is specifically laundered.

NOTE Confidence: 0.682558088333333

0e504101-f6ae-4c45-a2c0-6936357f5685
01:04:21.000 --> 01:04:22.800
The original one is still dirty,

NOTE Confidence: 0.682558088333333

1760bd6d-6036-4dd3-895c-66b3b4b890a5
01:04:22.800 --> 01:04:25.264
so you don't want to use it.

NOTE Confidence: 0.682558088333333

be086899-ac75-4175-bb3d-faa9069abf50
01:04:25.270 --> 01:04:27.310
That's good.

NOTE Confidence: 0.682558088333333

d4cc701c-63fa-482e-86c1-803d27b002b3
01:04:27.310 --> 01:04:30.820
Now notice card locks the press.

NOTE Confidence: 0.682558088333333

a4f6bb49-3399-4193-b4db-f8c3039c2ef8
01:04:30.820 --> 01:04:32.320
Just an escape hatch.

NOTE Confidence: 0.682558088333333

c0294858-f243-4554-97cc-2f780c22d048
01:04:32.320 --> 01:04:33.445
What is this?

NOTE Confidence: 0.8784534475

083eb5e2-1949-4825-a5a2-72815953eddb
01:04:36.710 --> 01:04:40.286
OK. So Alex is introducing an escape hatch.

NOTE Confidence: 0.8784534475

5f4cffa4-6157-4bf2-a506-470ba7b1984f
01:04:40.290 --> 01:04:43.020
For notice guard lock and notice guard

NOTE Confidence: 0.8784534475

569d2a79-2c27-4b17-a011-a7fa1e17b93d
01:04:43.020 --> 01:04:45.310
seat or lock. That's reasonable.

NOTE Confidence: 0.8784534475

f7fb2235-ca8a-4688-9d6d-df850e831ff0
01:04:45.310 --> 01:04:49.230
Previously, we didn't have an escape hatch,

NOTE Confidence: 0.8784534475

7f2aa2d3-fb50-4ebd-a76c-82e4bb59db3d
01:04:49.230 --> 01:04:51.345
and we just told users that if they they

NOTE Confidence: 0.8784534475

2954341e-326f-4cca-a09d-c56a266cc9bd
01:04:51.345 --> 01:04:53.496
tried to do this unusual thing, I guess.

NOTE Confidence: 0.8784534475

7fc86247-3769-42f1-8337-7f4fbc323f25
01:04:53.496 --> 01:04:55.547
I guess I can sketch it out.

NOTE Confidence: 0.8784534475

0ad1ffab-6c71-4cda-87dc-38a204fde265
01:04:55.550 --> 01:04:59.390
So one example where you can write unusual

NOTE Confidence: 0.8784534475

f9ea3a8e-de28-43d6-94dd-376499072b07
01:04:59.390 --> 01:05:01.902
code, which is technically cromulent,

NOTE Confidence: 0.8784534475

16ceb0ef-9279-4ce4-a71d-252f923121dc
01:05:01.902 --> 01:05:05.250
you could say something like instead of.

NOTE Confidence: 0.8784534475

2a10c6ad-651a-414f-8e19-9451f253465a
01:05:05.250 --> 01:05:08.126
What is it? Mutex? No, it's Lockhart.

NOTE Confidence: 0.8784534475

ac8581c6-4979-4128-8734-4e375f0adbe1
01:05:08.126 --> 01:05:10.842
So if you have a global scope like a

NOTE Confidence: 0.8784534475

5cb33746-b363-4a34-b182-38fee24fab32
01:05:10.842 --> 01:05:14.850
mutex mute, and then you say lock guard.

NOTE Confidence: 0.8784534475

ec2cdf4f-3d1b-4abc-996e-a21ea6139355
01:05:14.850 --> 01:05:19.168
Guard. Like hard mute.

NOTE Confidence: 0.8784534475

412399fc-6378-4d05-b465-8859722c9c6b
01:05:19.168 --> 01:05:22.684
Then you can do Coolock stuff.

NOTE Confidence: 0.8784534475

a9e4a80e-5d02-42a1-b5da-df336f1b87a5
01:05:22.690 --> 01:05:28.130
Do cool stuff and then when it's destroyed.

NOTE Confidence: 0.8784534475

75290eab-b7c1-49b3-b872-5b0e6268e016
01:05:28.130 --> 01:05:30.070
This is not that language.

NOTE Confidence: 0.8784534475

64ba7e40-abc9-4980-9efb-7f702947a7a0
01:05:30.070 --> 01:05:33.090
Uh. When it is destroyed,

NOTE Confidence: 0.8784534475

9334511f-a861-4195-9132-55aa9f0c2fe6
01:05:33.090 --> 01:05:34.206
the Lockhart is destroyed.

NOTE Confidence: 0.8784534475

889327a1-c746-44b3-8f32-a9fc7d4d3c29
01:05:34.206 --> 01:05:36.638
So this you can do if you name it.

NOTE Confidence: 0.8784534475

f5ee562e-e90b-4423-aa1d-8b31fca6b316
01:05:36.640 --> 01:05:39.106
We marked all of the lock guards in the

NOTE Confidence: 0.8784534475

bf24390b-b1d8-42cf-9108-04efad2ed06b
01:05:39.106 --> 01:05:41.686
STL as either notice guard on the type,

NOTE Confidence: 0.8784534475

31032b7c-6faa-4a8b-bd55-abf52229f365
01:05:41.690 --> 01:05:43.160
or if they have multiple constructors,

NOTE Confidence: 0.8784534475

edc09099-6e73-43d4-831f-be0aef313df7
01:05:43.160 --> 01:05:44.427
some of which should be notice guard.

NOTE Confidence: 0.8784534475

2c548c7e-102e-4d04-87b7-d4bb290320e5
01:05:44.430 --> 01:05:46.236
We mark it on the constructors so

NOTE Confidence: 0.8784534475

902a682e-aaa7-44bb-9e1f-8a4a697cc253
01:05:46.236 --> 01:05:48.328
that if you accidentally say this,

NOTE Confidence: 0.8784534475

9dccd2ee-57db-4416-93e0-3608e17aa09b
01:05:48.330 --> 01:05:50.004
which constructs a temporary and then

NOTE Confidence: 0.8784534475

375f18a3-7bdc-4746-ab12-739e73ec4606
01:05:50.004 --> 01:05:52.130
drops it on the floor immediately,

NOTE Confidence: 0.8784534475

4328f6c8-9ef7-42e9-a259-b44dbbf7a528
01:05:52.130 --> 01:05:53.894
that is dangerous because you are

NOTE Confidence: 0.8784534475

5d66c315-c095-4335-9b30-a1b7663426d4
01:05:53.894 --> 01:05:55.739
not actually locked when you do this.

NOTE Confidence: 0.8784534475

1fd5875e-4541-4ad8-b8f5-cac57c759b30
01:05:55.740 --> 01:05:58.316
You've destroyed it at the semi colon.

NOTE Confidence: 0.8784534475

d09385c2-e844-41ce-a13e-b922af3ac578
01:05:58.320 --> 01:05:59.530
So that is a very,

NOTE Confidence: 0.8784534475

31e56da5-7d8c-4968-8526-1b3e1932c378
01:05:59.530 --> 01:06:01.390
very important thing to mark that

NOTE Confidence: 0.8784534475

a292db4e-5c95-47f6-8e4b-13d8e43e759f
01:06:01.390 --> 01:06:03.139
catches a whole bunch of bugs.

NOTE Confidence: 0.8784534475

801445ce-2e84-4c91-8190-d34c2f81712b
01:06:03.140 --> 01:06:06.500
However, it can occasionally use validly.

NOTE Confidence: 0.8784534475

00eb6d07-ebdc-4c98-950b-4477fceac308
01:06:06.500 --> 01:06:08.490
That's if somebody writes something

NOTE Confidence: 0.8784534475

827d0f84-64ee-49a2-b64a-8276ed03022e
01:06:08.490 --> 01:06:13.710
like this. Comma do cool stuff.

NOTE Confidence: 0.8784534475

00c8f0d6-9ab7-4c04-926f-e1041cd3e151
01:06:13.710 --> 01:06:15.920
Awesome stuff.

NOTE Confidence: 0.8784534475

7f3fa98c-cc08-41f5-922a-75cb38bb4415
01:06:15.920 --> 01:06:17.648
This constructs a temporary,

NOTE Confidence: 0.8784534475

419ade18-0598-4f38-ab4b-6c94aeeee673
01:06:17.648 --> 01:06:19.376
suspends it in midair,

NOTE Confidence: 0.8784534475

810b3a90-d58d-4d80-a5f2-1c8577df62f9
01:06:19.380 --> 01:06:21.165
does a bunch of other stuff through

NOTE Confidence: 0.8784534475

236f8853-f562-4483-8c1c-395784b52d1d
01:06:21.165 --> 01:06:21.675
common expressions,

NOTE Confidence: 0.8784534475

aa8c7505-e951-4e9d-9739-c20ab7c18509
01:06:21.680 --> 01:06:24.290
and then at the end of the full expression

NOTE Confidence: 0.8784534475

3ed07d61-e958-4faf-a784-ea5b1310b21e
01:06:24.290 --> 01:06:27.159
or the semi colon in ordinary human speak,

NOTE Confidence: 0.8784534475

14a70e7c-c82e-40d7-991f-ac75b23f327a
01:06:27.160 --> 01:06:31.288
the temporaries are destroyed.

NOTE Confidence: 0.8784534475

604e8068-38ff-40fa-a208-3438b2378706
01:06:31.290 --> 01:06:32.060
Nicole asked.

NOTE Confidence: 0.8784534475

db73640b-52a5-48ad-8067-7cc1a9e95741
01:06:32.060 --> 01:06:33.985
Doesn't that create a default

NOTE Confidence: 0.8784534475

328f61d9-ce4d-46b4-ac4f-1ed89a9e8d70
01:06:33.985 --> 01:06:35.840
constructed lock guard named Mute?

NOTE Confidence: 0.890144025

bfbc54f8-8e8b-4904-b597-5107641d8fc9
01:06:38.350 --> 01:06:40.038
Let me think on.

NOTE Confidence: 0.695703966153846

03cbadd6-622f-4780-ba26-d71dcc571a38
01:06:42.170 --> 01:06:43.892
With uh there, I think the answer

NOTE Confidence: 0.695703966153846

62f934af-7e67-46e1-aa73-dfcbe1dece8b
01:06:43.892 --> 01:06:45.568
is different for braces or parents.

NOTE Confidence: 0.695703966153846

b210c2d3-f900-4b35-a380-b942c96afcb6
01:06:45.570 --> 01:06:48.504
I always get this wrong by itself.

NOTE Confidence: 0.695703966153846

07c25b9a-cc47-4775-ac10-32b3cbd2bda1
01:06:48.504 --> 01:06:52.089
11 case will do that.

NOTE Confidence: 0.695703966153846

e70b8070-9eb3-4913-859c-7c3a963c094f
01:06:52.090 --> 01:06:53.986
I think with parens it doesn't.

NOTE Confidence: 0.695703966153846

89c63d57-d0ee-44d1-b381-fc5adc243706
01:06:53.990 --> 01:06:58.310
It does lock guard with parens.

NOTE Confidence: 0.695703966153846

620e7043-951f-44b1-b4d4-c5213696ab13
01:06:58.310 --> 01:07:00.386
I want to say this one.

NOTE Confidence: 0.695703966153846

e9d1e0ed-1f6d-4db4-9e55-18939ced1a28
01:07:00.390 --> 01:07:01.530
Actually creates the default

NOTE Confidence: 0.695703966153846

0e86c000-a6e3-4f26-b765-af2076271450
01:07:01.530 --> 01:07:02.670
constructed one named mute.

NOTE Confidence: 0.695703966153846

792edefa-fbac-451c-8101-6058db088d12
01:07:02.670 --> 01:07:04.990
This one constructs the temporary,

NOTE Confidence: 0.695703966153846

e665b28d-cbe4-4a9a-991f-528dc94f5ec0
01:07:04.990 --> 01:07:08.092
but I'm not 100% certain we can

NOTE Confidence: 0.695703966153846

a62fd0c5-eb60-4d6e-ac38-164cd0796eea
01:07:08.092 --> 01:07:10.247
actually check on Compiler Explorer.

NOTE Confidence: 0.695703966153846

7bbb96e4-1cab-4a61-bead-0ba3db6ec4fd
01:07:10.250 --> 01:07:12.308
Open up console.org in the common expression.

NOTE Confidence: 0.695703966153846

913badcd-008d-47e4-8f91-f110fd8c78f2
01:07:12.310 --> 01:07:13.750
It can't be a declaration anyway,

NOTE Confidence: 0.695703966153846

fa3e29d9-54ce-4002-ac4a-075316eca466
01:07:13.750 --> 01:07:16.528
so it should yes, be fine,

NOTE Confidence: 0.695703966153846

7211719f-63bc-44bf-9fc7-443bd023dd13
01:07:16.530 --> 01:07:20.340
but Nicole was asking about the.

NOTE Confidence: 0.695703966153846

d67db4cd-369a-46b8-b969-5e30e7e775aa
01:07:20.340 --> 01:07:23.036
The the case where it's just by itself,

NOTE Confidence: 0.695703966153846

5df2f380-fdf5-4b01-9420-722a9156e820
01:07:23.040 --> 01:07:24.620
which I've very briefly depicted.

NOTE Confidence: 0.695703966153846

81ded9fa-d6fd-4128-85a7-7229828a3308
01:07:24.620 --> 01:07:27.340
So that's the difference between

NOTE Confidence: 0.695703966153846

f3deb40f-cafc-41c6-9290-0851c8871acb
01:07:27.340 --> 01:07:30.497
if you've got a text me out

NOTE Confidence: 0.695703966153846

e051f7e7-ea91-47f7-bb81-d2d00f229282
01:07:30.497 --> 01:07:34.000
and then you have a lock guard.

NOTE Confidence: 0.695703966153846

d972ee97-6013-478a-a38a-f77feff93c2c
01:07:34.000 --> 01:07:39.284
Randgaard one. Versus lockhard.

NOTE Confidence: 0.695703966153846

ccb6884a-0411-4b9c-a445-6ad0368ce8e1
01:07:39.284 --> 01:07:46.880
Race car 2. OK, what happens on 20 um?

NOTE Confidence: 0.695703966153846

2780a823-7f48-43b7-ad10-49ef646e319b
01:07:46.880 --> 01:07:47.915
6 cannot deduce.

NOTE Confidence: 0.695703966153846

705c27e2-19f5-415f-aec2-c262c22e46e8
01:07:47.915 --> 01:07:50.743
But let's just provide mutex here so we

NOTE Confidence: 0.695703966153846

9a9295c4-3bb9-4c54-a843-5121fcc147e0
01:07:50.743 --> 01:07:53.463
don't have to deal with thinking about CTAD.

NOTE Confidence: 0.695703966153846

99174674-7a87-49e2-bf1e-f3cd28d9f3fa
01:07:53.470 --> 01:07:55.228
Bust up our reduction. U tax?

NOTE Confidence: 0.695703966153846

cd503c9c-2181-4de1-8771-8428a15f165f
01:07:55.230 --> 01:07:56.470
No, that's not a thing.

NOTE Confidence: 0.695703966153846

cbe5424e-32f2-4f6d-abb6-67a757025271
01:07:56.470 --> 01:07:58.600
There we go.

NOTE Confidence: 0.695703966153846

4cb6ae74-d4e0-4e45-a4aa-bbf1256688e6
01:07:58.600 --> 01:07:59.728
OK, um, six.

NOTE Confidence: 0.695703966153846

3cbfcbb1-ad24-4998-88ff-4e88f6b7ac8e
01:07:59.728 --> 01:08:00.104
OK,

NOTE Confidence: 0.695703966153846

08f20346-06b3-4add-85bb-9214f53d640f
01:08:00.104 --> 01:08:02.360
so six is trying to default

NOTE Confidence: 0.695703966153846

66139081-1893-4df3-89bd-96df3ab38438
01:08:02.447 --> 01:08:04.667
construct become the Sept.

NOTE Confidence: 0.835280161818182

fb5b84e2-4f50-480e-a09f-9c1c05b045f5
01:08:06.910 --> 01:08:09.034
Yes, so this. The parentheses are

NOTE Confidence: 0.835280161818182

78d427aa-a007-4ff8-afd9-69bd79be4f85
01:08:09.034 --> 01:08:10.790
essentially not doing anything here.

NOTE Confidence: 0.835280161818182

b2f6146c-cb30-4186-b223-4c3bf6bdd700
01:08:10.790 --> 01:08:11.955
They're wrapping the name of

NOTE Confidence: 0.835280161818182

d33b70f9-5f99-40da-a88d-e401ff7cb529
01:08:11.955 --> 01:08:12.887
the variable in parentheses.

NOTE Confidence: 0.835280161818182

96ab2f31-a000-46fc-9909-f672f8bb7fbc
01:08:12.890 --> 01:08:15.207
So this is not constructing a temporary,

NOTE Confidence: 0.835280161818182

98203ef2-044e-4c4e-ad29-0a7ac53eb30c
01:08:15.210 --> 01:08:16.578
it's trying to construct a name

NOTE Confidence: 0.835280161818182

a1dad12d-63f3-4e51-a177-be0b5d943d26
01:08:16.578 --> 01:08:17.490
variable with no arguments,

NOTE Confidence: 0.835280161818182

5015ef63-337f-4fee-b0a2-0c88e6e6add5
01:08:17.490 --> 01:08:18.610
and here it's complaining there

NOTE Confidence: 0.835280161818182

197248ef-2374-4d76-83f4-7072141699b8
01:08:18.610 --> 01:08:19.506
is no default constructor.

NOTE Confidence: 0.835280161818182

b236d981-d9af-43e1-8c1b-eb3849f80393
01:08:19.510 --> 01:08:21.088
So you're right.

NOTE Confidence: 0.835280161818182

96a0d9d6-e452-49fd-9b42-bf98d70f2d69
01:08:21.088 --> 01:08:24.176
But with braces, this does construct

NOTE Confidence: 0.835280161818182

d637c1e9-6aa9-4359-b8bc-69b62bd04f0d
01:08:24.176 --> 01:08:27.690
a temporary and throw it away and.

NOTE Confidence: 0.835280161818182

b2723296-5186-417e-b8bb-be10ab3ae76e
01:08:27.690 --> 01:08:32.910
We get um here by my.

NOTE Confidence: 0.835280161818182

b5ef6ae9-96c4-4b9f-9e48-68d6376a8eda
01:08:32.910 --> 01:08:34.060
Why am I getting undeclared

NOTE Confidence: 0.835280161818182

4cac46ce-1dca-4cce-9b34-8924dce69a66
01:08:34.060 --> 01:08:35.210
identified needs to be called.

NOTE Confidence: 0.835280161818182

d472cf1f-062d-424b-9ad7-7157ebe2a855
01:08:35.210 --> 01:08:36.360
It needs to be lock,

NOTE Confidence: 0.835280161818182

69f81af4-7bd8-4c15-8eba-c93c0956e917
01:08:36.360 --> 01:08:37.104
guard, mutex,

NOTE Confidence: 0.835280161818182

d79178df-2fbf-447d-8f0e-c3eeb5553754
01:08:37.104 --> 01:08:39.336
mute as opposed to guard 2.

NOTE Confidence: 0.508508194

82f7a571-1646-44e2-8fb6-1925206c125b
01:08:41.550 --> 01:08:43.134
Lockhart mutex. Ohh.

NOTE Confidence: 0.508508194

59c40a15-2bf4-4083-926b-a4ffff95ca2d
01:08:43.134 --> 01:08:47.349
That's right. Duh. Thank you.

NOTE Confidence: 0.508508194

9fd0afbf-587a-4141-a629-3d4a21005a20
01:08:47.350 --> 01:08:48.930
Try to construct from mute.

NOTE Confidence: 0.508508194

84305238-edda-4dbf-891b-32deac5e539f
01:08:48.930 --> 01:08:50.482
Um, here we go.

NOTE Confidence: 0.508508194

260cc202-e84e-4a22-81eb-ec409ecbdded
01:08:50.482 --> 01:08:51.761
Yeah, discarding return value.

NOTE Confidence: 0.508508194

552f9b39-7931-4370-a07b-c01da6a7d24a
01:08:51.761 --> 01:08:53.840
So this one makes a temporary and

NOTE Confidence: 0.508508194

aa1e9c57-7ca1-417f-b983-cbdf5a43da0c
01:08:53.897 --> 01:08:55.689
then does nothing with it because we

NOTE Confidence: 0.508508194

e769df6f-2a74-422b-92bc-fe67ef0c4a98
01:08:55.689 --> 01:08:57.196
forgot to say guard with parentheses.

NOTE Confidence: 0.508508194

53d2bab2-0b10-423c-91de-864228ab8147
01:08:57.196 --> 01:08:58.048
If you tried this,

NOTE Confidence: 0.508508194

68836928-ff14-4027-a439-f110ce94d38b
01:08:58.050 --> 01:09:01.067
this would really be redeclaring a variable.

NOTE Confidence: 0.508508194

8e074569-3353-4f3f-9bc8-8fc657d5a448
01:09:01.070 --> 01:09:03.986
If mute is already around in the same scope.

NOTE Confidence: 0.508508194

264b7dba-d5cc-42dd-a67f-171123be1ec8
01:09:03.990 --> 01:09:05.690
Redefinition basically different basic types.

NOTE Confidence: 0.508508194

c0ed26f9-9a6d-4d6f-aad4-fa83d2ce0fac
01:09:05.690 --> 01:09:08.306
But if this were global scope,

NOTE Confidence: 0.508508194

d87b0e77-72b8-4562-a258-9b0d1f8f64c0
01:09:08.310 --> 01:09:10.146
you could get away with this.

NOTE Confidence: 0.508508194

ece22709-bbe5-4410-b274-42768b2c63d1
01:09:10.150 --> 01:09:11.510
And there we go.

NOTE Confidence: 0.508508194

3e86320b-1cde-4b08-992e-7f1dd2bfea24
01:09:11.510 --> 01:09:12.530
Perfect default constructor.

NOTE Confidence: 0.508508194

50943f8d-c6f6-4ff5-860c-8d1904e966a5
01:09:12.530 --> 01:09:16.296
OK, so our reason to use braces.

NOTE Confidence: 0.508508194

24b47298-c28b-4671-9369-97bc2e10b8b0
01:09:16.300 --> 01:09:17.980
And so essentially what Alex is doing

NOTE Confidence: 0.508508194

3f893081-2031-49df-8e71-71a7c6c4e830
01:09:17.980 --> 01:09:19.632
here is we had very intentionally

NOTE Confidence: 0.508508194

3749e81c-76cb-4ecd-9cf7-5b73234a0330
01:09:19.632 --> 01:09:21.669
said we're just going to mark these

NOTE Confidence: 0.508508194

17e37e83-414f-4fa8-b91c-d34dafe799eb
01:09:21.721 --> 01:09:23.681
constructors and if you try to do the

NOTE Confidence: 0.508508194

bb45eb8f-781c-4736-8ea0-8f262a877240
01:09:23.681 --> 01:09:25.791
fancy thing with comic expressions,

NOTE Confidence: 0.508508194

6af8006e-978e-4f89-90d8-7b432f90e0e7
01:09:25.791 --> 01:09:28.476
well, don't be so clever.

NOTE Confidence: 0.508508194

f0ca3942-6808-4009-b878-1580a3f56eee
01:09:28.480 --> 01:09:31.200
And it it is reasonable to have a

NOTE Confidence: 0.508508194

ebe720d4-8b46-4a90-a853-c14671e1e5a7
01:09:31.200 --> 01:09:33.931
escape macro here in case you really do

NOTE Confidence: 0.508508194

2b799a89-d9b8-4956-94ab-7c44fbc6570c
01:09:33.931 --> 01:09:37.638
want to suppress the warning on those,

NOTE Confidence: 0.508508194

05e7a0cb-d027-42e2-b6e3-c2531428a307
01:09:37.640 --> 01:09:39.075
but without having to refactor

NOTE Confidence: 0.508508194

f162a158-9850-49e1-a4e5-bd0b7854cbe7
01:09:39.075 --> 01:09:41.020
code as long as it's enabled.

NOTE Confidence: 0.508508194

ee98dcbc-0cda-4c40-8101-77f8be24e023
01:09:41.020 --> 01:09:43.692
As long as the no discard warning for

NOTE Confidence: 0.508508194

6fcb91da-830f-4725-a1cc-17fd37e16806
01:09:43.692 --> 01:09:45.957
the guards is enabled by default,

NOTE Confidence: 0.508508194

c8b72102-5c1d-4a3e-b5d9-2f3a68482f14
01:09:45.960 --> 01:09:47.148
I have no objection to the.

NOTE Confidence: 0.508508194

04fe2f26-1e7b-4764-b00a-56aea137e7fe
01:09:47.150 --> 01:09:48.209
Escape hatch here.

NOTE Confidence: 0.508508194

96ff3f2a-4bb5-4f5b-a326-61814adf16e4
01:09:48.209 --> 01:09:48.562
Essentially,

NOTE Confidence: 0.508508194

5d52ef12-1ecc-4e0b-aa68-81a80e8dc761
01:09:48.562 --> 01:09:50.327
if that lets people enable

NOTE Confidence: 0.508508194

f5134992-c400-4105-b0fd-3e52da82a529
01:09:50.327 --> 01:09:52.274
notice card for most of the time

NOTE Confidence: 0.508508194

f3dfb0d3-cb24-48af-bec8-9e458f8f788a
01:09:52.274 --> 01:09:53.630
and write their usual code,

NOTE Confidence: 0.508508194

4bfe084f-7455-4250-a09e-729f77c81f91
01:09:53.630 --> 01:09:54.680
then that's reasonable.

NOTE Confidence: 0.699838563333333

7863d7fd-2bf7-49d6-9545-f514a8424f30
01:09:56.770 --> 01:09:59.983
OK, so if the notice card locks the press,

NOTE Confidence: 0.699838563333333

71d99237-85c0-41d4-9552-6ccffb516b8c
01:09:59.990 --> 01:10:01.348
we might want to rephrase that message,

NOTE Confidence: 0.699838563333333

70f2b049-a47d-4b8d-87ea-fa0d2e7faac6
01:10:01.350 --> 01:10:03.429
but just the existence of the macro is fine,

NOTE Confidence: 0.699838563333333

552721d4-8420-4a91-a0c0-3d2b6afe2198
01:10:03.430 --> 01:10:05.518
expand and nothing. Otherwise,

NOTE Confidence: 0.699838563333333

1e0dc852-8048-422e-abf5-dcd98c91da19
01:10:05.518 --> 01:10:10.680
no discard lock and no discard ctor lock. OK.

NOTE Confidence: 0.803549958333333

aa0e80df-f803-45f9-8885-332c4cf88ebd
01:10:13.140 --> 01:10:15.120
Uh, then we have ones about,

NOTE Confidence: 0.803549958333333

37bdcc08-e3ce-4d7f-aa38-c5569041dd66
01:10:15.120 --> 01:10:17.120
um, these are for constructors.

NOTE Confidence: 0.803549958333333

6ec3c139-a517-48cc-a112-6a3755ae5221
01:10:17.120 --> 01:10:19.367
Thread or if you create a thread

NOTE Confidence: 0.803549958333333

59df5cb7-98c4-4765-b5b5-9a17a51d78b4
01:10:19.367 --> 01:10:21.868
and then just drop it on the floor,

NOTE Confidence: 0.803549958333333

4bd848b9-fca0-46b5-829a-b1213ba664c2
01:10:21.870 --> 01:10:23.556
you never joined or detached it.

NOTE Confidence: 0.803549958333333

82d24cb6-c7f3-44d9-9bfc-c185144a8b69
01:10:23.560 --> 01:10:24.973
Well, that's bad.

NOTE Confidence: 0.803549958333333

b87f0f2d-eb7c-4c65-b6f5-38500974c82f
01:10:24.973 --> 01:10:28.546
It's going to terminate with J thread.

NOTE Confidence: 0.803549958333333

f7fe0009-115a-4f05-85d0-35d87df221e4
01:10:28.546 --> 01:10:29.670
That's interesting.

NOTE Confidence: 0.803549958333333

f47ee391-12d1-4f6a-ae61-32c7ddf654d6
01:10:29.670 --> 01:10:32.764
Do we Mark J thread seydor as?

NOTE Confidence: 0.803549958333333

1363a5ff-94e8-4b24-b6e5-9af558f55a0f
01:10:32.770 --> 01:10:34.660
Notice card.

NOTE Confidence: 0.803549958333333

58c9f266-858d-4acc-9ed2-4b3d1f283d12
01:10:34.660 --> 01:10:36.585
It is unusual to construct a J

NOTE Confidence: 0.803549958333333

70d8ce8a-25af-426b-82f8-15e6e8de0a56
01:10:36.585 --> 01:10:38.609
thread and then do nothing with it.

NOTE Confidence: 0.803549958333333

0cd82c18-bea5-422d-b922-3e52f64b13dc
01:10:38.610 --> 01:10:39.340
Let's see.

NOTE Confidence: 0.23137894

d5d77f07-2bc7-4594-a06b-e3085dd73fa5
01:10:43.720 --> 01:10:46.933
Chaithra. OK, we did in fact Mark J

NOTE Confidence: 0.23137894

1c33e0a0-f65c-419f-b64b-531e4156dc1a
01:10:46.933 --> 01:10:48.150
thread sedoris notice card seydor.

NOTE Confidence: 0.23137894

c1665645-b328-460b-9f12-d310d3c0f270
01:10:48.150 --> 01:10:50.246
So Alex is simply providing a reason here,

NOTE Confidence: 0.23137894

9bac3ee0-b86e-4448-a861-707380e2c63a
01:10:50.250 --> 01:10:51.450
and it does seem reasonable that

NOTE Confidence: 0.23137894

1097eb95-4622-457c-8b7d-eeebe224aa85
01:10:51.450 --> 01:10:53.012
you spin up a thread and then

NOTE Confidence: 0.23137894

4f6c7e18-023b-4e3a-8cd1-44f7b4308e98
01:10:53.012 --> 01:10:54.207
immediately join at the end.

NOTE Confidence: 0.23137894

fc1bb132-cbc6-44cc-9131-4fec482c4190
01:10:54.210 --> 01:10:55.477
Why did you bother making a whole

NOTE Confidence: 0.23137894

b2d1a7c0-df59-48aa-a17b-9c5d74a1adef
01:10:55.477 --> 01:10:56.939
thread there when you were going to

NOTE Confidence: 0.23137894

2f67decb-958e-4de1-9b67-82115044c128
01:10:56.939 --> 01:10:57.823
do anything else simultaneously?

NOTE Confidence: 0.23137894

a86cf6b1-5a6e-43ee-a1e3-433027e2ef31
01:10:57.830 --> 01:10:58.740
Very unusual.

NOTE Confidence: 0.23137894

fe9816cd-a80f-4371-9434-27f84548a10c
01:10:58.740 --> 01:11:01.470
Probably wanted to wait until the

NOTE Confidence: 0.23137894

6ab29be4-fa91-4319-a6ba-6971492e1e31
01:11:01.470 --> 01:11:04.499
end of the scope and then join.

NOTE Confidence: 0.75640601

e7936efd-9ed8-487f-8641-85302c46022f
01:11:06.670 --> 01:11:08.368
Yeah, so that's reasonable to have.

NOTE Confidence: 0.75640601

e865b32c-493f-4d01-abe8-85e9ace81b1d
01:11:08.370 --> 01:11:12.390
Async famously also has the blocking.

NOTE Confidence: 0.75640601

67689bce-8290-4c5d-8cec-ae87e744198e
01:11:12.390 --> 01:11:17.113
Yep. And getting a future if

NOTE Confidence: 0.75640601

57b3af7a-e594-4018-90e2-5f3f3797887e
01:11:17.113 --> 01:11:19.687
you get and then discard, yes.

NOTE Confidence: 0.75640601

d78e9a85-5465-44c2-b9bb-4e3399185423
01:11:19.687 --> 01:11:22.460
OK, so these are all reasonable to have.

NOTE Confidence: 0.846907538

237dad2a-b45f-40d6-884a-d052bab3aa9a
01:11:24.960 --> 01:11:26.454
OK, so I like the existence

NOTE Confidence: 0.846907538

91bd8175-4be2-4552-bef9-f7f1c99e97c4
01:11:26.454 --> 01:11:27.450
of all these messages.

NOTE Confidence: 0.799884302413793

29fa9d6a-10e3-4674-8224-1720df0075fc
01:11:29.480 --> 01:11:32.232
And. We found the I think the allocate

NOTE Confidence: 0.799884302413793

767243ee-fec2-4e99-b612-46ad9382c209
01:11:32.232 --> 01:11:34.720
one was the case where we really

NOTE Confidence: 0.799884302413793

e8591fad-b631-44ca-8106-c721e4eafc95
01:11:34.720 --> 01:11:37.591
needed to do an audit of the STL

NOTE Confidence: 0.799884302413793

b682f92b-1c39-4afd-ae5d-79f65be5e556
01:11:37.591 --> 01:11:39.733
and find all of the occurrences.

NOTE Confidence: 0.799884302413793

ff7069b1-cdc8-4224-b609-ff750bc15d9b
01:11:39.740 --> 01:11:41.428
I'm not as worried about the other ones.

NOTE Confidence: 0.799884302413793

2e3b7504-4cc3-4d21-93f8-028c16ab5502
01:11:41.430 --> 01:11:43.238
I'll I'll go review this later and make

NOTE Confidence: 0.799884302413793

c7a14c89-b6d4-45b6-b654-b1fc9309018e
01:11:43.238 --> 01:11:45.060
sure we're not missing anything obvious,

NOTE Confidence: 0.799884302413793

6e383d36-48b6-4748-8c73-727565f0cd17
01:11:45.060 --> 01:11:47.268
but from a brief glance we're getting like

NOTE Confidence: 0.799884302413793

36088221-1eae-4423-8094-356a29c02130
01:11:47.268 --> 01:11:49.815
all the remove all the unique and so forth.

NOTE Confidence: 0.799884302413793

9dd18d90-6db8-4c07-a2c8-f771ef5b12ae
01:11:49.820 --> 01:11:51.492
So overall the direction

NOTE Confidence: 0.799884302413793

484f6385-9a1b-4012-9e79-da2cebd84c84
01:11:51.492 --> 01:11:53.582
of the PR seems right.

NOTE Confidence: 0.799884302413793

a00eeed3-93ff-404d-a5fe-d9defba2e28c
01:11:53.590 --> 01:11:55.256
And I don't think we're missing anything.

NOTE Confidence: 0.799884302413793

82176492-2be3-4260-8ccd-94e2e47c35bf
01:11:55.260 --> 01:11:56.828
I'm trying to trying to rack my brain.

NOTE Confidence: 0.799884302413793

d202d27e-2c15-4758-9eb4-fb579665ef1b
01:11:56.830 --> 01:11:59.091
Are there other cases where we had

NOTE Confidence: 0.799884302413793

98357682-b719-412c-9208-a30458364962
01:11:59.091 --> 01:12:00.590
definitely applied no discard,

NOTE Confidence: 0.799884302413793

a36faaae-1747-4692-beac-501f8e792f91
01:12:00.590 --> 01:12:03.222
but we didn't provide a reason and

NOTE Confidence: 0.799884302413793

4b415add-8604-4659-a50e-1fca4af62622
01:12:03.222 --> 01:12:05.390
we could provide a reason now.

NOTE Confidence: 0.799884302413793

325c05b9-6e80-46d2-9f7c-ba3d75de67f8
01:12:05.390 --> 01:12:07.070
And this is getting all the ones back,

NOTE Confidence: 0.799884302413793

4307f717-4f30-4ff5-90cc-16ac41afc4b4
01:12:07.070 --> 01:12:08.294
several ones that I did not think of.

NOTE Confidence: 0.799884302413793

01d92e51-84a4-4bba-9f6c-04a6acc67d5f
01:12:08.300 --> 01:12:10.268
So it's great that Alex has done this,

NOTE Confidence: 0.799884302413793

f1d8efca-28c1-4aad-acb5-ec83a9fe23be
01:12:10.270 --> 01:12:13.294
getting all the cases where the reason

NOTE Confidence: 0.799884302413793

41d6c8a5-7f6a-463e-8512-1d19757e1b49
01:12:13.294 --> 01:12:16.350
for notice card was far from obvious.

NOTE Confidence: 0.799884302413793

48c78f8b-c0be-4742-a157-a75b7a2c8fa9
01:12:16.350 --> 01:12:17.610
The other nice thing is that,

NOTE Confidence: 0.799884302413793

2664f782-2732-46fd-a4b6-3dc6d679f94e
01:12:17.610 --> 01:12:19.950
Umm, we talked to Alex earlier.

NOTE Confidence: 0.799884302413793

4b469936-5800-4d28-a872-38fa5ec46734
01:12:19.950 --> 01:12:22.365
This PR originally tried to add reasons,

NOTE Confidence: 0.799884302413793

8cdb71f5-95cf-4c23-9329-fe63b661ffd2
01:12:22.370 --> 01:12:23.890
I think for a lot of pure observers

NOTE Confidence: 0.799884302413793

3c16e607-12c0-404c-95ff-33688cc4af8c
01:12:23.890 --> 01:12:25.230
that ended up being very verbose.

NOTE Confidence: 0.799884302413793

70a2090f-ba57-4dae-9f4b-179ff1ee3fbd
01:12:25.230 --> 01:12:27.930
It changed a zillion lines most of the time.

NOTE Confidence: 0.799884302413793

1932bcc3-9fa8-4b2b-b8e6-09291561c799
01:12:27.930 --> 01:12:29.300
The reason for notice guarding

NOTE Confidence: 0.799884302413793

d007a5cb-76d0-4668-9048-f610c04e68a5
01:12:29.300 --> 01:12:31.336
something is that it's a pure observer

NOTE Confidence: 0.799884302413793

86f33d91-79a6-49b2-869c-ca5ac720b1e9
01:12:31.336 --> 01:12:32.866
and it's not very surprising,

NOTE Confidence: 0.799884302413793

a218982e-ad8a-460c-91df-6519feec78cd
01:12:32.870 --> 01:12:34.520
except for like the empty case

NOTE Confidence: 0.799884302413793

a56b1d4f-e7e7-43af-a954-adc7f07b8aac
01:12:34.520 --> 01:12:35.345
like we discussed,

NOTE Confidence: 0.799884302413793

875715fb-eccb-473c-b0d4-3316899e1cd2
01:12:35.350 --> 01:12:38.286
where if you call you know stood fine,

NOTE Confidence: 0.799884302413793

4ff40a8c-2104-4cec-982d-c3f85aacb809
01:12:38.290 --> 01:12:39.088
you drop it on the floor,

NOTE Confidence: 0.799884302413793

14da2210-bc63-4012-84d4-905febf9c4f9
01:12:39.090 --> 01:12:40.650
you get the notice card warning.

NOTE Confidence: 0.799884302413793

8b46822f-7823-449c-abb8-5d9b6dc5f651
01:12:40.650 --> 01:12:43.590
They're pretty self-explanatory we feel.

NOTE Confidence: 0.799884302413793

172549b9-d946-4450-b2fe-0536135f3f6e
01:12:43.590 --> 01:12:45.564
So using the plain notice card

NOTE Confidence: 0.799884302413793

158bd251-276b-4232-bca1-9e5645d0029f
01:12:45.564 --> 01:12:47.520
for the vast majority of cases.

NOTE Confidence: 0.799884302413793

3a99bde8-8790-4b22-b0c7-7594f9a37f80
01:12:47.520 --> 01:12:49.386
And then using the special macros

NOTE Confidence: 0.799884302413793

ac87212f-d5c4-48e4-88aa-97af9038f27b
01:12:49.386 --> 01:12:51.460
for the cases where it's unusual.

NOTE Confidence: 0.799884302413793

2d887964-01ad-4953-8424-9d754301db66
01:12:51.460 --> 01:12:53.203
It seems to be reasonable for warnings

NOTE Confidence: 0.799884302413793

1d743dbb-170e-4be4-a446-bced91232127
01:12:53.203 --> 01:12:55.117
that do not get admitted that often

NOTE Confidence: 0.799884302413793

ab223534-a225-42f0-8606-1984eb9ce80b
01:12:55.117 --> 01:12:57.090
they only get admitted under you know,

NOTE Confidence: 0.799884302413793

b21ee66a-b9ec-40ef-bb98-b0b2878a2c45
01:12:57.090 --> 01:12:58.280
unusual circumstances and then we

NOTE Confidence: 0.799884302413793

274d7edc-363f-436e-b650-705d85383c88
01:12:58.280 --> 01:13:00.226
just need to ask OK is the user

NOTE Confidence: 0.799884302413793

0e90aa43-b9ed-4b80-a0df-fbf45b80cdda
01:13:00.226 --> 01:13:01.630
going to be confused why they're

NOTE Confidence: 0.799884302413793

5a71bcd2-d866-4f26-98f9-fd6a82df9ab7
01:13:01.630 --> 01:13:02.679
getting notice card here?

NOTE Confidence: 0.799884302413793

df03cb7b-68b2-43dd-a82c-4f5a62264b18
01:13:02.680 --> 01:13:05.677
And the non peer preserver cases are the ones

NOTE Confidence: 0.799884302413793

3f2d7dcf-5b24-4c3e-bbb3-c204bbf70164
01:13:05.677 --> 01:13:08.555
where it seems reasonable to have the macro.

NOTE Confidence: 0.799884302413793

5b367f4b-3e91-4754-a46d-ab8da4749662
01:13:08.560 --> 01:13:10.576
So I'd like the direction of this PR.

NOTE Confidence: 0.799884302413793

3f942d85-b425-4028-9fde-f9e53ab06604
01:13:10.580 --> 01:13:12.848
I will come back to it after this and

NOTE Confidence: 0.799884302413793

5e5233ea-39f4-4705-a725-7525f0f57890
01:13:12.848 --> 01:13:14.995
check all the grammar and make sure

NOTE Confidence: 0.799884302413793

3f23ec2f-822b-4dae-b69c-7c523895fb88
01:13:14.995 --> 01:13:17.100
that we're not missing anything else.

NOTE Confidence: 0.799884302413793

db78df35-40c6-49e4-9eca-54b83f9e26ad
01:13:17.100 --> 01:13:17.278
But.

NOTE Confidence: 0.799884302413793

93f6b2a8-c4ae-4659-a0ed-21c4ee575f23
01:13:17.278 --> 01:13:18.168
I think this is good,

NOTE Confidence: 0.799884302413793

88c8ce7d-a317-410f-a081-53e40599d638
01:13:18.170 --> 01:13:20.102
so I'm going to hold off on

NOTE Confidence: 0.799884302413793

f8e71e16-fb68-40ba-a9a9-55937a64b93e
01:13:20.102 --> 01:13:20.930
submitting this review,

NOTE Confidence: 0.799884302413793

ad30afe1-4a81-4572-be29-8723cf3e70b9
01:13:20.930 --> 01:13:22.505
but hopefully we are able to explore

NOTE Confidence: 0.799884302413793

00513b04-a198-4e37-821a-38f4162011e3
01:13:22.505 --> 01:13:24.012
the reasons for notice card and why

NOTE Confidence: 0.799884302413793

d3375598-24ff-4611-8bde-220b3fae1bba
01:13:24.012 --> 01:13:25.619
you should use it in your own code.

NOTE Confidence: 0.799884302413793

a8f5518e-b86f-4ba6-8b40-bbe15415b6bf
01:13:25.620 --> 01:13:27.425
Especially like even if you're

NOTE Confidence: 0.799884302413793

eee72cd9-f018-411c-aeae-cd75a041ed71
01:13:27.425 --> 01:13:28.869
just maintaining an application.

NOTE Confidence: 0.799884302413793

7de196a1-1dc9-438c-a8cc-367937640ff9
01:13:28.870 --> 01:13:30.874
No discard is useful because everything

NOTE Confidence: 0.799884302413793

ca5c0c48-ddd8-406c-9c1b-5f459cf2498e
01:13:30.874 --> 01:13:32.410
defines functions and calls it.

NOTE Confidence: 0.799884302413793

2fbaf230-364d-4f6e-82f0-da34fef17e39
01:13:32.410 --> 01:13:34.360
But especially especially if you're

NOTE Confidence: 0.799884302413793

ce09cb37-dece-434f-bcd6-3e35bae9f26c
01:13:34.360 --> 01:13:36.310
maintaining a third party library,

NOTE Confidence: 0.799884302413793

686a31ac-eb96-409a-80d3-50368da78570
01:13:36.310 --> 01:13:37.798
you should be using notice card

NOTE Confidence: 0.799884302413793

9feafe32-03ad-4156-bb8e-f0ba6b9629e5
01:13:37.798 --> 01:13:39.070
as much as the STL.

NOTE Confidence: 0.799884302413793

55ed7c65-1c05-44df-8fec-bf5cebb267de
01:13:39.070 --> 01:13:40.631
We are not only putting on all

NOTE Confidence: 0.799884302413793

739c56f8-d1d0-4734-814c-ff178a982b9a
01:13:40.631 --> 01:13:42.059
of our public functions now,

NOTE Confidence: 0.799884302413793

4c073eb1-bc62-4811-b73c-f6f4303db99d
01:13:42.060 --> 01:13:43.901
we're going back and adding it to

NOTE Confidence: 0.799884302413793

f7398967-9dd1-469b-80e0-b9ee01a99d9f
01:13:43.901 --> 01:13:45.359
internal machinery as we update it,

NOTE Confidence: 0.799884302413793

015e4bf2-1341-49e9-b453-e471a6d0a011
01:13:45.360 --> 01:13:47.082
because in our own code we might

NOTE Confidence: 0.799884302413793

6b042129-a0ce-4479-b707-aae95fcd3354
01:13:47.082 --> 01:13:48.400
forget to call something.

NOTE Confidence: 0.799884302413793

ea461801-e212-4ca6-b19d-e024f68d79ed
01:13:48.400 --> 01:13:49.940
Um, and it's so easy to add,

NOTE Confidence: 0.799884302413793

58ac0463-ce81-4299-963e-e7a60cae1cd6
01:13:49.940 --> 01:13:52.439
has essentially no cost to the compiler.

NOTE Confidence: 0.799884302413793

908cfc48-f38a-40bd-adeb-12924d7ca8e9
01:13:52.440 --> 01:13:54.216
Um, because it's just an attribute.

NOTE Confidence: 0.799884302413793

5072c62a-31fb-4ec7-9a99-195d1df554e1
01:13:54.220 --> 01:13:55.204
It can, you know,

NOTE Confidence: 0.799884302413793

ff92128e-0ce5-4233-870c-e808a9131f7e
01:13:55.204 --> 01:13:56.434
digest that token very quickly.

NOTE Confidence: 0.771383846

76405171-0cc2-4441-987a-bf236d1b84d7
01:13:56.440 --> 01:13:59.430
It sets a bit somewhere.

NOTE Confidence: 0.771383846

52b19502-0a7a-40e6-af0b-60e2467eae16
01:13:59.430 --> 01:14:00.086
Saying, hey, you know,

NOTE Confidence: 0.771383846

8f75ee4d-5d0a-4fcd-a941-2ef7c45e62be
01:14:00.086 --> 01:14:01.334
if I ever see this, notice car,

NOTE Confidence: 0.771383846

dc978474-cc85-4635-8d9d-0df3c49262c2
01:14:01.334 --> 01:14:02.606
if I ever see this discarded,

NOTE Confidence: 0.771383846

5d45989c-cd9b-4c8c-b845-bf1a4ca073be
01:14:02.610 --> 01:14:03.726
I should have made a warning,

NOTE Confidence: 0.771383846

26c6e7f8-ba34-4ee3-9fc3-1172f0449331
01:14:03.730 --> 01:14:04.720
but otherwise it has no,

NOTE Confidence: 0.771383846

e7906e66-e0df-4d2a-8b8f-c76c6c6a176b
01:14:04.720 --> 01:14:05.780
you know, interesting costs,

NOTE Confidence: 0.771383846

4e226e10-6cd2-4f9b-8ba0-be27fd341051
01:14:05.780 --> 01:14:06.840
especially the one that

NOTE Confidence: 0.771383846

d14137f2-3635-43c6-8aca-2f6976f5ac39
01:14:06.840 --> 01:14:08.108
doesn't have a message at all.

NOTE Confidence: 0.771383846

e959cca0-55e6-4580-87d3-e5cae6bbf37c
01:14:08.110 --> 01:14:08.918
That's just, you know,

NOTE Confidence: 0.771383846

384f5ee9-321b-4578-968e-9b5619024051
01:14:08.918 --> 01:14:09.726
double bracket notice card.

NOTE Confidence: 0.771383846

f18d4d35-d761-4d6f-ac3e-dfaccd13b675
01:14:09.730 --> 01:14:11.426
Very easy for the compiler to parse that,

NOTE Confidence: 0.771383846

c5cdca07-6877-492f-bea6-2dbbc1a2fa5a
01:14:11.430 --> 01:14:14.895
so we recommend using it as much as possible.

NOTE Confidence: 0.771383846

6d94e844-0790-4f22-a436-635dd7b78159
01:14:14.900 --> 01:14:16.118
OK, let me go through the chat,

NOTE Confidence: 0.771383846

8dabb492-4d2b-43ac-b05c-d14f343ebad5
01:14:16.120 --> 01:14:19.390
see if there's any remaining questions.

NOTE Confidence: 0.771383846

5b6b6f8e-e600-44a5-92cb-6a02f601b2d8
01:14:19.390 --> 01:14:21.952
Let's see, we talked about the the

NOTE Confidence: 0.771383846

145f2298-8ba1-4363-a5a7-758665608a6d
01:14:21.952 --> 01:14:24.450
bug the Cameron has already fixed.

NOTE Confidence: 0.771383846

b0514437-1948-42d7-a898-25a43a6b3066
01:14:24.450 --> 01:14:26.950
Casey advises please use views

NOTE Confidence: 0.771383846

e5fbb587-c6d3-42ca-9cdf-ff70c0d77573
01:14:26.950 --> 01:14:30.056
take while instead of hacking find

NOTE Confidence: 0.771383846

6dcde337-24da-461b-ba7d-6029ce4985a3
01:14:30.056 --> 01:14:32.626
with a side effecting predicate.

NOTE Confidence: 0.771383846

0ed7ed6d-efda-468c-8e13-99175bf1938a
01:14:32.630 --> 01:14:34.442
That is like take elements from

NOTE Confidence: 0.771383846

84890fe2-5589-4d5c-aea5-0e5172453b89
01:14:34.442 --> 01:14:36.434
this view until some condition is

NOTE Confidence: 0.771383846

9194c5a0-ad7b-4e59-b299-4b3900e9d293
01:14:36.434 --> 01:14:38.594
met and that condition could be

NOTE Confidence: 0.771383846

83792b79-4b1f-446a-8fa0-762a5594cdb8
01:14:38.594 --> 01:14:40.368
state accumulated in the predicate.

NOTE Confidence: 0.771383846

6ce89325-dcee-4af7-9ab2-deb7d5ac9732
01:14:40.370 --> 01:14:43.380
Is that correct or the function object?

NOTE Confidence: 0.771383846

00b8de8d-e914-4a05-880c-9184d23e7a3e
01:14:43.380 --> 01:14:45.020
I don't really recommend stateful

NOTE Confidence: 0.771383846

c0b3e491-2f58-4867-ba62-c53ef5687ed3
01:14:45.020 --> 01:14:45.676
function objects,

NOTE Confidence: 0.771383846

cd97367a-64cc-4156-9a03-9c085b59dc21
01:14:45.680 --> 01:14:47.192
but if you're using find right you're

NOTE Confidence: 0.771383846

3d8db5bb-5c72-4182-874b-8a635ac17b99
01:14:47.192 --> 01:14:48.765
going if you're using find and you're

NOTE Confidence: 0.771383846

e8262a06-76e0-4bd7-bb0f-973c7bcc69bc
01:14:48.765 --> 01:14:50.540
hacking it with a side effecting predicate,

NOTE Confidence: 0.771383846

5ff32a2c-c9e5-4155-b0e0-b7f66bf08d9f
01:14:50.540 --> 01:14:52.298
your goal is to change every

NOTE Confidence: 0.771383846

7debd77f-0e6d-443e-84b8-dfedddc63c23
01:14:52.298 --> 01:14:54.799
element up to the first one found

NOTE Confidence: 0.771383846

572a54cc-0d6c-4c8c-a0ea-19eedf0ab13c
01:14:54.799 --> 01:14:56.475
that satisfies some condition,

NOTE Confidence: 0.771383846

a746e3c6-1193-43b4-87e6-8a879dcc8831
01:14:56.480 --> 01:14:56.782
right?

NOTE Confidence: 0.771383846

8a298f55-da40-4c9b-904b-e430369f5f48
01:14:56.782 --> 01:14:58.594
So you should pull out some

NOTE Confidence: 0.771383846

572dcf68-bd11-4ae5-b051-27a5268bdae5
01:14:58.594 --> 01:15:00.160
condition into a predicate,

NOTE Confidence: 0.771383846

7176fd27-cbce-494d-97d8-481c8e87ed06
01:15:00.160 --> 01:15:01.826
use that with use take awhile and

NOTE Confidence: 0.771383846

2cc985a5-01bf-4328-b885-d6d9095e85e6
01:15:01.826 --> 01:15:03.655
now you have a range of exactly

NOTE Confidence: 0.771383846

dcef7c76-a659-4633-bffe-a50070f177c9
01:15:03.655 --> 01:15:05.316
the elements that you, you know,

NOTE Confidence: 0.771383846

ffb9e82d-11f4-4d43-b1a8-ac47370cee2f
01:15:05.316 --> 01:15:07.700
wanted to modify and you can use that

NOTE Confidence: 0.771383846

83ee3b16-4be3-4d2a-83ff-e497b4ac1f09
01:15:07.764 --> 01:15:10.298
instead of this weird hacked find thing.

NOTE Confidence: 0.771383846

03680919-e8ca-4a38-af5c-6b9dd3da7a21
01:15:10.300 --> 01:15:11.833
Yeah, and I think I've only seen

NOTE Confidence: 0.771383846

e2a946d5-32e2-4bc9-932d-64dae4d38e93
01:15:11.833 --> 01:15:13.568
one or two occurrences of that.

NOTE Confidence: 0.771383846

a8a8add7-4552-4ad5-8939-0ff37af226de
01:15:13.570 --> 01:15:16.150
In the the computer itself.

NOTE Confidence: 0.771383846

8145ee6c-6756-46f2-8eb7-a40142b308f0
01:15:16.150 --> 01:15:16.700
But yeah,

NOTE Confidence: 0.771383846

a47a66c9-aa06-4bb6-9c3f-904e16134f62
01:15:16.700 --> 01:15:18.350
that does seem like good advice.

NOTE Confidence: 0.771383846

d0e10847-a80a-4a2d-a2d0-7a143198b0fc
01:15:18.350 --> 01:15:20.062
That much clearer expression

NOTE Confidence: 0.771383846

c97fb825-adab-410e-8f0f-6af69943def4
01:15:20.062 --> 01:15:21.346
of programming intent.

NOTE Confidence: 0.771383846

b7e568ec-b59e-4b77-b5f4-a7bcf57162dc
01:15:21.350 --> 01:15:21.682
Yeah,

NOTE Confidence: 0.771383846

f0731808-7728-4aac-b8fb-db3b2b926584
01:15:21.682 --> 01:15:24.006
just just write what you mean rather

NOTE Confidence: 0.771383846

fe020e27-a9e5-4a64-bf4c-7799b467cb0b
01:15:24.006 --> 01:15:26.428
than sort of mingling the STL into

NOTE Confidence: 0.771383846

79873c14-80c1-4892-ac9e-8b1fd4596c85
01:15:26.428 --> 01:15:28.510
something that does what you want.

NOTE Confidence: 0.771383846

49948806-0fbd-410f-b9a5-c2044eb78073
01:15:28.510 --> 01:15:30.351
But the reason we have named algorithms

NOTE Confidence: 0.771383846

daff105d-663e-4520-92b2-2f2aa6fec90c
01:15:30.351 --> 01:15:32.488
is that you can see the name and you

NOTE Confidence: 0.771383846

9dffe84a-82ec-41a0-862a-d8c81056997c
01:15:32.488 --> 01:15:34.337
have some idea of what to expect if

NOTE Confidence: 0.771383846

c9fb5045-bc67-49aa-81ca-54c4b84f2445
01:15:34.337 --> 01:15:36.152
you get a find that's doing fancy,

NOTE Confidence: 0.771383846

5a2e95c7-d419-44b2-8cbb-fd8048ab59bd
01:15:36.152 --> 01:15:38.262
unusual, side effective things you

NOTE Confidence: 0.771383846

a0734a7b-74ca-4ccb-acef-5e5dcc316f39
01:15:38.262 --> 01:15:41.039
probably shouldn't be in the first place.

NOTE Confidence: 0.771383846

5b06abd2-2c09-439b-9a74-3e483d7760be
01:15:41.040 --> 01:15:43.714
I'm checking the chat for anything else.

NOTE Confidence: 0.771383846

992c780e-0f76-46e6-a6ae-9be77925e39b
01:15:43.720 --> 01:15:45.709
Hi Casey's Kitty.

NOTE Confidence: 0.771383846

7bec07a4-a535-4eaa-af69-0eabd9f1ff90
01:15:45.709 --> 01:15:47.698
Uh, let's see.

NOTE Confidence: 0.771383846

528d99cf-f9a3-4c4e-8f0c-687da93e3d2f
01:15:47.700 --> 01:15:47.941
Uh,

NOTE Confidence: 0.771383846

9e19cf0c-2f0d-4b26-89f7-88cb532a7e0b
01:15:47.941 --> 01:15:48.423
let's see.

NOTE Confidence: 0.771383846

ecd6bf86-1519-4a12-b4b2-23c3c4c3c001
01:15:48.423 --> 01:15:49.869
Nicole does not like the name

NOTE Confidence: 0.771383846

6d248740-56bf-4d5d-982c-1d9f0f033135
01:15:49.869 --> 01:15:51.335
allocated object because it only

NOTE Confidence: 0.771383846

13afe201-2e13-4d06-a87e-5855b8c5b9b3
01:15:51.335 --> 01:15:52.515
allocates storage for objects,

NOTE Confidence: 0.771383846

c8125a17-9d12-4ec0-805a-522dfcc24f9b
01:15:52.520 --> 01:15:53.564
not actual objects.

NOTE Confidence: 0.771383846

7db34b0c-db91-4cb4-ba6b-c0149474a1d3
01:15:53.564 --> 01:15:53.912
Yeah,

NOTE Confidence: 0.771383846

e31b4cb7-c9f9-46b1-9228-6081f00beabf
01:15:53.912 --> 01:15:55.304
that's a reasonable concern.

NOTE Confidence: 0.75272453

2ea17c23-949e-40d9-b758-060780913073
01:15:57.380 --> 01:16:00.410
Let's see. Oh, interesting that

NOTE Confidence: 0.75272453

d23dc097-fc8a-4cc4-9faf-4e2f4330b593
01:16:00.410 --> 01:16:02.834
internal tools are available,

NOTE Confidence: 0.75272453

3ca57c91-5ec2-45a6-b3c0-e4f7faf95f72
01:16:02.840 --> 01:16:04.478
but it's not available to the public.

NOTE Confidence: 0.75272453

ed8d4f8c-2b5f-4f68-ace3-54548b494f98
01:16:04.480 --> 01:16:07.568
Then I won't mention that you're all here.

NOTE Confidence: 0.75272453

22741d1a-b0ae-4041-bacd-878c216dae24
01:16:07.570 --> 01:16:10.310
And Casey mentions we're up to 5430

NOTE Confidence: 0.75272453

b637d005-2564-438d-aa49-7b13d16403c7
01:16:10.310 --> 01:16:12.230
uses of notice guarding STL headers.

NOTE Confidence: 0.75272453

d89bbef4-0eae-45d0-8648-45109b4e54ad
01:16:12.230 --> 01:16:13.466
Funny thing, notice guard is still

NOTE Confidence: 0.75272453

e3aac168-9a3e-418d-8008-80084f1a7039
01:16:13.466 --> 01:16:15.149
going to be more popular than export.

NOTE Confidence: 0.75272453

89e75390-36d5-44c3-ad16-e1eb00ea258d
01:16:15.150 --> 01:16:17.243
I only have about 3000 occurrences of

NOTE Confidence: 0.75272453

c5193a99-a23d-43b1-ac6b-044f7e4a1a3b
01:16:17.243 --> 01:16:19.049
export in standard library modules,

NOTE Confidence: 0.75272453

7fefc4cb-3e1c-4dab-8027-cfb55105c2c3
01:16:19.050 --> 01:16:22.223
and that's because we not only

NOTE Confidence: 0.75272453

3eba7982-ec71-49c8-bffd-18701448c875
01:16:22.223 --> 01:16:23.467
know discard internal functions,

NOTE Confidence: 0.75272453

763a8809-b693-498e-87f7-8702012cc5a4
01:16:23.470 --> 01:16:24.148
but member functions.

NOTE Confidence: 0.75272453

93f9b772-9ed9-48a6-a01d-a187bfc5bba4
01:16:24.148 --> 01:16:25.730
And export does not need to be

NOTE Confidence: 0.75272453

5511247e-e0d5-4acb-90a6-4a5e5c4418d4
01:16:25.775 --> 01:16:27.210
applied to every member function,

NOTE Confidence: 0.75272453

fffe722a-fe57-4ee0-a134-67a04412ab0c
01:16:27.210 --> 01:16:28.302
it only needs to be applied

NOTE Confidence: 0.75272453

aa26b456-ca1e-40e3-928e-1d1d1c106df4
01:16:28.302 --> 01:16:29.030
to top level classes.

NOTE Confidence: 0.75272453

8ab4d690-1a83-4c99-86fe-5c2880f0301b
01:16:29.030 --> 01:16:31.767
So now and forever notice card it

NOTE Confidence: 0.75272453

84c50344-07fc-4419-b52a-4f1d3c1b0a0a
01:16:31.767 --> 01:16:34.678
will be the most popular thing.

NOTE Confidence: 0.75272453

de6b51e6-a8d7-4cbc-802f-3004c47496e8
01:16:34.680 --> 01:16:36.800
And oh, Cameron's already got a PR out

NOTE Confidence: 0.75272453

28a251c6-eeac-4603-b3c7-9ca1d43074e1
01:16:36.800 --> 01:16:38.492
fixing the bug, so that's awesome.

NOTE Confidence: 0.75272453

e77726bd-1c68-4ac0-8b30-4135420f4c36
01:16:38.492 --> 01:16:39.456
Thank you, Cameron.

NOTE Confidence: 0.75272453

2aaa6576-fb3c-471a-ad73-9827ca6ecfdc
01:16:39.456 --> 01:16:42.464
OK, I think we can end this review.

NOTE Confidence: 0.75272453

d9fc954b-a9e6-40b9-b676-41234440b7e1
01:16:42.470 --> 01:16:43.562
Thanks for watching and we'll see

NOTE Confidence: 0.75272453

ed3f21a2-726c-40d7-8854-a0ecbf16649f
01:16:43.562 --> 01:16:44.937
you next time on the C Libraries

NOTE Confidence: 0.75272453

96f2f2a4-d779-4f92-9b12-e9249be2bcc7
01:16:44.937 --> 01:16:45.540
Open code review.

