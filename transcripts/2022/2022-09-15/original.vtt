WEBVTT

NOTE duration:"00:31:49"

NOTE recognizability:0.827

NOTE language:en-us

NOTE Confidence: 0.913792887

00:00:10.570 --> 00:00:12.642
All right. Hello everyone.

NOTE Confidence: 0.913792887

00:00:12.642 --> 00:00:15.750
Welcome to another open code review.

NOTE Confidence: 0.913792887

00:00:15.750 --> 00:00:18.620
This week we will be taking a

NOTE Confidence: 0.913792887

00:00:18.620 --> 00:00:21.873
look at the OR an implementation

NOTE Confidence: 0.913792887

00:00:21.873 --> 00:00:25.063
of the ranges fold algorithms.

NOTE Confidence: 0.913792887

00:00:25.070 --> 00:00:29.022
Fold left, fold right.

NOTE Confidence: 0.913792887

00:00:29.022 --> 00:00:33.228
Etcetera. Umm. Share my screen.

NOTE Confidence: 0.847789107692308

00:00:39.110 --> 00:00:41.324
So one of the interesting things

NOTE Confidence: 0.847789107692308

00:00:41.324 --> 00:00:44.072
about this is that I already reviewed

NOTE Confidence: 0.847789107692308

00:00:44.072 --> 00:00:46.858
this because I forgot that we needed

NOTE Confidence: 0.847789107692308

00:00:46.936 --> 00:00:49.108
a video code review this week,

NOTE Confidence: 0.847789107692308

00:00:49.110 --> 00:00:50.970
and so the changes have.

NOTE Confidence: 0.847789107692308

00:00:50.970 --> 00:00:53.622
The changes that I requested have

NOTE Confidence: 0.847789107692308

00:00:53.622 --> 00:00:56.740
already been upstreamed, however.

NOTE Confidence: 0.847789107692308

00:00:56.740 --> 00:01:02.530
We will be. Looking at the.

NOTE Confidence: 0.847789107692308

00:01:02.530 --> 00:01:05.140
Paper, as well as what the

NOTE Confidence: 0.847789107692308

00:01:05.140 --> 00:01:06.445
original implementation was.

NOTE Confidence: 0.847789107692308

00:01:06.450 --> 00:01:08.326
It was a really good original implementation.

NOTE Confidence: 0.847789107692308

00:01:08.330 --> 00:01:10.230
There were very few changes

NOTE Confidence: 0.847789107692308

00:01:10.230 --> 00:01:12.130
that needed that we needed,

NOTE Confidence: 0.847789107692308

00:01:12.130 --> 00:01:15.550
although there was an interesting

NOTE Confidence: 0.847789107692308

00:01:15.550 --> 00:01:18.049
LWG issue that we needed to file

NOTE Confidence: 0.847789107692308

00:01:18.049 --> 00:01:20.243
because this the implementation as

NOTE Confidence: 0.847789107692308

00:01:20.243 --> 00:01:22.863
written in the paper accidentally

NOTE Confidence: 0.847789107692308

00:01:22.863 --> 00:01:25.609
reinterpret casts or constant casts,

NOTE Confidence: 0.847789107692308

00:01:25.610 --> 00:01:30.974
and so I will show you the process of.

NOTE Confidence: 0.847789107692308

00:01:30.980 --> 00:01:31.375
How?

NOTE Confidence: 0.847789107692308

00:01:31.375 --> 00:01:33.745
How to submit an LWG issue

NOTE Confidence: 0.847789107692308

00:01:33.745 --> 00:01:36.220
what that kind of looks like?

NOTE Confidence: 0.847789107692308

00:01:36.220 --> 00:01:38.355
At least my process for doing that.

NOTE Confidence: 0.847789107692308

00:01:38.360 --> 00:01:39.251
I don't know,

NOTE Confidence: 0.847789107692308

00:01:39.251 --> 00:01:41.033
maybe other people have different processes,

NOTE Confidence: 0.847789107692308

00:01:41.040 --> 00:01:43.556
but. Cool.

NOTE Confidence: 0.847789107692308

00:01:43.556 --> 00:01:45.278
Alright, so this is the paper we're

NOTE Confidence: 0.847789107692308

00:01:45.278 --> 00:01:47.006
going to be looking at this week.

NOTE Confidence: 0.847789107692308

00:01:47.010 --> 00:01:52.710
We, uh, are doing uh, Jay?

NOTE Confidence: 0.847789107692308

00:01:52.710 --> 00:01:54.400
Miss arkivmusic.

NOTE Confidence: 0.76481208375

00:01:56.790 --> 00:02:00.406
Jam uh, sorry if I mispronounced your name.

NOTE Confidence: 0.76481208375

00:02:00.410 --> 00:02:04.568
Uh has done the implementation here

NOTE Confidence: 0.76481208375

00:02:04.570 --> 00:02:09.550
and you did a fantastic job, so.

NOTE Confidence: 0.76481208375

00:02:09.550 --> 00:02:12.364
Uh, thank you very much for that.

NOTE Confidence: 0.76481208375

00:02:12.370 --> 00:02:15.765
So the paper here it's if you've

NOTE Confidence: 0.76481208375

00:02:15.765 --> 00:02:18.604
ever used some kind of, uh,

NOTE Confidence: 0.76481208375

00:02:18.604 --> 00:02:19.966
functional programming language,

NOTE Confidence: 0.76481208375

00:02:19.966 --> 00:02:21.782
you'll be really familiar

NOTE Confidence: 0.76481208375

00:02:21.782 --> 00:02:25.168
with this if we have.

NOTE Confidence: 0.76481208375

00:02:25.170 --> 00:02:27.550
Basically you have ranges fold

NOTE Confidence: 0.76481208375

00:02:27.550 --> 00:02:30.790
or you have fold of a range,

NOTE Confidence: 0.76481208375

00:02:30.790 --> 00:02:33.436
an initial value and then a.

NOTE Confidence: 0.724885968333333

00:02:35.600 --> 00:02:42.458
A. A function. And you basically.

NOTE Confidence: 0.724885968333333

00:02:42.460 --> 00:02:45.218
Let's see if there is an actual.

NOTE Confidence: 0.724885968333333

00:02:45.220 --> 00:02:48.340
Oh gosh. OK, let me, let me write it up.

NOTE Confidence: 0.809471344545454

00:02:53.470 --> 00:02:57.616
So if you do something like

NOTE Confidence: 0.809471344545454

00:02:57.616 --> 00:03:03.210
fold of some range R. Say 123.

NOTE Confidence: 0.809471344545454

00:03:03.210 --> 00:03:05.916
Then an initial value of 0

NOTE Confidence: 0.809471344545454

00:03:05.916 --> 00:03:08.285
and the function object add

NOTE Confidence: 0.809471344545454

00:03:08.285 --> 00:03:10.615
then this is equivalent to,

NOTE Confidence: 0.809471344545454

00:03:10.620 --> 00:03:17.519
you know, add 0. Add one, add 2.

NOTE Confidence: 0.65462772

00:03:19.780 --> 00:03:20.638
Ohh I guess.

NOTE Confidence: 0.69264921375

00:03:23.270 --> 00:03:25.310
Are now. That's definitely not how

NOTE Confidence: 0.69264921375

00:03:25.310 --> 00:03:29.630
that works. OK, add one, add 2, add 3.

NOTE Confidence: 0.741661244

00:03:31.790 --> 00:03:35.200
At 0 something like that.

NOTE Confidence: 0.741661244

00:03:35.200 --> 00:03:36.910
And basically there are ten

NOTE Confidence: 0.741661244

00:03:36.910 --> 00:03:39.080
of two ways to do this.

NOTE Confidence: 0.741661244

00:03:39.080 --> 00:03:41.236
You could either have this fold be,

NOTE Confidence: 0.741661244

00:03:41.240 --> 00:03:42.536
you know, have one, add 2,

NOTE Confidence: 0.741661244

00:03:42.540 --> 00:03:44.760
add three at zero and zero,

NOTE Confidence: 0.741661244

00:03:44.760 --> 00:03:47.478
or you could have something like.

NOTE Confidence: 0.74726999625

00:03:53.910 --> 00:03:59.080
That um and both of these are valid uh,

NOTE Confidence: 0.74726999625

00:03:59.080 --> 00:04:03.908
choices. See, I missed that.

NOTE Confidence: 0.74726999625

00:04:03.910 --> 00:04:05.248
Both of these are valid choices.

NOTE Confidence: 0.74726999625

00:04:05.250 --> 00:04:08.043
I believe that this is a fold

NOTE Confidence: 0.74726999625

00:04:08.043 --> 00:04:10.830
left and this is a fold right.

NOTE Confidence: 0.811196714444444

00:04:13.600 --> 00:04:14.984
Basically, that's that's how

NOTE Confidence: 0.811196714444444

00:04:14.984 --> 00:04:16.714
that's that's how this works.

NOTE Confidence: 0.811196714444444

00:04:16.720 --> 00:04:22.377
Um. So let's take a look at the.

NOTE Confidence: 0.811196714444444

00:04:22.380 --> 00:04:29.440
Paper itself. This is all you know fine.

NOTE Confidence: 0.811196714444444

00:04:29.440 --> 00:04:33.016
But let's look at the actual.

NOTE Confidence: 0.811196714444444

00:04:33.020 --> 00:04:35.816
Code that we need to add.

NOTE Confidence: 0.811196714444444

00:04:35.820 --> 00:04:39.324
So first, we've got this feature test macro.

NOTE Confidence: 0.811196714444444

00:04:39.330 --> 00:04:45.530
TP lip fold. We have a new result type.

NOTE Confidence: 0.811196714444444

00:04:45.530 --> 00:04:47.630
You've got.

NOTE Confidence: 0.811196714444444

00:04:47.630 --> 00:04:50.006
Flipped, which is an exposition only.

NOTE Confidence: 0.811196714444444

00:04:50.010 --> 00:04:53.678
Type um, that basically.

NOTE Confidence: 0.811196714444444

00:04:53.680 --> 00:04:56.956
Allows us to write indirectly indirectly

NOTE Confidence: 0.811196714444444

00:04:56.956 --> 00:05:00.291
binary write foldable concept easier and

NOTE Confidence: 0.811196714444444

00:05:00.291 --> 00:05:03.507
directly binary left foldable concept which.

NOTE Confidence: 0.811196714444444

00:05:03.510 --> 00:05:04.392
Wow, that's Tim.

NOTE Confidence: 0.811196714444444

00:05:04.392 --> 00:05:06.368
Do you, uh, left fold? Um.

NOTE Confidence: 0.811196714444444

00:05:06.368 --> 00:05:08.975
Or or it allows us to figure

NOTE Confidence: 0.811196714444444

00:05:08.975 --> 00:05:11.579
out when a function is left,

NOTE Confidence: 0.811196714444444

00:05:11.580 --> 00:05:13.980
foldable, got, fold left,

NOTE Confidence: 0.811196714444444

00:05:13.980 --> 00:05:18.688
fold left first, which allows us to.

NOTE Confidence: 0.811196714444444

00:05:18.690 --> 00:05:23.639
Do this without do do calls do.

NOTE Confidence: 0.811196714444444

00:05:23.640 --> 00:05:24.520
I don't wanna say this.

NOTE Confidence: 0.870701544444444

00:05:26.760 --> 00:05:29.105
It allows us to fold without the

NOTE Confidence: 0.870701544444444

00:05:29.105 --> 00:05:30.568
initial value, so if you look.

NOTE Confidence: 0.779974832666667

00:05:33.440 --> 00:05:36.600
That's the thing that I just closed and

NOTE Confidence: 0.779974832666667

00:05:36.600 --> 00:05:42.260
should not have if you have fold. 123. Add.

NOTE Confidence: 0.34558845

00:05:45.390 --> 00:05:45.970
Sad.

NOTE Confidence: 0.89404215

00:05:53.910 --> 00:05:56.409
If you don't want this initial zero,

NOTE Confidence: 0.89404215

00:05:56.410 --> 00:06:01.604
you can also have a fold first.

NOTE Confidence: 0.89404215

00:06:01.610 --> 00:06:05.660
123 add. Which becomes ad.

NOTE Confidence: 0.84291119

00:06:09.000 --> 00:06:14.120
Something like that? Umm.

NOTE Confidence: 0.84291119

00:06:14.120 --> 00:06:16.150
So we've got fold left.

NOTE Confidence: 0.84291119

00:06:16.150 --> 00:06:18.510
Taking Iterator, Sentinel and range,

NOTE Confidence: 0.84291119

00:06:18.510 --> 00:06:20.050
Fold left first. Taking Iterator,

NOTE Confidence: 0.84291119

00:06:20.050 --> 00:06:22.270
Sentinel and range fold right.

NOTE Confidence: 0.84291119

00:06:22.270 --> 00:06:24.240
Taking Iterator, Sentinel and range

NOTE Confidence: 0.84291119

00:06:24.240 --> 00:06:26.210
fold right last taking Iterator,

NOTE Confidence: 0.84291119

00:06:26.210 --> 00:06:28.376
Sentinel and range which is the

NOTE Confidence: 0.84291119

00:06:28.376 --> 00:06:30.290
equivalent of full left first,

NOTE Confidence: 0.84291119

00:06:30.290 --> 00:06:33.937
fold right and then finally we have

NOTE Confidence: 0.84291119

00:06:33.937 --> 00:06:36.473
this interesting fold left with

NOTE Confidence: 0.84291119

00:06:36.473 --> 00:06:39.690
either or ITER fold left with utter.

NOTE Confidence: 0.84291119

00:06:39.690 --> 00:06:41.590
Wanna call it which?

NOTE Confidence: 0.84291119

00:06:41.590 --> 00:06:43.950
Takes the iterator, the Sentinel,

NOTE Confidence: 0.84291119

00:06:43.950 --> 00:06:47.480
the initializer, and the function.

NOTE Confidence: 0.84291119

00:06:47.480 --> 00:06:50.216
And unlike fold right which takes

NOTE Confidence: 0.84291119

00:06:50.216 --> 00:06:52.558
a bidirectional iterator, and so.

NOTE Confidence: 0.84291119

00:06:52.558 --> 00:06:56.430
It isn't like useful for us to return

NOTE Confidence: 0.84291119

00:06:56.543 --> 00:06:59.345
the iterator from fold, right?

NOTE Confidence: 0.84291119

00:06:59.345 --> 00:07:01.295
Uh, because we have to like,

NOTE Confidence: 0.84291119

00:07:01.300 --> 00:07:03.360
construct the, construct the last,

NOTE Confidence: 0.84291119

00:07:03.360 --> 00:07:05.012
and then kind of.

NOTE Confidence: 0.84291119

00:07:05.012 --> 00:07:08.582
Move to the left or to the front

NOTE Confidence: 0.84291119

00:07:08.582 --> 00:07:11.528
of the range with fold left,

NOTE Confidence: 0.84291119

00:07:11.530 --> 00:07:14.266
we could we just take the 1st and

NOTE Confidence: 0.84291119

00:07:14.266 --> 00:07:16.372
move right through the range and

NOTE Confidence: 0.84291119

00:07:16.372 --> 00:07:18.917
so as part of that we actually

NOTE Confidence: 0.84291119

00:07:18.917 --> 00:07:21.187
do get the final iterator.

NOTE Confidence: 0.84291119

00:07:21.190 --> 00:07:25.320
So for example if you have a.

NOTE Confidence: 0.84291119

00:07:25.320 --> 00:07:28.152
And a fold that's doing something

NOTE Confidence: 0.84291119

00:07:28.152 --> 00:07:31.940
on a 0 terminated. Array.

NOTE Confidence: 0.84291119

00:07:31.940 --> 00:07:34.570
Then your Sentinel will be.

NOTE Confidence: 0.84291119

00:07:34.570 --> 00:07:37.085
Something that returns true when

NOTE Confidence: 0.84291119

00:07:37.085 --> 00:07:40.131
you have a 0 termination and

NOTE Confidence: 0.84291119

00:07:40.131 --> 00:07:42.729
this fold left with Itter will

NOTE Confidence: 0.84291119

00:07:42.729 --> 00:07:45.191
go through and do the fold,

NOTE Confidence: 0.84291119

00:07:45.191 --> 00:07:47.900
and then it'll also give you back

NOTE Confidence: 0.84291119

00:07:47.985 --> 00:07:50.465
the actual iterator that we've

NOTE Confidence: 0.84291119

00:07:50.465 --> 00:07:52.945
discovered just by virtue of

NOTE Confidence: 0.84291119

00:07:52.950 --> 00:07:56.050
running through the list anyways.

NOTE Confidence: 0.84291119

00:07:56.050 --> 00:07:59.270
And then pull efforts with there is

NOTE Confidence: 0.84291119

00:07:59.270 --> 00:08:03.379
the same but without the initial value.

NOTE Confidence: 0.84291119

00:08:03.380 --> 00:08:06.075
Finally we get this struct invalue result,

NOTE Confidence: 0.84291119

00:08:06.080 --> 00:08:09.580
the actual declaration of it.

NOTE Confidence: 0.84291119

00:08:09.580 --> 00:08:13.860
And then this gives us the actual wording.

NOTE Confidence: 0.84291119

00:08:13.860 --> 00:08:14.180
Now.

NOTE Confidence: 0.9298094475

00:08:17.200 --> 00:08:18.140
If you look here.

NOTE Confidence: 0.758704078235294

00:08:20.300 --> 00:08:23.820
One thing is that this hash define you'll

NOTE Confidence: 0.758704078235294

00:08:23.820 --> 00:08:27.027
notice if we go to the C plus draft.

NOTE Confidence: 0.460440936666667

00:08:30.270 --> 00:08:31.389
Virgin dot sign.

NOTE Confidence: 0.797236342631579

00:08:37.580 --> 00:08:39.918
You will notice that CPP live fold

NOTE Confidence: 0.797236342631579

00:08:39.918 --> 00:08:42.182
is not what actually got voted

NOTE Confidence: 0.797236342631579

00:08:42.182 --> 00:08:44.552
into the working paper and so.

NOTE Confidence: 0.797236342631579

00:08:44.560 --> 00:08:47.896
This is the actual hash defined of CPP

NOTE Confidence: 0.797236342631579

00:08:47.896 --> 00:08:50.840
Lib ranges fold and if we look at our.

NOTE Confidence: 0.906967786

00:08:54.030 --> 00:08:55.350
We look at our code.

NOTE Confidence: 0.8617536175

00:09:01.530 --> 00:09:04.210
In fact, this person looked at the paper,

NOTE Confidence: 0.8617536175

00:09:04.210 --> 00:09:07.626
which is a totally fair thing to do and

NOTE Confidence: 0.8617536175

00:09:07.626 --> 00:09:12.440
they gave us this CP Lib Fold which is

NOTE Confidence: 0.8617536175

00:09:12.440 --> 00:09:15.770
correct by the paper but is incorrect

NOTE Confidence: 0.8617536175

00:09:15.770 --> 00:09:19.438
by the actual working paper that.

NOTE Confidence: 0.8617536175

00:09:19.438 --> 00:09:22.433
They have set up and.

NOTE Confidence: 0.8617536175

00:09:22.433 --> 00:09:25.382
So first thing we have to ask for is for

NOTE Confidence: 0.8617536175

00:09:25.382 --> 00:09:28.307
CPP Lib fold to become CPP Lib ranges fold.

NOTE Confidence: 0.8617536175

00:09:28.310 --> 00:09:29.630
It's a pretty easy change,

NOTE Confidence: 0.8617536175

00:09:29.630 --> 00:09:31.470
you know they have to change this here,

NOTE Confidence: 0.8617536175

00:09:31.470 --> 00:09:33.096
they have to change it in.

NOTE Confidence: 0.6341709

00:09:39.200 --> 00:09:42.648
Very. They have to change it in here.

NOTE Confidence: 0.6341709

00:09:42.650 --> 00:09:44.894
Yeah, easy change. And so they

NOTE Confidence: 0.6341709

00:09:44.894 --> 00:09:49.070
did actually do this, so let's.

NOTE Confidence: 0.6341709

00:09:49.070 --> 00:09:52.006
Let's open up that version of the changeset.

NOTE Confidence: 0.910241655

00:10:25.690 --> 00:10:28.318
And we can see.

NOTE Confidence: 0.910241655

00:10:28.320 --> 00:10:30.552
They've changed CPP Lib Ranges or

NOTE Confidence: 0.910241655

00:10:30.552 --> 00:10:33.409
Lib Fold to CPP Lib ranges folds.

NOTE Confidence: 0.910241655

00:10:33.410 --> 00:10:37.610
So that's fine, we've seen this.

NOTE Confidence: 0.910241655

00:10:37.610 --> 00:10:39.350
Totally great.

NOTE Confidence: 0.910241655

00:10:39.350 --> 00:10:42.686
Um, now let's take a look at algorithm.

NOTE Confidence: 0.910241655

00:10:42.690 --> 00:10:45.609
Which is where the actual code is.

NOTE Confidence: 0.910241655

00:10:45.610 --> 00:10:47.775
We we've added optional and

NOTE Confidence: 0.910241655

00:10:47.775 --> 00:10:50.440
you'll notice in and just fold.

NOTE Confidence: 0.638204884

00:10:57.120 --> 00:11:00.810
Come on, they're so fold.

NOTE Confidence: 0.867571595

00:11:02.960 --> 00:11:08.880
Left first. There we go. Fold left first.

NOTE Confidence: 0.867571595

00:11:08.880 --> 00:11:13.148
Returns an optional. Gosh, OK,

NOTE Confidence: 0.867571595

00:11:13.148 --> 00:11:15.740
I'm actually going to open this in uh.

NOTE Confidence: 0.862537746363637

00:11:18.780 --> 00:11:21.279
In the US because it's much easier

NOTE Confidence: 0.862537746363637

00:11:21.279 --> 00:11:25.180
for me to read. So if we go here.

NOTE Confidence: 0.05071655

00:11:28.350 --> 00:11:35.069
Hmm. Yeah, so this returns a ohh that's it.

NOTE Confidence: 0.8944791

00:11:37.610 --> 00:11:40.821
Really? Oh yeah, yeah.

NOTE Confidence: 0.8944791

00:11:40.821 --> 00:11:43.156
So it returns a range.

NOTE Confidence: 0.8944791

00:11:43.160 --> 00:11:46.980
Uh, this, like. Value.

NOTE Confidence: 0.8944791

00:11:46.980 --> 00:11:51.040
And it returns an optional.

NOTE Confidence: 0.8944791

00:11:51.040 --> 00:11:51.810
Basically.

NOTE Confidence: 0.801667615714286

00:11:54.010 --> 00:11:56.579
So we need optional now and algorithm.

NOTE Confidence: 0.1834529

00:11:59.550 --> 00:12:00.410
Hello.

NOTE Confidence: 0.529919685

00:12:10.740 --> 00:12:12.760
Flint is.

NOTE Confidence: 0.1107263

00:12:14.860 --> 00:12:16.330
Fine.

NOTE Confidence: 0.849138971666667

00:12:24.220 --> 00:12:26.848
It's in here it is not. Ohh my gosh.

NOTE Confidence: 0.588736513333333

00:12:32.630 --> 00:12:33.839
Ohh algorithm outside.

NOTE Confidence: 0.801007454

00:12:41.870 --> 00:12:44.380
So got a new flipped.

NOTE Confidence: 0.801007454

00:12:44.380 --> 00:12:47.740
Template Class F, class flipped F.

NOTE Confidence: 0.801007454

00:12:47.740 --> 00:12:52.528
Template class and class flipped FF public.

NOTE Confidence: 0.801007454

00:12:52.530 --> 00:12:54.340
Template Class T class you

NOTE Confidence: 0.801007454

00:12:54.340 --> 00:12:56.622
require some vocable FNT UT.

NOTE Confidence: 0.801007454

00:12:56.622 --> 00:13:00.198
Template Class T class U requires

NOTE Confidence: 0.801007454

00:13:00.198 --> 00:13:05.520
invocable F&amp;amp;UT invoke results TF&amp;amp;UT.

NOTE Confidence: 0.801007454

00:13:05.520 --> 00:13:08.220
TF and UT operator open

NOTE Confidence: 0.801007454

00:13:08.220 --> 00:13:10.351
paren close paren T&amp;amp;NUN,

NOTE Confidence: 0.801007454

00:13:10.351 --> 00:13:13.928
end operator open paren close paren TNN.

NOTE Confidence: 0.801007454

00:13:13.930 --> 00:13:15.186
This is correct. Um.

NOTE Confidence: 0.801007454

00:13:15.186 --> 00:13:17.491
Going to assert these are all correct

NOTE Confidence: 0.801007454

00:13:17.491 --> 00:13:20.339
because I did actually do the check before.

NOTE Confidence: 0.801007454

00:13:20.340 --> 00:13:21.960
It's not very interesting.

NOTE Confidence: 0.801007454

00:13:21.960 --> 00:13:23.978
We get 2 new, uh,

NOTE Confidence: 0.801007454

00:13:23.978 --> 00:13:24.774
result types.

NOTE Confidence: 0.801007454

00:13:24.774 --> 00:13:27.560
We have fold left with utter result,

NOTE Confidence: 0.801007454

00:13:27.560 --> 00:13:29.780
fold left first with inner

NOTE Confidence: 0.801007454

00:13:29.780 --> 00:13:32.000
result which are just straight

NOTE Confidence: 0.801007454

00:13:32.000 --> 00:13:33.650
equivalents to in value result.

NOTE Confidence: 0.672034

00:13:36.820 --> 00:13:38.040
Right.

NOTE Confidence: 0.6515747315

00:13:40.970 --> 00:13:43.175
Here hold left with their result equals

NOTE Confidence: 0.6515747315

00:13:43.175 --> 00:13:45.413
in value result holds off first with

NOTE Confidence: 0.6515747315

00:13:45.413 --> 00:13:48.700
the result equals N value result. OK.

NOTE Confidence: 0.6515747315

00:13:48.700 --> 00:13:52.236
Then we have fold left with ITER unchecked,

NOTE Confidence: 0.6515747315

00:13:52.240 --> 00:13:56.803
so this allows us to have the same function.

NOTE Confidence: 0.847425743333333

00:13:58.890 --> 00:14:02.148
That does like the unchecked machinery

NOTE Confidence: 0.847425743333333

00:14:02.150 --> 00:14:04.442
because we have this iterator unwrapping

NOTE Confidence: 0.847425743333333

00:14:04.442 --> 00:14:06.530
thing in our standard library,

NOTE Confidence: 0.847425743333333

00:14:06.530 --> 00:14:09.200
but it actually does the actual work, so.

NOTE Confidence: 0.847425743333333

00:14:09.200 --> 00:14:11.540
Fold left with it or unchecked

NOTE Confidence: 0.847425743333333

00:14:11.540 --> 00:14:14.050
we'll do the actual work of.

NOTE Confidence: 0.847425743333333

00:14:14.050 --> 00:14:16.260
Fold left with it or.

NOTE Confidence: 0.847425743333333

00:14:16.260 --> 00:14:19.707
So if you got a full left with hitter.

NOTE Confidence: 0.847425743333333

00:14:19.710 --> 00:14:25.950
Which is? Here. Right here.

NOTE Confidence: 0.847425743333333

00:14:25.950 --> 00:14:27.966
We should have exactly the same code.

NOTE Confidence: 0.847425743333333

00:14:27.970 --> 00:14:29.538
It takes an iterator,

NOTE Confidence: 0.847425743333333

00:14:29.538 --> 00:14:33.580
Sentinel, a tie, and an F.

NOTE Confidence: 0.847425743333333

00:14:33.580 --> 00:14:35.008
Iterator, Sentinel, tie.

NOTE Confidence: 0.77328426

00:14:37.480 --> 00:14:43.960
Then. We get using utai equals to KT blah.

NOTE Confidence: 0.77328426

00:14:43.960 --> 00:14:46.464
You equals to KT.

NOTE Confidence: 0.77328426

00:14:46.464 --> 00:14:49.720
Invoke result TF&amp;amp;T at a reference T.

NOTE Confidence: 0.77328426

00:14:49.720 --> 00:14:52.639
Yeah, that looks correct. Return type is.

NOTE Confidence: 0.77328426

00:14:52.640 --> 00:14:56.784
Fold left with it'll result it you type.

NOTE Confidence: 0.77328426

00:14:56.790 --> 00:14:58.190
Return type is for that.

NOTE Confidence: 0.77328426

00:14:58.190 --> 00:15:01.200
It's a result I you.

NOTE Confidence: 0.77328426

00:15:01.200 --> 00:15:03.642
And fold left without a result

NOTE Confidence: 0.77328426

00:15:03.642 --> 00:15:08.090
buttered iterator TRU. So.

NOTE Confidence: 0.77328426

00:15:08.090 --> 00:15:11.330
We'll notice here that. Uh.

NOTE Confidence: 0.77328426

00:15:11.330 --> 00:15:14.200
This return type is incorrect.

NOTE Confidence: 0.77328426

00:15:14.200 --> 00:15:18.600
Four fold left with utter of arrange type.

NOTE Confidence: 0.77328426

00:15:18.600 --> 00:15:21.855
However if we go down to fold

NOTE Confidence: 0.77328426

00:15:21.855 --> 00:15:24.499
left with inter over range.

NOTE Confidence: 0.77328426

00:15:24.500 --> 00:15:26.768
We do actually do this kind of.

NOTE Confidence: 0.910626774

00:15:29.700 --> 00:15:31.946
We do this kind of copying

NOTE Confidence: 0.910626774

00:15:31.946 --> 00:15:34.698
back into the correct? Um.

NOTE Confidence: 0.910626774

00:15:34.698 --> 00:15:37.650
And one of the things I noted was that

NOTE Confidence: 0.910626774

00:15:37.738 --> 00:15:40.587
this actually results in a triple move

NOTE Confidence: 0.910626774

00:15:40.587 --> 00:15:43.689
of you result dot value inside or no,

NOTE Confidence: 0.910626774

00:15:43.690 --> 00:15:46.306
just a double move of your result dot

NOTE Confidence: 0.910626774

00:15:46.306 --> 00:15:48.945
value when it could just be moved once.

NOTE Confidence: 0.910626774

00:15:48.950 --> 00:15:51.530
And so I've actually requested that.

NOTE Confidence: 0.7130611625

00:15:53.570 --> 00:15:57.790
This unchecked function, uh?

NOTE Confidence: 0.7130611625

00:15:57.790 --> 00:16:01.264
Not to do this, but the actual really

NOTE Confidence: 0.7130611625

00:16:01.264 --> 00:16:03.172
important thing that I was noticing

NOTE Confidence: 0.7130611625

00:16:03.172 --> 00:16:05.658
was yeah OK if first equals equals last

NOTE Confidence: 0.7130611625

00:16:05.658 --> 00:16:07.629
return return type should move first.

NOTE Confidence: 0.7130611625

00:16:07.630 --> 00:16:11.707
You tie stood move in it seems fine right?

NOTE Confidence: 0.7130611625

00:16:11.710 --> 00:16:14.854
We've got this same code in the standard

NOTE Confidence: 0.7130611625

00:16:14.854 --> 00:16:18.260
library and then else we have this U

NOTE Confidence: 0.7130611625

00:16:18.260 --> 00:16:20.424
accumulator equals stood invoke function

NOTE Confidence: 0.7130611625

00:16:20.424 --> 00:16:23.140
of init and 1st and start first.

NOTE Confidence: 0.7130611625

00:16:23.140 --> 00:16:25.338
Which is exactly what we have here.

NOTE Confidence: 0.7130611625

00:16:25.340 --> 00:16:28.028
Then we have 4 plus plus first first

NOTE Confidence: 0.7130611625

00:16:28.028 --> 00:16:30.896
is not equal last plus plus first.

NOTE Confidence: 0.7130611625

00:16:30.900 --> 00:16:32.412
Yeah, that looks correct.

NOTE Confidence: 0.7130611625

00:16:32.412 --> 00:16:34.680
Accum equals invoke of F stood.

NOTE Confidence: 0.7130611625

00:16:34.680 --> 00:16:36.768
Move Acomb started first.

NOTE Confidence: 0.7130611625

00:16:36.768 --> 00:16:38.568
Yep, that looks correct.

NOTE Confidence: 0.7130611625

00:16:38.568 --> 00:16:40.260
And we return, you know,

NOTE Confidence: 0.7130611625

00:16:40.260 --> 00:16:42.980
stood moved, first stood move, Kim.

NOTE Confidence: 0.7130611625

00:16:42.980 --> 00:16:46.880
So that all looks correct, however.

NOTE Confidence: 0.7130611625

00:16:46.880 --> 00:16:48.800
We have a problem here.

NOTE Confidence: 0.7130611625

00:16:48.800 --> 00:16:50.678
And it's a problem that you

NOTE Confidence: 0.7130611625

00:16:50.678 --> 00:16:52.270
may have noticed if you.

NOTE Confidence: 0.7130611625

00:16:52.270 --> 00:16:56.897
Really like weird stuff in the standard,

NOTE Confidence: 0.7130611625

00:16:56.900 --> 00:16:59.210
but is really really confusing

NOTE Confidence: 0.7130611625

00:16:59.210 --> 00:17:02.478
if you are not like well versed

NOTE Confidence: 0.7130611625

00:17:02.478 --> 00:17:04.563
in standard's and that's.

NOTE Confidence: 0.7130611625

00:17:04.563 --> 00:17:08.420
That this is a functional style ccast.

NOTE Confidence: 0.7130611625

00:17:08.420 --> 00:17:11.766
Now if we look into the standard.

NOTE Confidence: 0.7540465575

00:17:14.280 --> 00:17:17.766
See, I think it should be an

NOTE Confidence: 0.7540465575

00:17:17.766 --> 00:17:19.390
expressions. And then I cast Santa,

NOTE Confidence: 0.7540465575

00:17:19.390 --> 00:17:20.908
cast reinterpret, cast.

NOTE Confidence: 0.64782686

00:17:23.620 --> 00:17:24.628
Expert dot cast.

NOTE Confidence: 0.82020926

00:17:26.720 --> 00:17:32.260
So. We have. OK.

NOTE Confidence: 0.734925453333333

00:17:37.310 --> 00:17:38.390
Ah, yes, OK.

NOTE Confidence: 0.898706713125

00:17:43.590 --> 00:17:45.606
I don't. I don't know how to say I

NOTE Confidence: 0.898706713125

00:17:45.606 --> 00:17:47.770
I don't know where it says this,

NOTE Confidence: 0.898706713125

00:17:47.770 --> 00:17:51.424
but basically a function style cast

NOTE Confidence: 0.898706713125

00:17:51.424 --> 00:17:55.200
where you have type open paren.

NOTE Confidence: 0.898706713125

00:17:55.200 --> 00:17:56.982
Can you see if you have the actual link?

NOTE Confidence: 0.898706713125

00:17:56.990 --> 00:17:58.340
That would be very nice.

NOTE Confidence: 0.898706713125

00:17:58.340 --> 00:18:00.390
It's expert.type.com.

NOTE Confidence: 0.723720294285714

00:18:05.980 --> 00:18:08.188
Simple type names or simple type

NOTE Confidence: 0.723720294285714

00:18:08.188 --> 00:18:09.568
specifier, type name specifier,

NOTE Confidence: 0.723720294285714

00:18:09.568 --> 00:18:11.248
followed by a parenthesized optional

NOTE Confidence: 0.723720294285714

00:18:11.248 --> 00:18:12.610
expression list or by a brace,

NOTE Confidence: 0.723720294285714

00:18:12.610 --> 00:18:14.690
and it last instructs the value of the

NOTE Confidence: 0.723720294285714

00:18:14.690 --> 00:18:16.340
specified type given the initializer.

NOTE Confidence: 0.81021094

00:18:19.210 --> 00:18:22.648
OK. If the ohh there we go.

NOTE Confidence: 0.81021094

00:18:22.650 --> 00:18:27.048
Yeah so. This is this is what this.

NOTE Confidence: 0.81021094

00:18:27.050 --> 00:18:32.154
Thing is, it it it's a explicit type

NOTE Confidence: 0.81021094

00:18:32.154 --> 00:18:34.540
conversion functional notation.

NOTE Confidence: 0.81021094

00:18:34.540 --> 00:18:37.564
Now we notice if the initializer is

NOTE Confidence: 0.81021094

00:18:37.564 --> 00:18:39.760
a parenthesized single expression.

NOTE Confidence: 0.796671901

00:18:41.870 --> 00:18:43.338
Which this is. Tech,

NOTE Confidence: 0.796671901

00:18:43.338 --> 00:18:45.540
but this is what that is.

NOTE Confidence: 0.840459131818182

00:18:47.750 --> 00:18:50.792
The type conversion expression is equivalent

NOTE Confidence: 0.840459131818182

00:18:50.792 --> 00:18:53.700
to the corresponding cast expression.

NOTE Confidence: 0.90625447

00:18:56.150 --> 00:18:58.780
Which is what this is.

NOTE Confidence: 0.90625447

00:18:58.780 --> 00:19:01.180
Which is a sea cast.

NOTE Confidence: 0.90625447

00:19:01.180 --> 00:19:04.230
So what it does is a type ID in

NOTE Confidence: 0.90625447

00:19:04.230 --> 00:19:07.390
the parentheses cast expression.

NOTE Confidence: 0.90625447

00:19:07.390 --> 00:19:11.191
And so if you have a functional

NOTE Confidence: 0.90625447

00:19:11.191 --> 00:19:13.520
style cast like this.

NOTE Confidence: 0.90625447

00:19:13.520 --> 00:19:16.298
What C++ will try to do?

NOTE Confidence: 0.90625447

00:19:16.300 --> 00:19:19.210
To get this to compile.

NOTE Confidence: 0.90625447

00:19:19.210 --> 00:19:23.330
Is first. They can't cast.

NOTE Confidence: 0.90625447

00:19:23.330 --> 00:19:26.040
Followed by a static cast.

NOTE Confidence: 0.90625447

00:19:26.040 --> 00:19:27.580
Followed by a static cast,

NOTE Confidence: 0.90625447

00:19:27.580 --> 00:19:29.200
followed by a cast cast,

NOTE Confidence: 0.90625447

00:19:29.200 --> 00:19:31.500
followed by a reinterpret cast,

NOTE Confidence: 0.90625447

00:19:31.500 --> 00:19:33.380
or finally a reinterpret cast

NOTE Confidence: 0.90625447

00:19:33.380 --> 00:19:35.260
followed by a constant cast.

NOTE Confidence: 0.90625447

00:19:35.260 --> 00:19:37.670
So basically if you have

NOTE Confidence: 0.90625447

00:19:37.670 --> 00:19:39.598
any kind of pointer.

NOTE Confidence: 0.90625447

00:19:39.600 --> 00:19:42.492
Yes, either Utah or the type

NOTE Confidence: 0.90625447

00:19:42.492 --> 00:19:45.098
of in it like tie here.

NOTE Confidence: 0.90791148

00:19:47.190 --> 00:19:49.490
You have a problem.

NOTE Confidence: 0.90791148

00:19:49.490 --> 00:19:55.166
Because, uh, Utah as suddenly um.

NOTE Confidence: 0.90791148

00:19:55.170 --> 00:19:56.500
You you can do a cost cast,

NOTE Confidence: 0.90791148

00:19:56.500 --> 00:19:58.030
you can do a reinterpret cast.

NOTE Confidence: 0.90791148

00:19:58.030 --> 00:20:00.370
If Utah is, I don't know,

NOTE Confidence: 0.90791148

00:20:00.370 --> 00:20:06.450
int star and stood move in it is class star.

NOTE Confidence: 0.90791148

00:20:06.450 --> 00:20:08.470
This will just work.

NOTE Confidence: 0.90791148

00:20:08.470 --> 00:20:11.500
And it will return you the

NOTE Confidence: 0.90791148

00:20:11.607 --> 00:20:15.687
reinterpret casted instar from castar.

NOTE Confidence: 0.90791148

00:20:15.690 --> 00:20:16.882
This is a problem.

NOTE Confidence: 0.90791148

00:20:16.882 --> 00:20:19.079
This is the fact that the standard

NOTE Confidence: 0.90791148

00:20:19.079 --> 00:20:21.403
is asking us to do a reinterpret

NOTE Confidence: 0.90791148

00:20:21.403 --> 00:20:23.229
cast or a constant cast.

NOTE Confidence: 0.90791148

00:20:23.230 --> 00:20:25.110
Here is a problem.

NOTE Confidence: 0.90791148

00:20:25.110 --> 00:20:28.662
The correct thing to do here is to

NOTE Confidence: 0.90791148

00:20:28.662 --> 00:20:31.187
explicitly ask for what we want,

NOTE Confidence: 0.90791148

00:20:31.190 --> 00:20:35.663
and the only safe cast is a static cast.

NOTE Confidence: 0.90791148

00:20:35.670 --> 00:20:37.986
And so we have to actually

NOTE Confidence: 0.90791148

00:20:37.986 --> 00:20:40.076
explicitly ask for, you know,

NOTE Confidence: 0.90791148

00:20:40.076 --> 00:20:40.539
static.

NOTE Confidence: 0.909262825

00:20:43.600 --> 00:20:45.328
Let me open this in actual.

NOTE Confidence: 0.78639258

00:20:48.280 --> 00:20:52.074
There we go. We need to actually

NOTE Confidence: 0.78639258

00:20:52.074 --> 00:20:55.124
explicitly ask for a static cast rather

NOTE Confidence: 0.78639258

00:20:55.124 --> 00:20:59.103
than using the functional style thing.

NOTE Confidence: 0.78639258

00:20:59.103 --> 00:21:03.400
And normally. In the implementation

NOTE Confidence: 0.78639258

00:21:03.400 --> 00:21:07.099
we will use static cast, but in the

NOTE Confidence: 0.78639258

00:21:07.099 --> 00:21:09.514
standard they'll use functional style

NOTE Confidence: 0.78639258

00:21:09.514 --> 00:21:14.500
cast and normally it's fine because the.

NOTE Confidence: 0.78639258

00:21:14.500 --> 00:21:16.828
Generally we know that we're actually

NOTE Confidence: 0.78639258

00:21:16.828 --> 00:21:18.994
like like explicitly doing a copy

NOTE Confidence: 0.78639258

00:21:18.994 --> 00:21:20.902
or we control both types. However,

NOTE Confidence: 0.78639258

00:21:20.902 --> 00:21:25.240
in this case both types are user defined,

NOTE Confidence: 0.78639258

00:21:25.240 --> 00:21:28.640
or they're they're user specifiable.

NOTE Confidence: 0.78639258

00:21:28.640 --> 00:21:32.890
And so this is a problem and we have to

NOTE Confidence: 0.78639258

00:21:32.890 --> 00:21:37.650
submit an issue to the library working

NOTE Confidence: 0.78639258

00:21:37.650 --> 00:21:43.237
group WG and so I wrote this issue.

NOTE Confidence: 0.78639258

00:21:43.240 --> 00:21:46.068
And see if I will open it.

NOTE Confidence: 0.78639258

00:21:46.070 --> 00:21:46.710
Remember how?

NOTE Confidence: 0.77352087

00:21:50.250 --> 00:21:53.118
Here's the thing. There we go.

NOTE Confidence: 0.77352087

00:21:53.120 --> 00:21:53.880
Saved it to my desk.

NOTE Confidence: 0.84934741

00:21:59.220 --> 00:21:59.598
There we go.

NOTE Confidence: 0.829164178571429

00:22:04.420 --> 00:22:09.229
So we have to e-mail the uh.

NOTE Confidence: 0.829164178571429

00:22:09.230 --> 00:22:12.836
The person who is in charge

NOTE Confidence: 0.829164178571429

00:22:12.836 --> 00:22:16.849
of LDG issues who is LWG dash

NOTE Confidence: 0.829164178571429

00:22:16.850 --> 00:22:20.050
chair@gmail.com and also Daniel Krugler.

NOTE Confidence: 0.829164178571429

00:22:20.050 --> 00:22:22.586
I think Casey please unmute and tell us

NOTE Confidence: 0.829164178571429

00:22:22.586 --> 00:22:25.192
what the actual correct thing to do is

NOTE Confidence: 0.829164178571429

00:22:25.192 --> 00:22:27.699
because I just did what other people

NOTE Confidence: 0.829164178571429

00:22:27.699 --> 00:22:30.039
together correcting is to e-mail an

NOTE Confidence: 0.829164178571429

00:22:30.039 --> 00:22:34.030
issue submission to LBG chair. Yeah.

NOTE Confidence: 0.829164178571429

00:22:34.030 --> 00:22:35.740
And whoever monitors that address

NOTE Confidence: 0.829164178571429

00:22:35.740 --> 00:22:37.450
is whoever monitors that address.

NOTE Confidence: 0.829164178571429

00:22:37.450 --> 00:22:38.550
It's not really important.

NOTE Confidence: 0.829164178571429

00:22:38.550 --> 00:22:40.524
But yeah, in practice it's Daniel.

NOTE Confidence: 0.829164178571429

00:22:40.524 --> 00:22:43.368
I'm looking at this and I don't see

NOTE Confidence: 0.829164178571429

00:22:43.368 --> 00:22:45.880
how you get a Comcast out of this.

NOTE Confidence: 0.829164178571429

00:22:45.880 --> 00:22:50.850
Ah, because it's actually very easy, OK?

NOTE Confidence: 0.829164178571429

00:22:50.850 --> 00:22:57.900
Have this very simple uh? Uh.

NOTE Confidence: 0.829164178571429

00:22:57.900 --> 00:23:00.965
Function object which just returns

NOTE Confidence: 0.829164178571429

00:23:00.965 --> 00:23:04.600
the second thing. This is.

NOTE Confidence: 0.829164178571429

00:23:04.600 --> 00:23:05.360
Trivially correct.

NOTE Confidence: 0.829164178571429

00:23:05.360 --> 00:23:08.400
It's not very useful to fold over it,

NOTE Confidence: 0.829164178571429

00:23:08.400 --> 00:23:11.830
but it is trivially correct.

NOTE Confidence: 0.829164178571429

00:23:11.830 --> 00:23:13.800
Calling fold right as because

NOTE Confidence: 0.829164178571429

00:23:13.800 --> 00:23:16.274
this returns a char star carestar

NOTE Confidence: 0.829164178571429

00:23:16.274 --> 00:23:17.970
P equals full right.

NOTE Confidence: 0.829164178571429

00:23:17.970 --> 00:23:21.434
Use empty carestar which is an empty range.

NOTE Confidence: 0.829164178571429

00:23:21.440 --> 00:23:24.370
Hello with this second function

NOTE Confidence: 0.829164178571429

00:23:24.370 --> 00:23:27.300
object will initialize P with

NOTE Confidence: 0.829164178571429

00:23:27.398 --> 00:23:29.798
constrast carestar hello.

NOTE Confidence: 0.829164178571429

00:23:29.800 --> 00:23:30.640
Because.

NOTE Confidence: 0.806850814

00:23:32.660 --> 00:23:35.200
If first equals, equals last.

NOTE Confidence: 0.806850814

00:23:35.200 --> 00:23:37.462
It will return you which is

NOTE Confidence: 0.806850814

00:23:37.462 --> 00:23:39.470
the return type of this.

NOTE Confidence: 0.735261246666667

00:23:41.640 --> 00:23:46.038
Of in it. And in it is a constant care star.

NOTE Confidence: 0.715956973333333

00:23:50.750 --> 00:23:52.226
That's how you can't cast with.

NOTE Confidence: 0.715956973333333

00:23:52.230 --> 00:23:54.246
Yeah, sorry, I'm. I'm a moron.

NOTE Confidence: 0.715956973333333

00:23:54.250 --> 00:23:55.909
I'm speaking faster than I could think.

NOTE Confidence: 0.715956973333333

00:23:55.910 --> 00:23:57.194
I'm I was thinking that since

NOTE Confidence: 0.715956973333333

00:23:57.194 --> 00:23:58.529
you as a result of decay,

NOTE Confidence: 0.715956973333333

00:23:58.530 --> 00:24:00.644
it could never be a constant type.

NOTE Confidence: 0.715956973333333

00:24:00.650 --> 00:24:02.450
And yeah, that doesn't matter,

NOTE Confidence: 0.715956973333333

00:24:02.450 --> 00:24:03.515
because it's the target type

NOTE Confidence: 0.715956973333333

00:24:03.515 --> 00:24:04.580
of the conversion of the

NOTE Confidence: 0.715956973333333

00:24:04.629 --> 00:24:05.839
source type of the conversion.

NOTE Confidence: 0.715956973333333

00:24:05.840 --> 00:24:09.780
Right? Right. Ignore Casey.

NOTE Confidence: 0.715956973333333

00:24:09.780 --> 00:24:12.410
So clearly this is bad.

NOTE Confidence: 0.715956973333333

00:24:12.410 --> 00:24:14.671
We do not want to allow people

NOTE Confidence: 0.715956973333333

00:24:14.671 --> 00:24:16.968
to get a cart care star.

NOTE Confidence: 0.715956973333333

00:24:16.970 --> 00:24:20.056
From a cost care star without explicitly

NOTE Confidence: 0.715956973333333

00:24:20.056 --> 00:24:23.920
asking for it and fold right is not

NOTE Confidence: 0.715956973333333

00:24:24.017 --> 00:24:27.594
explicitly asked asking for a cost cast.

NOTE Confidence: 0.715956973333333

00:24:27.600 --> 00:24:29.248
For very similar reasons.

NOTE Confidence: 0.715956973333333

00:24:29.248 --> 00:24:31.778
Um, you could have, I don't know,

NOTE Confidence: 0.715956973333333

00:24:31.780 --> 00:24:37.570
this return a it's star.

NOTE Confidence: 0.715956973333333

00:24:37.570 --> 00:24:41.147
Have this be an unsigned long long.

NOTE Confidence: 0.715956973333333

00:24:41.150 --> 00:24:43.290
Yeah, no, that wouldn't work.

NOTE Confidence: 0.715956973333333

00:24:43.290 --> 00:24:44.970
You, you. There is some way to

NOTE Confidence: 0.715956973333333

00:24:44.970 --> 00:24:46.729
make this a reinterpret cast.

NOTE Confidence: 0.715956973333333

00:24:46.730 --> 00:24:49.266
I am asserting. Ohh yeah it would be.

NOTE Confidence: 0.715956973333333

00:24:49.270 --> 00:24:50.230
You just have to have.

NOTE Confidence: 0.910337034285714

00:25:02.900 --> 00:25:04.517
And this would do the same thing,

NOTE Confidence: 0.910337034285714

00:25:04.520 --> 00:25:07.280
except with her reinterpret cast.

NOTE Confidence: 0.910337034285714

00:25:07.280 --> 00:25:09.869
This is bad.

NOTE Confidence: 0.910337034285714

00:25:09.870 --> 00:25:14.490
And so we've wrote up this issue.

NOTE Confidence: 0.910337034285714

00:25:14.490 --> 00:25:16.716
Now, this is the only part of

NOTE Confidence: 0.910337034285714

00:25:16.716 --> 00:25:18.370
the actual thing you need.

NOTE Confidence: 0.910337034285714

00:25:18.370 --> 00:25:20.127
If you want to write an issue,

NOTE Confidence: 0.910337034285714

00:25:20.130 --> 00:25:22.888
you can say, look, we see this,

NOTE Confidence: 0.910337034285714

00:25:22.890 --> 00:25:25.046
we think that there's an issue here.

NOTE Confidence: 0.910337034285714

00:25:25.050 --> 00:25:28.086
We don't necessarily have the solution,

NOTE Confidence: 0.910337034285714

00:25:28.090 --> 00:25:30.127
but we know that there's a problem.

NOTE Confidence: 0.910337034285714

00:25:30.130 --> 00:25:32.330
However, in this case, there is a very,

NOTE Confidence: 0.910337034285714

00:25:32.330 --> 00:25:36.230
very obvious solution, and so I.

NOTE Confidence: 0.910337034285714

00:25:36.230 --> 00:25:37.742
In fact, proposed resolution

NOTE Confidence: 0.910337034285714

00:25:37.742 --> 00:25:40.450
and the way that you do this,

NOTE Confidence: 0.910337034285714

00:25:40.450 --> 00:25:41.686
at least the way that my

NOTE Confidence: 0.910337034285714

00:25:41.686 --> 00:25:42.889
understanding is that you do this.

NOTE Confidence: 0.910337034285714

00:25:42.890 --> 00:25:44.647
Casey, please correct me if I'm wrong.

NOTE Confidence: 0.910337034285714

00:25:44.650 --> 00:25:46.698
Is you basically just?

NOTE Confidence: 0.910337034285714

00:25:46.698 --> 00:25:50.038
Give them a patch, and in this case

NOTE Confidence: 0.910337034285714

00:25:50.038 --> 00:25:52.270
you would have our dot fold P3,

NOTE Confidence: 0.910337034285714

00:25:52.270 --> 00:25:53.834
which is algorithm dot.

NOTE Confidence: 0.910337034285714

00:25:53.834 --> 00:25:55.398
That's the wrong one.

NOTE Confidence: 0.910337034285714

00:25:55.400 --> 00:25:59.060
Algorithm dot fold paragraph 3.

NOTE Confidence: 0.910337034285714

00:25:59.060 --> 00:26:01.013
And we replace return used to move

NOTE Confidence: 0.910337034285714

00:26:01.013 --> 00:26:03.088
in it with return static cast.

NOTE Confidence: 0.910337034285714

00:26:03.090 --> 00:26:04.840
Use to move in it.

NOTE Confidence: 0.910337034285714

00:26:04.840 --> 00:26:08.480
And in our gut fold piece 7.

NOTE Confidence: 0.910337034285714

00:26:08.480 --> 00:26:10.778
Just this one right here we

NOTE Confidence: 0.910337034285714

00:26:10.778 --> 00:26:13.146
change returns to move first you

NOTE Confidence: 0.910337034285714

00:26:13.146 --> 00:26:15.402
should move and it with returns

NOTE Confidence: 0.910337034285714

00:26:15.402 --> 00:26:17.920
to move first static cast you.

NOTE Confidence: 0.910337034285714

00:26:17.920 --> 00:26:20.216
And that's all that you really need.

NOTE Confidence: 0.910337034285714

00:26:20.220 --> 00:26:20.659
Um.

NOTE Confidence: 0.910337034285714

00:26:20.659 --> 00:26:23.293
Casey, please say anything that you

NOTE Confidence: 0.910337034285714

00:26:23.293 --> 00:26:26.598
would like to say about this process.

NOTE Confidence: 0.910337034285714

00:26:26.600 --> 00:26:28.263
No, no, you're you're done, right?

NOTE Confidence: 0.910337034285714

00:26:28.263 --> 00:26:29.397
This is how it works, right?

NOTE Confidence: 0.910337034285714

00:26:29.397 --> 00:26:30.482
You you basically just need

NOTE Confidence: 0.910337034285714

00:26:30.482 --> 00:26:31.859
to state what the problem is.

NOTE Confidence: 0.910337034285714

00:26:31.860 --> 00:26:33.080
And if you like,

NOTE Confidence: 0.910337034285714

00:26:33.080 --> 00:26:34.300
you submit a resolution,

NOTE Confidence: 0.910337034285714

00:26:34.300 --> 00:26:36.428
and a resolution takes the form of changes

NOTE Confidence: 0.910337034285714

00:26:36.428 --> 00:26:38.597
to the wording of the working draft.

NOTE Confidence: 0.910337034285714

00:26:38.600 --> 00:26:42.566
Yeah, this is a great submission.

NOTE Confidence: 0.910337034285714

00:26:42.570 --> 00:26:46.147
I have submitted many LWG issues personally.

NOTE Confidence: 0.910337034285714

00:26:46.150 --> 00:26:46.740
Uh,

NOTE Confidence: 0.910337034285714

00:26:46.740 --> 00:26:47.920
let's see.

NOTE Confidence: 0.8225296975

00:26:51.700 --> 00:26:54.060
Don't know the wait, that's the wrong one.

NOTE Confidence: 0.8225296975

00:26:54.060 --> 00:26:58.032
She 21 dot link slash WG 1000

NOTE Confidence: 0.8225296975

00:26:58.032 --> 00:27:00.160
this is the best way I know to

NOTE Confidence: 0.8225296975

00:27:00.230 --> 00:27:01.902
get to the actual issues list.

NOTE Confidence: 0.8225296975

00:27:01.902 --> 00:27:03.830
I'm sure that there is a better way.

NOTE Confidence: 0.931398377777778

00:27:08.070 --> 00:27:11.436
I have a lot of these kinds of things.

NOTE Confidence: 0.931398377777778

00:27:11.440 --> 00:27:14.146
And you'll notice that I don't

NOTE Confidence: 0.931398377777778

00:27:14.146 --> 00:27:16.440
know the correct solution here.

NOTE Confidence: 0.931398377777778

00:27:16.440 --> 00:27:18.672
All I know is there is a problem

NOTE Confidence: 0.931398377777778

00:27:18.672 --> 00:27:21.130
and so I don't actually submit

NOTE Confidence: 0.931398377777778

00:27:21.130 --> 00:27:22.954
a proposed resolution here,

NOTE Confidence: 0.931398377777778

00:27:22.960 --> 00:27:26.446
and that's totally fine as well.

NOTE Confidence: 0.931398377777778

00:27:26.450 --> 00:27:28.148
Um. Alright, that that's kind of

NOTE Confidence: 0.931398377777778

00:27:28.148 --> 00:27:30.350
all I wanted to talk about today.

NOTE Confidence: 0.931398377777778

00:27:30.350 --> 00:27:32.486
I just wanted to talk about

NOTE Confidence: 0.931398377777778

00:27:32.486 --> 00:27:34.657
how someone would look at the

NOTE Confidence: 0.931398377777778

00:27:34.657 --> 00:27:36.667
wording and be like that looks

NOTE Confidence: 0.931398377777778

00:27:36.667 --> 00:27:39.050
wrong and how to submit an issue.

NOTE Confidence: 0.931398377777778

00:27:39.050 --> 00:27:43.248
You just. It's open outlook.

NOTE Confidence: 0.931398377777778

00:27:43.250 --> 00:27:45.320
Really hope that there's no.

NOTE Confidence: 0.83883915

00:27:47.920 --> 00:27:51.780
Microsoft internal stuff there isn't.

NOTE Confidence: 0.83883915

00:27:51.780 --> 00:27:54.349
Mostly because no one cares about me.

NOTE Confidence: 0.83883915

00:27:54.350 --> 00:27:55.820
And wants to send me interesting.

NOTE Confidence: 0.718090414

00:27:58.510 --> 00:28:00.030
OK, there we go.

NOTE Confidence: 0.718090414

00:28:00.030 --> 00:28:02.586
So you just do LWG chair who

NOTE Confidence: 0.718090414

00:28:02.586 --> 00:28:03.690
is currently Jonathan Wakely.

NOTE Confidence: 0.718090414

00:28:03.690 --> 00:28:07.870
Apparently you do new issue

NOTE Confidence: 0.718090414

00:28:07.870 --> 00:28:09.938
request and you your issue.

NOTE Confidence: 0.464230873333333

00:28:12.870 --> 00:28:14.418
No, no, that's.

NOTE Confidence: 0.7984930825

00:28:18.220 --> 00:28:26.760
What, no $5 sign? OK. And then copying this.

NOTE Confidence: 0.901226214545455

00:28:29.260 --> 00:28:31.072
I don't think you have to

NOTE Confidence: 0.901226214545455

00:28:31.072 --> 00:28:32.710
send it as marked down.

NOTE Confidence: 0.901226214545455

00:28:32.710 --> 00:28:34.642
I do because I'm the kind

NOTE Confidence: 0.901226214545455

00:28:34.642 --> 00:28:36.690
of nerd who likes markdown,

NOTE Confidence: 0.901226214545455

00:28:36.690 --> 00:28:38.910
and I think it looks pretty.

NOTE Confidence: 0.901226214545455

00:28:38.910 --> 00:28:42.126
But you send that off and you're done,

NOTE Confidence: 0.901226214545455

00:28:42.126 --> 00:28:43.686
and they'll send you back

NOTE Confidence: 0.901226214545455

00:28:43.686 --> 00:28:45.330
an e-mail eventually with.

NOTE Confidence: 0.901226214545455

00:28:45.330 --> 00:28:47.780
You know this is an issue or

NOTE Confidence: 0.901226214545455

00:28:47.780 --> 00:28:48.830
this needs clarification,

NOTE Confidence: 0.901226214545455

00:28:48.830 --> 00:28:51.217
and you continue talking to them and.

NOTE Confidence: 0.851343181666667

00:28:53.300 --> 00:28:54.836
They will. They will make it.

NOTE Confidence: 0.851343181666667

00:28:54.840 --> 00:28:55.720
I'll make sure it works.

NOTE Confidence: 0.903332719090909

00:28:58.900 --> 00:28:59.634
Alright, cool.

NOTE Confidence: 0.903332719090909

00:28:59.634 --> 00:29:03.090
That's kind of all I wanted to talk about.

NOTE Confidence: 0.903332719090909

00:29:03.090 --> 00:29:04.448
Is there anything you wanted to say,

NOTE Confidence: 0.903332719090909

00:29:04.450 --> 00:29:07.270
Casey, about this kind of stuff?

NOTE Confidence: 0.903332719090909

00:29:07.270 --> 00:29:09.196
No, you're the person who's been

NOTE Confidence: 0.903332719090909

00:29:09.196 --> 00:29:11.420
on the team for a lot longer.

NOTE Confidence: 0.903332719090909

00:29:11.420 --> 00:29:13.405
Anybody could submit an WG issue, right,

NOTE Confidence: 0.903332719090909

00:29:13.405 --> 00:29:17.670
if you don't have to be an implementer?

NOTE Confidence: 0.903332719090909

00:29:17.670 --> 00:29:19.414
If you find a defect in the standard,

NOTE Confidence: 0.903332719090909

00:29:19.420 --> 00:29:20.380
you can submit an issue.

NOTE Confidence: 0.903332719090909

00:29:20.380 --> 00:29:21.580
If it's in the library section,

NOTE Confidence: 0.903332719090909

00:29:21.580 --> 00:29:23.500
it should go to LWG chair.

NOTE Confidence: 0.903332719090909

00:29:23.500 --> 00:29:24.774
If it isn't in the library section,

NOTE Confidence: 0.903332719090909

00:29:24.780 --> 00:29:26.805
I think WG Chair will route it to the

NOTE Confidence: 0.903332719090909

00:29:26.805 --> 00:29:28.755
core people and get the right place.

NOTE Confidence: 0.903332719090909

00:29:28.760 --> 00:29:30.704
So. That's how we deal with

NOTE Confidence: 0.903332719090909

00:29:30.704 --> 00:29:32.690
bug reports for the standard,

NOTE Confidence: 0.903332719090909

00:29:32.690 --> 00:29:34.181
yeah, and there are a lot of

NOTE Confidence: 0.903332719090909

00:29:34.181 --> 00:29:35.789
bugs in the standard because,

NOTE Confidence: 0.903332719090909

00:29:35.790 --> 00:29:38.535
like every massive document worked

NOTE Confidence: 0.903332719090909

00:29:38.535 --> 00:29:42.030
on by massive numbers of people.

NOTE Confidence: 0.903332719090909

00:29:42.030 --> 00:29:43.290
People write bugs.

NOTE Confidence: 0.903332719090909

00:29:43.290 --> 00:29:45.810
It's it's really easy to do.

NOTE Confidence: 0.903332719090909

00:29:45.810 --> 00:29:47.362
Especially when you're doing

NOTE Confidence: 0.903332719090909

00:29:47.362 --> 00:29:48.526
things too right.

NOTE Confidence: 0.903332719090909

00:29:48.530 --> 00:29:50.420
That's because a large part of the

NOTE Confidence: 0.903332719090909

00:29:50.420 --> 00:29:51.789
implementer job is to implement

NOTE Confidence: 0.903332719090909

00:29:51.789 --> 00:29:53.289
the new wording and find the

NOTE Confidence: 0.903332719090909

00:29:53.289 --> 00:29:55.068
bugs in the new wording thereby,

NOTE Confidence: 0.903332719090909

00:29:55.070 --> 00:29:56.648
which is, you know, very easy.

NOTE Confidence: 0.903332719090909

00:29:56.650 --> 00:29:57.748
We we find lots of them.

NOTE Confidence: 0.903332719090909

00:29:57.750 --> 00:29:58.926
Every time we implement a new feature,

NOTE Confidence: 0.903332719090909

00:29:58.930 --> 00:30:01.211
there's usually three or four different

NOTE Confidence: 0.903332719090909

00:30:01.211 --> 00:30:03.617
defects that need to be reported.

NOTE Confidence: 0.903332719090909

00:30:03.620 --> 00:30:04.978
It's a fun part of our job.

NOTE Confidence: 0.834035454615385

00:30:07.990 --> 00:30:09.010
He said that sarcastically,

NOTE Confidence: 0.834035454615385

00:30:09.010 --> 00:30:10.540
but I think that is the

NOTE Confidence: 0.834035454615385

00:30:10.598 --> 00:30:12.202
fun part of it is to me.

NOTE Confidence: 0.834035454615385

00:30:12.202 --> 00:30:14.533
It really is to me because I'm a

NOTE Confidence: 0.834035454615385

00:30:14.533 --> 00:30:16.550
standard nerd, so I don't mind it.

NOTE Confidence: 0.834035454615385

00:30:16.550 --> 00:30:18.668
But it's kind of funny that,

NOTE Confidence: 0.834035454615385

00:30:18.670 --> 00:30:20.090
you know, when you're implementing

NOTE Confidence: 0.834035454615385

00:30:20.090 --> 00:30:21.226
the C++ standard library.

NOTE Confidence: 0.834035454615385

00:30:21.230 --> 00:30:22.706
It's like we don't design anything.

NOTE Confidence: 0.834035454615385

00:30:22.710 --> 00:30:24.397
We have the the design already presented

NOTE Confidence: 0.834035454615385

00:30:24.397 --> 00:30:26.190
for us in the form of the spec,

NOTE Confidence: 0.834035454615385

00:30:26.190 --> 00:30:27.606
and we're supposed to work to the spec,

NOTE Confidence: 0.834035454615385

00:30:27.610 --> 00:30:28.650
except that, you know,

NOTE Confidence: 0.834035454615385

00:30:28.650 --> 00:30:30.210
we're also supposed to be fixing

NOTE Confidence: 0.834035454615385

00:30:30.267 --> 00:30:31.497
the spec when it's broken.

NOTE Confidence: 0.8112174425

00:30:33.630 --> 00:30:36.958
I mean that's the. I think that's the

NOTE Confidence: 0.8112174425

00:30:36.958 --> 00:30:40.417
fun part of being a a a language tool

NOTE Confidence: 0.8112174425

00:30:40.417 --> 00:30:43.993
implementer is that we do get to like.

NOTE Confidence: 0.8112174425

00:30:44.000 --> 00:30:47.006
Be the people who are making sure that

NOTE Confidence: 0.8112174425

00:30:47.006 --> 00:30:48.590
the language is the best it can be.

NOTE Confidence: 0.84666052

00:30:51.550 --> 00:30:52.950
Alright, well thanks y'all.

NOTE Confidence: 0.84666052

00:30:52.950 --> 00:30:54.350
This is pretty short,

NOTE Confidence: 0.84666052

00:30:54.350 --> 00:30:57.094
but I hope it was helpful and kind

NOTE Confidence: 0.84666052

00:30:57.094 --> 00:31:00.267
of gave you insight on how we solve

NOTE Confidence: 0.84666052

00:31:00.267 --> 00:31:03.216
these kinds of things because they do

NOTE Confidence: 0.84666052

00:31:03.216 --> 00:31:07.340
come up quite often. Especially in.

NOTE Confidence: 0.84666052

00:31:07.340 --> 00:31:10.496
Weird Edge Casey kind of things.

NOTE Confidence: 0.84666052

00:31:10.500 --> 00:31:15.004
Uh, like. Unrelated to Casey Carter,

NOTE Confidence: 0.84666052

00:31:15.004 --> 00:31:17.480
but Weird Edge Casey kind of things.

NOTE Confidence: 0.84666052

00:31:17.480 --> 00:31:20.240
Uh, where you know?

NOTE Confidence: 0.84666052

00:31:20.240 --> 00:31:23.504
Functional style cast doing

NOTE Confidence: 0.84666052

00:31:23.504 --> 00:31:26.768
a Comcast is absolutely.

NOTE Confidence: 0.84666052

00:31:26.770 --> 00:31:28.249
Bat **** behavior.

NOTE Confidence: 0.861611662222222

00:31:30.670 --> 00:31:32.212
But that's the language that we

NOTE Confidence: 0.861611662222222

00:31:32.212 --> 00:31:35.310
were stuck with, and so we will uh,

NOTE Confidence: 0.861611662222222

00:31:35.310 --> 00:31:37.655
we we gotta make sure that we

NOTE Confidence: 0.861611662222222

00:31:37.655 --> 00:31:39.857
fix those stuff when we see it.

NOTE Confidence: 0.861611662222222

00:31:39.860 --> 00:31:42.320
Alright, thanks so much. Bye.

NOTE Confidence: 0.901870914545455

00:31:45.790 --> 00:31:47.295
OK, now I have to figure out

NOTE Confidence: 0.901870914545455

00:31:47.295 --> 00:31:48.999
how to turn off. There we go.
